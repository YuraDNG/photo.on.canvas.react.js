{"version":3,"sources":["store/api.ts","store/auth/types.ts","store/auth/actions.ts","store/instagram/types.ts","components/navigation/adminNav.tsx","components/navigation/navbar.tsx","components/general/modalWindow/modalWindow.tsx","components/home/instagram/item.tsx","store/instagram/actions.ts","store/gallery/types.ts","components/home/instagram/reviews.tsx","components/home/instagram/vizualizations.tsx","components/home/text.tsx","components/home/instagram/prices.tsx","pages/home.tsx","store/gallery/actions.ts","store/canvas/types.ts","components/gallery/images.tsx","pages/gallery.tsx","helpers/useInput.ts","store/canvas/actions.ts","store/order/types.ts","store/order/actions.ts","store/registration/types.ts","components/general/submitButton/submitButton.tsx","components/orders/orderValidations.ts","components/orders/makeOrderForm.tsx","pages/makeOrder.tsx","components/signIn/authValidations.ts","components/signIn/loginForm.tsx","store/registration/actions.ts","store/emailSettings/types.ts","components/signIn/registrationForm.tsx","pages/auth.tsx","store/instaSettings/types.ts","store/emailSettings/actions.ts","components/general/spinner.tsx","components/settings/emailSettings.tsx","store/users/types.ts","store/instaSettings/actions.ts","components/settings/instaValidations.ts","components/settings/instaSettings.tsx","pages/settings.tsx","components/general/alert/alert.tsx","components/general/pagination.tsx","components/general/deleteIcon/deleteIcon.tsx","components/orders/ordersList.tsx","components/orders/orders.tsx","store/users/actions.ts","store/roles/types.ts","components/users/rolesControl.tsx","components/users/userList.tsx","store/roles/actions.ts","components/users/users.tsx","components/general/preloader/preloader.tsx","App.tsx","registerServiceWorker.js","store/base/types.ts","store/order/reducers.ts","store/registration/reducers.ts","store/users/reducers.ts","store/roles/reducers.ts","store/canvas/reducers.ts","store/emailSettings/reducers.ts","store/gallery/reducers.ts","store/instagram/reducers.ts","store/instaSettings/reducers.ts","store/auth/reducers.ts","store/index.ts","index.tsx"],"names":["api","AuthActionsTypesEnum","InstaActionsTypesEnum","showLoaderAuth","data","type","showLoader","payload","loginThunk","dispatch","Axios","post","login","headers","withCredentials","then","res","localStorage","setItem","isAdminThunk","catch","err","showAlert","setTimeout","hideAlert","showAlertAuth","getItem","get","isAdmin","isAuthenticatedThunk","isAuthenticated","logoutThunk","logout","removeItem","AdminNav","className","to","exact","Navbar","useDispatch","useSelector","state","auth","useEffect","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","adminPanelLink","onClick","ModalWindow","props","e","setIsOpen","html","Item","useState","isOpen","src","item","imageUri","alt","videoUri","autoPlay","GalleryActionsTypesEnum","showLoaderInsta","showAlertInsta","getStoriesThunk","getInstaStories","fetchStories","error","console","log","Reviews","stories","instagram","count","addClass","document","querySelector","classList","add","data-ride","filter","x","category","map","href","role","data-slide","aria-hidden","Vizualizations","Text","Prices","Home","CanvasActionsTypesEnum","showLoaderGallery","showAlertGallery","getImagesThunk","galleryGetImages","fetchImages","Images","images","gallery","submitHandler","event","formData","FormData","target","preventDefault","galleryAddImage","statusText","onSubmit","accept","name","image","imageId","delete","galleryDeleteImage","params","Gallery","useInput","initValue","validations","value","setValue","wasFocused","setFocused","setError","style","setStyle","disabledButton","length","validator","borderColor","borderWidth","borderStyle","set","onChange","onBlur","OrdersActionsTypesEnum","makeOrderEnum","showLoaderCanvas","showAlertCanvas","getCanvasThunk","getCanvas","fetchCanvas","RegisterActionsTypesEnum","showLoaderOrders","showAlertOrders","getOrdersThunk","getOrders","pageNumber","pageSize","fetchOrders","SubmitButton","disabled","text","nameValidators","phoneValidators","addressValidators","canvasIdValidators","MakeOrderForm","canvas","canvasData","setImage","phone","address","canvasId","info","getUserData","makeOrder","customerName","phoneNumber","selected","files","URL","createObjectURL","placeholder","rows","MakeOrder","emailValidators","passwordValidators","LoginForm","email","password","onFocus","EmailSettingsEnum","EmailSettingsActionsTypesEnum","showLoaderRegister","registerThunk","registration","showAlertRegister","RegistrationForm","confirmPassword","Auth","InstaSettingsEnum","InstaSettingsActionsTypesEnum","getEmailConfigThunk","getEmailConfig","fetchEmailSettings","Spinner","marginTop","width","height","EmailSettings","emailSettings","alert","emailSettingsData","serviceIsOn","from","smtpServer","port","userName","setEmailConfig","setEmailConfigThunk","checked","UserEnum","UserActionsTypesEnum","getInstaConfigThunk","getInstaConfig","fetchInstaSettings","setInstaConfigThunk","setInstaConfig","updateInsatStories","usernameValidators","InstaSettings","instaSettings","instaSettingsData","username","msgReceivers","msgReceiverList","Settings","Alert","display","Pagination","paginationHandler","handler","currentTarget","currentPage","Number","hasPrevious","content","i","totalPages","push","numberOfPage","hasNext","DeleteIcon","onClickHandler","OrdersList","pages","order","ordersData","orders","pagProps","deleteOrder","orderId","result","window","confirm","deleteOrderThunk","scope","Orders","textAlign","RolesActionsTypesEnum","showLoaderUsers","showAlertUsers","getUsersThunk","config","getUsers","fetchUsers","RolesControl","allRoles","roles","rolesData","Set","chekedItems","setChekedItems","changeUserRoles","userId","Array","editUserRoles","has","UserList","user","usersData","users","deleteUser","deleteUserThunk","rolePanel","showLoaderRoles","showAlertRoles","getRolesThunk","getRoles","fetchRoles","Users","Preloader","body","onload","remove","App","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","baseInitialState","initialState","elementsCount","reviews","visualizations","rootReducer","combineReducers","reg","action","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.fddb33a6.chunk.js","sourcesContent":["\r\nexport enum api {\r\n  getUsers = \"http://localhost:5000/api/Account/GetUsers\",\r\n  deleteUser = \"http://localhost:5000/api/Account/DeleteUser\",\r\n  registration = \"http://localhost:5000/api/Account/Register\",\r\n  confirmEmail = \"http://localhost:5000/api/Account/ConfirmEmail\",\r\n  login = \"http://localhost:5000/api/Account/Login\",\r\n  logout = \"http://localhost:5000/api/Account/Logout\",\r\n  getUserData = \"http://localhost:5000/api/Account/GetUserData\",\r\n  isAdmin = \"http://localhost:5000/api/Account/IsAdmin\",\r\n  isAuthenticated = \"http://localhost:5000/api/Account/isAuthenticated\",\r\n\r\n  galleryAddImage = \"http://localhost:5000/api/Gallery/AddImage\",\r\n  galleryGetImages = \"http://localhost:5000/api/Gallery/GetImages\",\r\n  galleryDeleteImage = \"http://localhost:5000/api/Gallery/DeleteImage\",\r\n\r\n  getCanvas = \"http://localhost:5000/api/Canvas/GetCanvas\",\r\n  createCanvas = \"http://localhost:5000/api/Canvas/CreateCanvas\",\r\n  deleteCanvas = \"http://localhost:5000/api/Canvas/DeleteCanvas\",\r\n\r\n  getOrders = \"http://localhost:5000/api/Order/GetOrders\",\r\n  makeOrder = \"http://localhost:5000/api/Order/MakeOrder\",\r\n  deleteOrder = \"http://localhost:5000/api/Order/DeleteOrder\",\r\n  \r\n  createRole = \"http://localhost:5000/api/Roles/CreateRole\",\r\n  deleteRole = \"http://localhost:5000/api/Roles/DeleteRole\",\r\n  getRoles = \"http://localhost:5000/api/Roles/GetRoles\",\r\n  getUserRoles = \"http://localhost:5000/api/Roles/GetUserRoles\",\r\n  editUserRoles = \"http://localhost:5000/api/Roles/EditUserRoles\",\r\n\r\n  getInstaStories = \"http://localhost:5000/api/Instagram/GetStories\",\r\n  updateInsatStories = \"http://localhost:5000/api/Instagram/UpdateDbInstaDataAsync\",\r\n\r\n  getEmailConfig = \"http://localhost:5000/api/Configuration/GetEmailConfiguration\",\r\n  setEmailConfig = \"http://localhost:5000/api/Configuration/SetEmailConfiguration\",\r\n\r\n  getInstaConfig = \"http://localhost:5000/api/Configuration/GetInstagramConfiguration\",\r\n  setInstaConfig = \"http://localhost:5000/api/Configuration/SetInstagramConfiguration\",\r\n}\r\n\r\n// https://photo-on-canvas.azurewebsites.net","import { IState } from \"../base/types\";\r\n\r\nexport enum AuthActionsTypesEnum {\r\n  showLoader = \"AUTH_SHOW_LOADER\",\r\n  showAlert = \"AUTH_SHOW_ALERT\",\r\n  hideAlert = \"AUTH_HIDE_ALERT\",\r\n  login = \"LOGIN\",\r\n  isAdmin = \"IS_ADMIN\",\r\n  isAuthenticated = \"IS_AUTHENTICATED\",\r\n  logout = \"LOGOUT\"\r\n}\r\n\r\nexport interface ILogin {\r\n  email: string,\r\n  password: string\r\n}\r\n\r\nexport interface ILoginResponse {\r\n  signInResult: {\r\n    succeeded: boolean,\r\n    isLockedOut: boolean,\r\n    isNotAllowed: boolean,\r\n    requiresTwoFactor: boolean\r\n  },\r\n  jwt: string,\r\n}\r\n\r\nexport interface IAuthState extends IState{\r\n  isAuthenticated: boolean,\r\n  isAdmin: boolean,\r\n}\r\n","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { ILogin, AuthActionsTypesEnum, ILoginResponse} from \"./types\";\r\n\r\nconst showLoaderAuth = (data: boolean) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertAuth = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: AuthActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: AuthActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchLoginData = () => {\r\n  return {\r\n    type: AuthActionsTypesEnum.login,\r\n  }\r\n}\r\n\r\nconst isAdmin = (data: boolean) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.isAdmin,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst isAuthenticated = (data: boolean) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.isAuthenticated,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst logout = () => {\r\n  return {\r\n    type: AuthActionsTypesEnum.logout\r\n  }\r\n}\r\n\r\nexport const loginThunk = (data: ILogin) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderAuth(true))\r\n    \r\n    let headers: AxiosRequestConfig = { headers: { \r\n      withCredentials: true, \r\n      \"Content-Type\": \"application/json-patch+json\",\r\n      \"accept\": \"text/plain\" \r\n    }}\r\n\r\n    Axios.post(api.login, data, headers)\r\n      .then(res => {\r\n        localStorage.setItem(\"poc-token\",res.data)\r\n        dispatch(fetchLoginData())\r\n        dispatch(isAdminThunk())\r\n        dispatch(showLoaderAuth(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertAuth(\"Помилка сервера!\"))\r\n        dispatch(showLoaderAuth(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const getUserDataThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }}\r\n\r\n    Axios.get(api.getUserData, headers)\r\n      .then(res => {\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const isAdminThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }}\r\n\r\n    Axios.get(api.isAdmin, headers)\r\n      .then(res => {\r\n        dispatch(isAdmin(res.data))\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const isAuthenticatedThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }}\r\n\r\n    Axios.get(api.isAuthenticated, headers)\r\n      .then(res => {\r\n        dispatch(isAuthenticated(res.data))\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const logoutThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderAuth(true))\r\n    dispatch(logout())\r\n    localStorage.removeItem(\"poc-token\")\r\n    dispatch(showLoaderAuth(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum InstaActionsTypesEnum {\r\n  showLoader = \"INSTAGRAM_SHOW_LOADER\",\r\n  showAlert = \"INSTAGRAM_SHOW_ALERT\",\r\n  hideAlert = \"INSTAGRAM_HIDE_ALERT\",\r\n  fetchStories = \"FETCH_STORIES\",\r\n  fetchReviews = \"FETCH_REVIEWS\",\r\n  fetchVisualizations = \"FETCH_VISUALIZATIONS\"\r\n}\r\n\r\nexport interface IInstaStory {\r\n  id: string,\r\n  category: string,\r\n  imageUri: string,\r\n  videoUri: string\r\n}\r\n\r\nexport interface IInstaState extends IState{\r\n  reviews: IInstaStory[],\r\n  visualizations: IInstaStory[],\r\n  stories: IInstaStory[]\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./adminNav.css\"\r\n\r\nexport const AdminNav: React.FC = () => {\r\n  return <>\r\n    <ul className=\"admin-ul\">\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Orders\" exact>\r\n          <span className=\"material-icons\">view_list</span>\r\n          Список замовлень\r\n        </NavLink>\r\n      </li>\r\n\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Users/\" exact>\r\n          <span className=\"material-icons\">people_alt</span>\r\n          Управління користувачами\r\n        </NavLink>\r\n      </li>\r\n\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Settings/\" exact>\r\n          <span className=\"material-icons\">settings</span>\r\n          Налаштування\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </>\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { isAdminThunk, isAuthenticatedThunk, logoutThunk } from \"../../store/auth/actions\";\r\nimport { AdminNav } from \"./adminNav\"\r\n\r\nimport \"./navbar.css\"\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated)\r\n  const isAdmin = useSelector((state: RootState) => state.auth.isAdmin)\r\n\r\n  useEffect(() => {\r\n    dispatch(isAdminThunk())\r\n    dispatch(isAuthenticatedThunk())\r\n  }, [dispatch])\r\n\r\n  const adminPanelLink = () => {\r\n    if (isAdmin) {\r\n      return <>\r\n        <div className=\"dropdown\">\r\n          <li className=\"nav-item active-item\">\r\n            <div className=\"nav-link link\">\r\n              <span className=\"material-icons\">admin_panel_settings</span>\r\n              Адмін Панель\r\n            </div>\r\n          </li>\r\n\r\n          <div className=\"dropdown-content\">\r\n            <AdminNav />\r\n          </div>\r\n        </div>\r\n      </>\r\n    }\r\n  }\r\n\r\n  const loginPanelLink = () => {\r\n    if (isAuthenticated) {\r\n      return <>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\" exact onClick={() => dispatch(logoutThunk())}>\r\n              <span className=\"material-icons\">logout</span>\r\n              Вийти\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    } else {\r\n      return <>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Auth\" exact>\r\n              <span className=\"material-icons\">login</span>\r\n              Увійти\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <nav className=\"nav navbar-expand\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-icon\">Menu</span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\" exact>\r\n              <span className=\"material-icons\">home</span>\r\n              Головна\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MakeOrder\" exact>\r\n              <span className=\"material-icons\">add_shopping_cart</span>\r\n              Замовити картину\r\n            </NavLink>\r\n          </li>\r\n\r\n          {/* <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Gallery\" exact>\r\n              <span className=\"material-icons\">photo_library</span>\r\n              Галерея\r\n            </NavLink>\r\n          </li> */}\r\n\r\n          {adminPanelLink()}\r\n        </ul>\r\n\r\n        {loginPanelLink()}\r\n      </div>\r\n    </nav>\r\n  </>\r\n}","import React from \"react\"\r\n\r\nimport \"./modalWindow.css\"\r\n\r\nexport const ModalWindow = (props: {html: JSX.Element, setIsOpen: any}): JSX.Element => {\r\n  return <>\r\n      <div className=\"custom-modal\" onClick={e => props.setIsOpen(false)}>\r\n        <div className=\"custom-modal-body\">\r\n          {props.html}\r\n        </div>\r\n      </div>\r\n  </>\r\n}","import React, { useState } from \"react\"\r\nimport { IInstaStory } from \"../../../store/instagram/types\"\r\nimport { ModalWindow } from \"../../general/modalWindow/modalWindow\"\r\n\r\nimport \"./item.css\"\r\n\r\nexport const Item = (props: {item: IInstaStory}): JSX.Element => {\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  return <>\r\n    <img className=\"story-img\" onClick={e => setIsOpen(true)} src={props.item.imageUri} alt=\"...\" />\r\n    {isOpen &&\r\n      <ModalWindow html={\r\n        props.item.videoUri !== null ?\r\n          <video className=\"item\" src={props.item.videoUri} autoPlay={true} /> :\r\n          <img className=\"item\" src={props.item.imageUri} alt=\"...\" />\r\n      } setIsOpen={setIsOpen} />\r\n    }\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IInstaStory, InstaActionsTypesEnum } from \"./types\"\r\n\r\nconst showLoaderInsta = (data: boolean) => {\r\n  return {\r\n    type: InstaActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertInsta = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: InstaActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: InstaActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchStories = (data: IInstaStory[]) => {\r\n  return {\r\n    type: InstaActionsTypesEnum.fetchStories,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getStoriesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderInsta(true))\r\n\r\n    Axios.post(api.getInstaStories)\r\n      .then(res => {\r\n        dispatch(fetchStories(res.data))\r\n        dispatch(showLoaderInsta(false))\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderInsta(false))\r\n        dispatch(showAlertInsta(\"Помилка сервера!\"))\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateStoriesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderInsta(true))\r\n\r\n    Axios.get(api.updateInsatStories)\r\n      .then(res => {\r\n        dispatch(showLoaderInsta(false))\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderInsta(false))\r\n        dispatch(showAlertInsta(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum GalleryActionsTypesEnum {\r\n  showLoader = \"GALLERY_SHOW_LOADER\",\r\n  showAlert = \"GALLERY_SHOW_ALERT\",\r\n  hideAlert = \"GALLERY_HIDE_ALERT\",\r\n  fetchImages = \"GALLERY_FETCH_IMAGES\",\r\n}\r\n\r\nexport interface IImages {\r\n  id: string,\r\n  imageName: string,\r\n  contentType: string,\r\n  image: string\r\n}\r\n\r\nexport interface IGalleryState extends IState{\r\n  images: IImages[]\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../store\"\r\nimport { Item } from \"./item\"\r\nimport { getStoriesThunk } from \"../../../store/instagram/actions\"\r\n\r\nimport \"./stories.css\"\r\nimport \"./carousel.css\"\r\n\r\nexport const Reviews: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const stories = useSelector((state: RootState) => state.instagram.stories)\r\n  var count = 0\r\n\r\n  useEffect(() => {\r\n    dispatch(getStoriesThunk())\r\n  }, [dispatch])\r\n\r\n  var addClass = () => {\r\n    document.querySelector('#rev-item:first-child')?.classList.add(\"active\")\r\n  }\r\n\r\n  return <>\r\n    <div id=\"carousel-rev\" className=\"carousel slide\" data-ride=\"carousel\">\r\n      <h5 className=\"carousel-label\">Відгуки</h5>\r\n\r\n      <div className=\"carousel-inner\">\r\n\r\n        {stories.filter(x => x.category === \"відгуки\").map((item) =>\r\n          <div id=\"rev-item\" key={count++} className=\"carousel-item\">\r\n            {addClass()}\r\n            <Item item={item} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <a className=\"carousel-control-prev\" href=\"#carousel-rev\" role=\"button\" data-slide=\"prev\">\r\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"sr-only\">Previous</span>\r\n      </a>\r\n      <a className=\"carousel-control-next\" href=\"#carousel-rev\" role=\"button\" data-slide=\"next\">\r\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"sr-only\">Next</span>\r\n      </a>\r\n    </div>\r\n  </>\r\n}","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../store\"\r\nimport { getStoriesThunk } from \"../../../store/instagram/actions\"\r\nimport { Item } from \"./item\"\r\n\r\nimport \"./stories.css\"\r\nimport \"./carousel.css\"\r\n\r\nexport const Vizualizations = (): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n  const stories = useSelector((state: RootState) => state.instagram.stories)\r\n  var count = 0\r\n\r\n  useEffect(() => {\r\n    dispatch(getStoriesThunk())\r\n  }, [dispatch])\r\n\r\n  var addClass = () => {\r\n    document.querySelector('#viz-item:first-child')?.classList.add(\"active\")\r\n  }\r\n\r\n  return <>\r\n    <div id=\"carousel-viz\" className=\"carousel slide\" data-ride=\"carousel\">\r\n      <h5 className=\"carousel-label\">Візуалізації</h5>\r\n\r\n      <div className=\"carousel-inner\">\r\n        {stories.filter(x => x.category === \"Візуалізації\").map((item) =>\r\n          <div id=\"viz-item\" key={count++} className=\"carousel-item\">\r\n            <Item item={item} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <a className=\"carousel-control-prev\" href=\"#carousel-viz\" role=\"button\" data-slide=\"prev\">\r\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"sr-only\">Previous</span>\r\n      </a>\r\n      <a className=\"carousel-control-next\" href=\"#carousel-viz\" role=\"button\" data-slide=\"next\">\r\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span className=\"sr-only\">Next</span>\r\n      </a>\r\n    </div>\r\n    {addClass()}\r\n  </>\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./text.css\"\r\n\r\nexport const Text: React.FC = () => {\r\n  return <>\r\n    <div className=\"text\">\r\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae incidunt iusto optio dolores obcaecati, earum provident harum, esse magni at, modi error natus labore reiciendis dolore deleniti tenetur dolorum pariatur!</p>\r\n    </div>\r\n  </>\r\n}","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../../store\"\r\nimport { getStoriesThunk } from \"../../../store/instagram/actions\"\r\n\r\nimport \"./prices.css\"\r\n\r\nexport const Prices: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const stories = useSelector((state: RootState) => state.instagram.stories)\r\n\r\n  useEffect(() => {\r\n    dispatch(getStoriesThunk())\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    {stories.filter(x => x.category === \"ЦІНИ\").map((item) =>\r\n      <img className=\"prices-img\" src={item.imageUri} alt=\"...\" />\r\n    )}\r\n  </>\r\n}","import React, { useEffect } from \"react\"\r\nimport { Reviews } from \"../components/home/instagram/reviews\"\r\nimport { Vizualizations } from \"../components/home/instagram/vizualizations\"\r\nimport { Video } from \"../components/home/video\"\r\nimport { Text } from \"../components/home/text\"\r\nimport { Prices } from \"../components/home/instagram/prices\"\r\nimport { RootState } from \"../store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getStoriesThunk } from \"../store/instagram/actions\"\r\n\r\nimport \"./home.css\"\r\n\r\nexport const Home: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const showLoader = useSelector((state: RootState) => state.instagram.showLoader)\r\n\r\n  useEffect(() => {\r\n    dispatch(getStoriesThunk())\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    <div className=\"home\">\r\n      <div className=\"row block text-block\">\r\n        <Text />\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {/* <div className=\"col-6 block\"><Video /></div> */}\r\n        <div className=\"col-7 block\"><Prices /></div>\r\n        <div className=\"col-5 block\">\r\n          <Vizualizations />\r\n          <Reviews />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row block\">\r\n        {/* <Reviews /> */}\r\n        {/* <Vizualizations /> */}\r\n      </div>\r\n    </div>\r\n  </>\r\n\r\n\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { GalleryActionsTypesEnum, IImages } from \"./types\";\r\n\r\nconst showLoaderGallery = (data: boolean) => {\r\n  return {\r\n    type: GalleryActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertGallery = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: GalleryActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: GalleryActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchImages = (data: IImages) => {\r\n  return {\r\n    type: GalleryActionsTypesEnum.fetchImages,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getImagesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n\r\n    Axios.get(api.galleryGetImages)\r\n      .then(res => {\r\n        dispatch(fetchImages(res.data))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\nexport const addImageThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n    \r\n    let headers: AxiosRequestConfig = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    Axios.post(api.galleryAddImage, data, headers)\r\n      .then(res => {\r\n        dispatch(showAlertGallery(res.statusText))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\nexport const deleteImageThunk = (imageId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n\r\n    Axios.delete(api.galleryDeleteImage, { params: { imageId } })\r\n      .then(res => {\r\n        dispatch(showAlertGallery(res.statusText))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum CanvasActionsTypesEnum {\r\n  showLoader = \"CANVAS_SHOW_LOADER\",\r\n  showAlert = \"CANVAS_SHOW_ALERT\",\r\n  hideAlert = \"CANVAS_HIDE_ALERT\",\r\n  fetchCanvas = \"FETCH_CANVAS\",\r\n}\r\n\r\nexport interface ICanvas {\r\n  id: string,\r\n  name: string,\r\n  price: string,\r\n  size: string,\r\n}\r\n\r\nexport interface ICreateCanvas {\r\n  price: string,\r\n  size: string,\r\n}\r\n\r\nexport interface ICanvasState extends IState{\r\n  canvasData: ICanvas[]\r\n}","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getImagesThunk, addImageThunk, deleteImageThunk } from \"../../store/gallery/actions\"\r\nimport { RootState } from \"../../store/\"\r\n\r\nimport \"./images.css\"\r\n\r\nexport const Images = (): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n  const images = useSelector((state: RootState) => state.gallery.images)\r\n\r\n  useEffect(() => {\r\n    dispatch(getImagesThunk())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(addImageThunk(formData))\r\n  }\r\n\r\n  const addImageButton = () => {\r\n    if (true) {\r\n      return <>\r\n        <form onSubmit={submitHandler}>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            accept=\"image/*\"\r\n            name=\"Image\"\r\n          />\r\n\r\n          <button className=\"add-button\">\r\n            <span className=\"material-icons add-icon\">add</span>\r\n          </button>\r\n        </form>\r\n      </>\r\n    }\r\n  }\r\n\r\n  return <>\r\n    {addImageButton()}\r\n\r\n    {images.map((item) =>\r\n      <div key={item.id}>\r\n        <img className=\"list-img\" src={\"data:image/png;base64,\" + item.image} alt=\"...\" />\r\n        {true && \r\n          <button onClick={e => dispatch(deleteImageThunk(item.id))}>Delete</button>\r\n        }\r\n      </div>\r\n    )}\r\n  </>\r\n}","import React from \"react\";\r\nimport { Images } from \"../components/gallery/images\"\r\n\r\nexport const Gallery: React.FC = () => {\r\n  return <>\r\n    <Images />\r\n  </>\r\n}","import React, { useEffect, useState } from \"react\"\r\n\r\nexport type ValidType = {\r\n  (value: any): string\r\n}\r\n\r\nexport const useInput = (initValue: any, validations?: ValidType[] ) => {\r\n  const [value, setValue] = useState(initValue)\r\n  const [wasFocused, setFocused] = useState(false)\r\n  const [error, setError] = useState(\"\")\r\n  const [style, setStyle] = useState({})\r\n  const disabledButton = error.length !== 0 || !wasFocused ? true : false\r\n  \r\n  const set = (data: any) => {\r\n    setValue(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (wasFocused) {\r\n      validations?.map(validator => {\r\n        setError(validator(value))\r\n      })\r\n    }\r\n  }, [value, wasFocused])\r\n\r\n  useEffect(() => {\r\n    if (error.length !== 0) {\r\n      setStyle({\r\n        borderColor: \"red\",\r\n        borderWidth: \"2px\",\r\n        borderStyle: \"solid\"\r\n      })\r\n    } else if (error.length == 0 && wasFocused){\r\n      setStyle({\r\n        borderColor: \"#0dde0d\",\r\n        borderWidth: \"2px\",\r\n        borderStyle: \"solid\"\r\n      })\r\n    }\r\n  }, [error, value])\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    setValue(event.target.value)\r\n    setFocused(true) \r\n  }\r\n\r\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    setFocused(true) \r\n  }\r\n\r\n  return {\r\n    value,\r\n    set,\r\n    error,\r\n    onChange,\r\n    onBlur,\r\n    style,\r\n    disabledButton\r\n  }\r\n}","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { CanvasActionsTypesEnum, ICanvas, ICreateCanvas } from \"./types\"\r\n\r\nconst showLoaderCanvas = (data: boolean) => {\r\n  return {\r\n    type: CanvasActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertCanvas = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: CanvasActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: CanvasActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchCanvas = (data: ICanvas[]) => {\r\n  return {\r\n    type: CanvasActionsTypesEnum.fetchCanvas,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getCanvasThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.get(api.getCanvas)\r\n      .then(res => {\r\n        dispatch(fetchCanvas(res.data))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\nexport const makeCanvasThunk = (data: ICreateCanvas) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.post(api.createCanvas, data)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\nexport const deleteCanvasThunk = (canvasId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.post(api.deleteCanvas, canvasId)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\nimport { ICanvas } from \"../canvas/types\";\r\n\r\nexport enum OrdersActionsTypesEnum {\r\n  showLoader = \"ORDER_SHOW_LOADER\",\r\n  showAlert = \"ORDER_SHOW_ALERT\",\r\n  hideAlert = \"ORDER_HIDE_ALERT\",\r\n  fetchOrders = \"FETCH_ORDERS\",\r\n}\r\n\r\nexport interface IOrderResponse {\r\n  elementsCount: number,\r\n  pageSize: number,\r\n  currentPage: number,\r\n  totalPages: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean,\r\n  data: IOrder[]\r\n}\r\n\r\nexport interface IOrder {\r\n  id: string,\r\n  customerName: string,\r\n  phoneNumber: string,\r\n  address: string,\r\n  canvas: ICanvas,\r\n  image: string,\r\n}\r\n\r\nexport interface IMakeOrder {\r\n  customerName: string,\r\n  phoneNumber: string,\r\n  address: string,\r\n  canvasId: string,\r\n  image: File,\r\n  info: string,\r\n}\r\n\r\nexport enum makeOrderEnum {\r\n  customerName = \"customerName\",\r\n  phoneNumber = \"phoneNumber\",\r\n  address = \"address\",\r\n  canvasId = \"canvasId\",\r\n  image = \"image\",\r\n  info = \"info\",\r\n} \r\n\r\nexport interface IOrdersState extends IState{\r\n  ordersData: IOrderResponse\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { PageListQueryType } from \"../base/types\";\r\nimport { IOrderResponse, OrdersActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderOrders = (data: boolean) => {\r\n  return {\r\n    type: OrdersActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const showAlertOrders = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: OrdersActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: OrdersActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchOrders = (data: IOrderResponse) => {\r\n  return {\r\n    type: OrdersActionsTypesEnum.fetchOrders,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getOrdersThunk = (data: PageListQueryType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    Axios.get(api.getOrders, { params: { pageNumber: data.pageNumber, pageSize: data.pageSize } })\r\n      .then(res => {\r\n        dispatch(fetchOrders(res.data))\r\n        dispatch(showLoaderOrders(false))\r\n\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const makeOrderThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    let headers: AxiosRequestConfig = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    Axios.post(api.makeOrder, data, headers)\r\n      .then(res => {\r\n        dispatch(showLoaderOrders(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n        console.log(\"make order fail\", err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteOrderThunk = (orderId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    Axios.delete(api.deleteOrder, { params: { orderId: orderId } })\r\n      .then(res => {\r\n        dispatch(showLoaderOrders(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum RegisterActionsTypesEnum {\r\n  showLoader = \"REGISTER_SHOW_LOADER\",\r\n  showAlert = \"REGISTER_SHOW_ALERT\",\r\n  hideAlert = \"REGISTER_HIDE_ALERT\",\r\n  registrate = \"REGISTRATE\",\r\n}\r\n\r\nexport interface IRegister {\r\n  email: string,\r\n  password: string,\r\n  confirmPassword: string\r\n}\r\n\r\nexport interface IRegisterState extends IState {\r\n\r\n}\r\n","import React from \"react\"\r\nimport \"./submitButton.css\"\r\n\r\nexport const SubmitButton = (props: {text: string, disabled?: boolean}): JSX.Element => {\r\n\r\n  return <>\r\n    <button \r\n      type=\"submit\" \r\n      className=\"btn\"\r\n      disabled={props.disabled}\r\n    >{props.text}</button>\r\n  </>\r\n}","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const nameValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const phoneValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const addressValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const canvasIdValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { RootState } from \"../../store\"\r\nimport { getUserDataThunk } from \"../../store/auth/actions\"\r\nimport { getCanvasThunk } from \"../../store/canvas/actions\"\r\nimport { makeOrderThunk } from \"../../store/order/actions\"\r\nimport { makeOrderEnum } from \"../../store/order/types\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\nimport { nameValidators, phoneValidators, addressValidators, canvasIdValidators } from \"./orderValidations\"\r\n\r\nimport \"./makeOrder.css\"\r\n\r\nexport const MakeOrderForm: React.FC = () => {\r\n  const canvas = useSelector((state: RootState) => state.canvas.canvasData)\r\n  const [image, setImage] = useState<string>()\r\n  const dispatch = useDispatch()\r\n\r\n  const name = useInput(\"\", nameValidators)\r\n  const phone = useInput(\"\", phoneValidators)\r\n  const address = useInput(\"\", addressValidators)\r\n  const canvasId = useInput(\"\", canvasIdValidators)\r\n  const info = useInput(\"\",)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCanvasThunk())\r\n    dispatch(getUserDataThunk())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n    formData.set(\"canvasId\", canvasId.value)\r\n\r\n    event.preventDefault()\r\n    dispatch(makeOrderThunk(formData))\r\n  }\r\n\r\n  const imgHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files.length) {\r\n      setImage(URL.createObjectURL(event.target.files[0]))\r\n    } else {\r\n      setImage(\"\")\r\n    }\r\n  }\r\n\r\n  const nameInput = () => {\r\n    return <>\r\n      <div className=\"form-group\">\r\n        <label>Прізвище Імя*</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.customerName}\r\n          value={name.value}\r\n          onChange={e => name.onChange(e)}\r\n          onBlur={e => name.onBlur(e)}\r\n          style={name.style}\r\n        />\r\n        {name.error.length !== 0 &&\r\n          <span className=\"error-span\">{name.error}</span>\r\n        }\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  const phoneInput = () => {\r\n    return <>\r\n      <div className=\"form-group\">\r\n        <label>Номер телефону*</label>\r\n        <input\r\n          type=\"tel\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.phoneNumber}\r\n          value={phone.value}\r\n          onChange={e => phone.onChange(e)}\r\n          onBlur={e => phone.onBlur(e)}\r\n          style={phone.style}\r\n        />\r\n        {phone.error.length !== 0 &&\r\n          <span className=\"error-span\">{phone.error}</span>\r\n        }\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  const addressInput = () => {\r\n    return <>\r\n      <div className=\"form-group\">\r\n        <label>Адрес доставки*</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.address}\r\n          value={address.value}\r\n          onChange={e => address.onChange(e)}\r\n          onBlur={e => address.onBlur(e)}\r\n          style={address.style}\r\n        />\r\n        {address.error.length !== 0 &&\r\n          <span className=\"error-span\">{address.error}</span>\r\n        }\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  const imageInput = () => {\r\n    return <>\r\n      <div className=\"form-group\">\r\n        <label>Завантажити зображення*</label>\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.image}\r\n          accept=\"image/*\"\r\n          onChange={(e) => imgHandler(e)}\r\n        />\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  const canvasInput = () => {\r\n    return <>\r\n      <div className=\"form-group\" >\r\n        <label>Розмір полотна*</label>\r\n        <select className=\"form-control\"\r\n          name={makeOrderEnum.canvasId}\r\n          onChange={e => canvasId.onChange(e)}\r\n          onBlur={e => canvasId.onBlur(e)}\r\n          style={canvasId.style}\r\n        >\r\n          <option disabled selected>Виберіть розмір полотна</option>\r\n          {\r\n            canvas.map((item) =>\r\n              <option key={item.id} value={item.id}>{item.name}</option>\r\n            )\r\n          }\r\n        </select>\r\n        {canvasId.error.length !== 0 &&\r\n          <span className=\"error-span\">{canvasId.error}</span>\r\n        }\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  const imagePreview = () => {\r\n    return <>\r\n      <img className=\"order-img\" src={image} alt=\"Зображення відсутнє\" />\r\n    </>\r\n  }\r\n\r\n  const infoInput = () => {\r\n    return <>\r\n      <div className=\"form-group\">\r\n        <textarea\r\n          placeholder=\"тут ви можете ввести додаткову інформацію\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.info}\r\n          value={info.value}\r\n          onChange={e => info.onChange(e)}\r\n          onBlur={e => info.onBlur(e)}\r\n          style={info.style}\r\n          rows={10}\r\n        />\r\n        {info.error.length !== 0 &&\r\n          <span className=\"error-span\">{info.error}</span>\r\n        }\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  const button = () => {\r\n    return <>\r\n      <SubmitButton\r\n        text={\"Замовити\"}\r\n        disabled={\r\n          name.disabledButton ||\r\n          phone.disabledButton ||\r\n          address.disabledButton ||\r\n          canvasId.disabledButton\r\n        }\r\n      />\r\n    </>\r\n  }\r\n\r\n  return <>\r\n    <form className=\"makeorder-form\" onSubmit={submitHandler}>\r\n      <div className=\"row\">\r\n        <div className=\"col\">{nameInput()}</div>\r\n        <div className=\"col\">{phoneInput()}</div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">{addressInput()}</div>\r\n        <div className=\"col\"></div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">{canvasInput()}</div>\r\n        <div className=\"col\">{imageInput()}</div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\">{infoInput()}</div>\r\n        <div className=\"col\">{imagePreview()}</div>\r\n      </div>\r\n\r\n      {button()}\r\n    </form>\r\n  </>\r\n}","import React from \"react\";\r\n\r\nimport { MakeOrderForm } from \"../components/orders/makeOrderForm\";\r\n\r\nexport const MakeOrder: React.FC = () => {\r\n  return <>\r\n    <MakeOrderForm />\r\n  </>\r\n}","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const emailValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const passwordValidators: ValidType[] = [\r\n  (value: any) => value.length < 6 ? \"Потрібно ввести не менше шести символів\" : \"\"\r\n  \r\n]","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { loginThunk } from \"../../store/auth/actions\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\n\r\nimport \"./index.css\"\r\nimport { emailValidators, passwordValidators } from \"./authValidations\"\r\nimport { Redirect } from \"react-router\"\r\nimport { RootState } from \"../../store\"\r\n\r\nexport const LoginForm: React.FC = () => {\r\n  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated)\r\n  const dispatch = useDispatch()\r\n  const email = useInput(\"\", emailValidators)\r\n  const password = useInput(\"\", passwordValidators)\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    dispatch(loginThunk({ email: email.value, password: password.value }))\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <label className=\"auth-label\">LOG IN</label>\r\n\r\n      <div className=\"form-group form-input-group\" style={email.style}>\r\n        <span className=\"material-icons auth-icon\">alternate_email</span>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть свій Email\"\r\n          value={email.value}\r\n          onChange={e => email.onChange(e)}\r\n          onFocus={e => email.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {email.error.length !== 0 && \r\n        <span className=\"error-span\">{email.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={password.style}>\r\n        <span className=\"material-icons auth-icon\">enhanced_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть пароль\"\r\n          value={password.value}\r\n          onChange={e => password.onChange(e)}\r\n          onFocus={e => password.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{password.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-check\">\r\n        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n        <label className=\"form-check-label\">Запамятати</label>\r\n      </div>\r\n\r\n      <>\r\n        <SubmitButton \r\n          text=\"Увійти\" \r\n          disabled={\r\n            email.disabledButton ||\r\n            password.disabledButton \r\n          }\r\n        />\r\n      </>\r\n\r\n    </form>\r\n  </>\r\n}","import Axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IRegister, RegisterActionsTypesEnum} from \"./types\";\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: RegisterActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: RegisterActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: RegisterActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nexport const registerThunk = (data: IRegister) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.registration, data)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRegister(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum EmailSettingsEnum {\r\n  serviceIsOn = \"serviceIsOn\",\r\n  from = \"from\",\r\n  smtpServer = \"smtpServer\",\r\n  port = \"port\",\r\n  userName = \"userName\",\r\n  password = \"password\"\r\n}\r\n\r\nexport enum EmailSettingsActionsTypesEnum {\r\n  showLoader = \"EMAIL_SETTINGS_SHOW_LOADER\",\r\n  showAlert = \"EMAIL_SETTINGS_SHOW_ALERT\",\r\n  hideAlert = \"EMAIL_SETTINGS_HIDE_ALERT\",\r\n  fetchEmailSettings = \"FETCH_EMAIL_SETTINGS\"\r\n}\r\n\r\nexport interface IEmailSettings {\r\n  serviceIsOn: boolean,\r\n  from: string,\r\n  smtpServer: string,\r\n  port: number,\r\n  userName: string,\r\n  password: string\r\n}\r\n\r\nexport interface IEmailSettingsState extends IState{\r\n  emailSettingsData: IEmailSettings\r\n}\r\n\r\nexport const emailSettingsTypeName: string = \"EmailSettings\"","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInput } from \"../../helpers/useInput\";\r\nimport { registerThunk } from \"../../store/registration/actions\";\r\nimport { IRegister } from \"../../store/registration/types\";\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\";\r\nimport { emailValidators, passwordValidators } from \"./authValidations\";\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const email = useInput(\"\", emailValidators)\r\n  const password = useInput(\"\", passwordValidators)\r\n  const confirmPassword = useInput(\"\", passwordValidators)\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    let data: IRegister = {\r\n      email: email.value,\r\n      password: password.value,\r\n      confirmPassword: confirmPassword.value\r\n    }\r\n    dispatch(registerThunk(data))\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <label className=\"auth-label\">SIGN UP</label>\r\n\r\n      <div className=\"form-group form-input-group\" style={email.style}>\r\n        <span className=\"material-icons auth-icon\">alternate_email</span>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть свій Email\"\r\n          value={email.value}\r\n          onChange={e => email.onChange(e)}\r\n          onFocus={e => email.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {email.error.length !== 0 &&\r\n        <span className=\"error-span\">{email.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={password.style}>\r\n        <span className=\"material-icons auth-icon\">enhanced_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть пароль\"\r\n          value={password.value}\r\n          onChange={e => password.onChange(e)}\r\n          onFocus={e => password.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{password.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={confirmPassword.style}>\r\n        <span className=\"material-icons auth-icon\">no_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Підтвердіть пароль\"\r\n          value={confirmPassword.value}\r\n          onChange={e => confirmPassword.onChange(e)}\r\n          onFocus={e => confirmPassword.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{confirmPassword.error}</span>\r\n      }\r\n\r\n      <SubmitButton \r\n        text=\"Зареєструватись\"\r\n        disabled={\r\n          email.disabledButton ||\r\n          password.disabledButton ||\r\n          confirmPassword.disabledButton\r\n        }\r\n      />\r\n    </form>\r\n  </>\r\n}","import React from \"react\";\r\n\r\nimport { LoginForm } from \"../components/signIn/loginForm\";\r\nimport { RegistrationForm } from \"../components/signIn/registrationForm\";\r\n\r\nexport const Auth: React.FC = () => {\r\n  return <>\r\n    <div className=\"row\">\r\n      <div className=\"col\"><LoginForm /></div>\r\n\r\n      <div className=\"col\"><RegistrationForm /></div>\r\n    </div>\r\n  </>\r\n}","import { IState } from \"../base/types\";\r\n\r\nexport enum InstaSettingsEnum {\r\n  username = \"username\",\r\n  password = \"password\",\r\n  msgReceiverList = \"msgReceiverList\",\r\n}\r\n\r\nexport enum InstaSettingsActionsTypesEnum {\r\n  showLoader = \"INSTAGRAM_SETTINGS_SHOW_LOADER\",\r\n  showAlert = \"INSTAGRAM_SETTINGS_SHOW_ALERT\",\r\n  hideAlert = \"INSTAGRAM_SETTINGS_HIDE_ALERT\",\r\n  fetchInstaSettings = \"FETCH_INSTAGRAM_SETTINGS\"\r\n}\r\n\r\nexport interface IInstaSettings {\r\n  username: string,\r\n  password: string,\r\n  msgReceiverList: string[],\r\n}\r\n\r\nexport interface IInstaSettingsState extends IState{\r\n  instaSettingsData: IInstaSettings\r\n}\r\n\r\nexport const instaSettingsTypeName: string = \"InstagramSettings\"","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { EmailSettingsActionsTypesEnum, IEmailSettings } from \"./types\"\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: EmailSettingsActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: EmailSettingsActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: EmailSettingsActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchEmailSettings = (data: IEmailSettings) => {\r\n  return {\r\n    type: EmailSettingsActionsTypesEnum.fetchEmailSettings,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getEmailConfigThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.get(api.getEmailConfig)\r\n      .then(res => {\r\n        dispatch(fetchEmailSettings(res.data))\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\nexport const setEmailConfigThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.setEmailConfig, data)\r\n      .then(res => {\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport const Spinner: React.FC = () => {\r\n\r\n  return <>\r\n    <div \r\n      className=\"d-flex justify-content-center\"\r\n      style={{marginTop: \"10%\"}}\r\n    >\r\n      <div \r\n        className=\"spinner-border text-primary\" \r\n        style={{width: \"3rem\", height: \"3rem\"}} \r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { RootState } from \"../../store\"\r\nimport { getEmailConfigThunk, setEmailConfigThunk } from \"../../store/emailSettings/actions\"\r\nimport { EmailSettingsEnum, IEmailSettings, IEmailSettingsState } from \"../../store/emailSettings/types\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\n\r\nexport const EmailSettings: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const alert = useSelector((state: RootState) => state.emailSettings.alert)\r\n  const showLoader = useSelector((state: RootState) => state.emailSettings.showLoader)\r\n  const data: IEmailSettings = useSelector((state: RootState) => state.emailSettings.emailSettingsData)\r\n\r\n  const serviceIsOn = useInput(data.serviceIsOn)\r\n  const from = useInput(data.from)\r\n  const smtpServer = useInput(data.smtpServer)\r\n  const port = useInput(data.port)\r\n  const userName = useInput(data.userName)\r\n  const password = useInput(data.password)\r\n  \r\n  const changeEmailSettings = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(setEmailConfigThunk(formData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getEmailConfigThunk())\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    {\r\n      showLoader\r\n        ?\r\n        <Spinner />\r\n        :\r\n        <form className=\"\" onSubmit={changeEmailSettings}>\r\n          <h4 className=\"setting-head\">Email Settings:</h4>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {serviceIsOn.error.length !== 0 &&\r\n              <span className=\"error-span\">{serviceIsOn.error}</span>\r\n            }\r\n            <label>Увімкнути email підтвердження реєстрації</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name={EmailSettingsEnum.serviceIsOn}\r\n              className=\"form-control m-3\"\r\n              checked={serviceIsOn.value}\r\n              onChange={e => serviceIsOn.onChange(e)}\r\n              onBlur={e => serviceIsOn.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {from.error.length !== 0 &&\r\n              <span className=\"error-span\">{from.error}</span>\r\n            }\r\n            <label>Від кого:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.from}\r\n              className=\"form-control\"\r\n              placeholder=\"Від кого\"\r\n              value={from.value}\r\n              onChange={e => from.onChange(e)}\r\n              onBlur={e => from.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {smtpServer.error.length !== 0 &&\r\n              <span className=\"error-span\">{smtpServer.error}</span>\r\n            }\r\n            <label>Smtp server:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.smtpServer}\r\n              className=\"form-control\"\r\n              placeholder=\"SMTP Server\"\r\n              value={smtpServer.value}\r\n              onChange={e => smtpServer.onChange(e)}\r\n              onBlur={e => smtpServer.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {port.error.length !== 0 &&\r\n              <span className=\"error-span\">{port.error}</span>\r\n            }\r\n            <label>Порт:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.port}\r\n              className=\"form-control\"\r\n              placeholder=\"Порт\"\r\n              value={port.value}\r\n              onChange={e => port.onChange(e)}\r\n              onBlur={e => port.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {userName.error.length !== 0 &&\r\n              <span className=\"error-span\">{userName.error}</span>\r\n            }\r\n            <label>Email адрес:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.userName}\r\n              className=\"form-control\"\r\n              placeholder=\"Email\"\r\n              value={userName.value}\r\n              onChange={e => userName.onChange(e)}\r\n              onBlur={e => userName.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {password.error.length !== 0 &&\r\n              <span className=\"error-span\">{password.error}</span>\r\n            }\r\n            <label>Пароль:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.password}\r\n              className=\"form-control\"\r\n              placeholder=\"Пароль\"\r\n              value={password.value}\r\n              onChange={e => password.onChange(e)}\r\n              onBlur={e => password.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <SubmitButton text=\"Зберегти\" />\r\n        </form>\r\n    }\r\n  </>\r\n}","import { IState } from \"../base/types\";\r\n\r\nexport enum UserEnum {\r\n  id = \"id\",\r\n  name = \"name\",\r\n  email = \"email\",\r\n  role = \"role\"\r\n}\r\nexport enum UserActionsTypesEnum {\r\n  showLoader = \"USER_SHOW_LOADER\",\r\n  showAlert = \"USER_SHOW_ALERT\",\r\n  hideAlert = \"USER_HIDE_ALERT\",\r\n  fetchUsers = \"FETCH_USERS\",\r\n}\r\n\r\nexport interface IUser {\r\n  id: string,\r\n  userName: string,\r\n  email: string,\r\n  roles: string[],\r\n}\r\n\r\nexport interface IUserResponse {\r\n  elementsCount: number,\r\n  pageSize: number,\r\n  currentPage: number,\r\n  totalPages: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean,\r\n  data: IUser[]\r\n}\r\n\r\nexport interface IUserState extends IState {\r\n  usersData: IUserResponse\r\n}","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { updateStoriesThunk } from \"../instagram/actions\"\r\nimport { IInstaSettings, InstaSettingsActionsTypesEnum } from \"./types\"\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: InstaSettingsActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: InstaSettingsActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: InstaSettingsActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchInstaSettings = (data: IInstaSettings) => {\r\n  return {\r\n    type: InstaSettingsActionsTypesEnum.fetchInstaSettings,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getInstaConfigThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.get(api.getInstaConfig)\r\n      .then(res => {\r\n        dispatch(fetchInstaSettings(res.data))\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\nexport const setInstaConfigThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.setInstaConfig, data)\r\n      .then(res => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(updateStoriesThunk())\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const usernameValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const passwordValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const receiversValidators: ValidType[] = [\r\n  \r\n  \r\n]","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { getInstaConfigThunk, setInstaConfigThunk } from \"../../store/instaSettings/actions\"\r\nimport { IInstaSettings, InstaSettingsEnum } from \"../../store/instaSettings/types\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { passwordValidators, receiversValidators, usernameValidators } from \"./instaValidations\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\n\r\nimport \"./index.css\"\r\n\r\nexport const InstaSettings: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const alert = useSelector((state: RootState) => state.instaSettings.alert)\r\n  const showLoader = useSelector((state: RootState) => state.instaSettings.showLoader)\r\n  const data: IInstaSettings = useSelector((state: RootState) => state.instaSettings.instaSettingsData)\r\n\r\n  const username = useInput(data.username, usernameValidators)\r\n  const password = useInput(data.password, passwordValidators)\r\n  const msgReceivers = useInput(data.msgReceiverList)\r\n\r\n  const changeSettings = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(setInstaConfigThunk(formData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getInstaConfigThunk())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    username.set(data.username)\r\n    password.set(data.password)\r\n    msgReceivers.set(data.msgReceiverList)\r\n  }, [data])\r\n\r\n  return <>\r\n    {\r\n      showLoader\r\n        ?\r\n        <Spinner />\r\n        :\r\n        <form className=\"\" onSubmit={changeSettings}>\r\n          <h4 className=\"setting-head\">Instagram Settings:</h4>\r\n\r\n          <div className=\"form-group setting-group\" style={username.style}>\r\n            {username.error.length !== 0 &&\r\n              <span className=\"error-span\">{username.error}</span>\r\n            }\r\n            <label>Інстаграм логін</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.username}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм логін \"\r\n              value={username.value}\r\n              onChange={e => username.onChange(e)}\r\n              onBlur={e => username.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className=\"form-group setting-group\" style={password.style}>\r\n            {password.error.length !== 0 &&\r\n              <span className=\"error-span\">{password.error}</span>\r\n            }\r\n            <label>Інстаграм пароль</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.password}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм пароль\"\r\n              value={password.value}\r\n              onChange={e => password.onChange(e)}\r\n              onBlur={e => password.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className=\"form-group setting-group\" style={msgReceivers.style}>\r\n            {msgReceivers.error.length !== 0 &&\r\n              <span className=\"error-span\">{msgReceivers.error}</span>\r\n            }\r\n            <label>Список отримувачів повідомлень про покупку</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.msgReceiverList}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм імя отримувачів повідомлень\"\r\n              value={msgReceivers.value}\r\n              onChange={e => msgReceivers.onChange(e)}\r\n              onBlur={e => msgReceivers.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <SubmitButton text=\"Зберегти\" />\r\n\r\n        </form>\r\n    }\r\n  </>\r\n}","import React from \"react\";\r\nimport { EmailSettings } from \"../components/settings/emailSettings\"\r\nimport { InstaSettings } from \"../components/settings/instaSettings\";\r\n\r\nexport const Settings: React.FC = () => {\r\n  return <>\r\n    <div className=\"row\">\r\n      <div className=\"col-auto\">\r\n        <EmailSettings />\r\n      </div>\r\n\r\n      <div className=\"col-auto\">\r\n        <InstaSettings />\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React, { useState } from \"react\"\r\n\r\nimport \"./alert.css\"\r\n\r\nexport const Alert = (props: { text: string, display: boolean }): JSX.Element => {\r\n\r\n  return <>\r\n    {props.display &&\r\n      <div\r\n        className=\"alert red-alert\"\r\n        role=\"alert\"\r\n      >\r\n        <h4>{props.text}</h4>\r\n      </div>\r\n    }\r\n  </>\r\n}","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { PageListQueryType } from \"../../store/base/types\"\r\n\r\nexport type PaginationType = {\r\n  handler: (data: PageListQueryType) => void,\r\n  totalPages: number,\r\n  currentPage: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean\r\n}\r\n\r\nexport const Pagination = (props: PaginationType): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n\r\n  const paginationHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    handler: (data: PageListQueryType) => void) => {\r\n\r\n    switch (event.currentTarget.value) {\r\n      case \"Previous\":\r\n        dispatch(handler({ pageNumber: props.currentPage - 1 }))\r\n      break;\r\n\r\n      case \"Next\":\r\n        dispatch(handler({ pageNumber: props.currentPage + 1 }))\r\n      break;\r\n\r\n      default:\r\n        dispatch(handler({ pageNumber: Number(event.currentTarget.value)}))\r\n      break;\r\n    }\r\n  }\r\n\r\n  function numberOfPage(props: PaginationType) {\r\n    var content: JSX.Element[] = [];\r\n\r\n    for (let i = 1; i <= props.totalPages; i++) {\r\n      content.push(\r\n        <li key={i} className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            value={i}\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            disabled={props.currentPage === i}\r\n          >{i}</button>\r\n        </li>\r\n      )\r\n    }\r\n    return content;\r\n  }\r\n\r\n  return <>\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            value=\"Previous\"\r\n            disabled={!props.hasPrevious}\r\n          >Previous</button>\r\n        </li>\r\n\r\n        {numberOfPage(props)}\r\n\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            value=\"Next\"\r\n            disabled={!props.hasNext}\r\n          >Next</button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </>\r\n}","import React from \"react\"\r\nimport \"./deleteIcon.css\"\r\n\r\nexport const DeleteIcon = (props: { onClickHandler: any }): JSX.Element => {\r\n\r\n  return <>\r\n    <div className=\"link\">\r\n      <span className=\"material-icons delete-icon\" onClick={props.onClickHandler}>delete_forever</span>\r\n    </div>\r\n  </>\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Pagination, PaginationType } from \"../general/pagination\"\r\nimport { RootState } from \"../../store\"\r\nimport { deleteOrderThunk, getOrdersThunk, showAlertOrders } from \"../../store/order/actions\"\r\nimport { IOrder, IOrderResponse } from \"../../store/order/types\"\r\nimport { DeleteIcon } from \"../general/deleteIcon/deleteIcon\"\r\n\r\nexport const OrdersList: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const pages: IOrderResponse = useSelector((state: RootState) => state.order.ordersData)\r\n  const orders: IOrder[] = pages.data\r\n\r\n  const pagProps: PaginationType = {\r\n    handler: getOrdersThunk,\r\n    totalPages: pages.totalPages,\r\n    currentPage: pages.currentPage,\r\n    hasNext: pages.hasNext,\r\n    hasPrevious: pages.hasPrevious\r\n  }\r\n\r\n  const deleteOrder = (orderId: string) => {\r\n    let result = window.confirm(\"Підтвердіть видалення\")\r\n    if (result) {\r\n      dispatch(deleteOrderThunk(orderId))\r\n    } else {\r\n      dispatch(showAlertOrders(\"Видалення Відмінено!\"))\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Імя</th>\r\n          <th scope=\"col\">Номер телефону</th>\r\n          <th scope=\"col\">Адрес</th>\r\n          <th scope=\"col\">Тип картини</th>\r\n          <th scope=\"col\">Зображення</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {orders.map((order) =>\r\n          <tr key={order.id}>\r\n            <td>{order.customerName}</td>\r\n            <td>{order.phoneNumber}</td>\r\n            <td>{order.address}</td>\r\n            <td>{order.canvas.name}</td>\r\n            <td><img className=\"list-img\" src={\"data:image/png;base64,\" + order.image} alt=\"...\" /></td>\r\n            <td><DeleteIcon onClickHandler={() => deleteOrder(order.id)}/></td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Pagination {...pagProps} />\r\n  </>\r\n}","import React, { useEffect } from \"react\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { Alert } from \"../general/alert/alert\"\r\nimport { RootState } from \"../../store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { OrdersList } from \"./ordersList\"\r\nimport { getOrdersThunk } from \"../../store/order/actions\"\r\nimport { IOrder } from \"../../store/order/types\"\r\n\r\nexport const Orders: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const showLoader = useSelector((state: RootState) => state.order.showLoader)\r\n  const alert = useSelector((state: RootState) => state.order.alert)\r\n  const orders: IOrder[] = useSelector((state: RootState) => state.order.ordersData.data)\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrdersThunk({}))\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    <Alert text={alert.text} display={alert.showAlert} />\r\n\r\n    {\r\n      showLoader ? <Spinner /> :\r\n        !orders.length ? <h3 style={{textAlign: \"center\"}}>Замовлень немає</h3> :\r\n          <OrdersList />\r\n    }\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { PageListQueryType } from \"../base/types\";\r\nimport { IUserResponse, UserActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderUsers = (data: boolean) => {\r\n  return {\r\n    type: UserActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const showAlertUsers = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: UserActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: UserActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\n\r\nconst fetchUsers = (data: IUserResponse) => {\r\n  return {\r\n    type: UserActionsTypesEnum.fetchUsers,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getUsersThunk = (data: PageListQueryType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    let config: AxiosRequestConfig = { headers: { \r\n      withCredentials: true,\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }, params: { \r\n      pageNumber: data.pageNumber, \r\n      pageSize: data.pageSize \r\n    }}\r\n\r\n    Axios.get(api.getUsers, config)\r\n      .then(res => {\r\n        console.log(res)\r\n        dispatch(fetchUsers(res.data))\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteUserThunk = (userId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      'Content-Type': 'application/json-patch+json',\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}` \r\n    } }\r\n    Axios.post(api.deleteUser, userId, headers)\r\n      .then(res => {\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderUsers(false))\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\ntype editRolesRequestType = {\r\n  userId: string,\r\n  roles: string[]\r\n}\r\n\r\nexport const editUserRolesThunk = (data: editRolesRequestType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    Axios.post(api.editUserRoles, data)\r\n      .then(res => {\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderUsers(false))\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum RolesActionsTypesEnum {\r\n  showLoader = \"ROLES_SHOW_LOADER\",\r\n  showAlert = \"ROLES_SHOW_ALERT\",\r\n  hideAlert = \"ROLES_HIDE_ALERT\",\r\n  fetchRoles = \"FETCH_ROLES\",\r\n}\r\n\r\nexport interface IRole {\r\n  id: string,\r\n  name: string\r\n}\r\n\r\nexport interface IRolesState extends IState {\r\n  rolesData: IRole[]\r\n}","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { IRole } from \"../../store/roles/types\"\r\nimport { editUserRolesThunk } from \"../../store/users/actions\"\r\nimport { IUser } from \"../../store/users/types\"\r\n\r\nexport const RolesControl = (props: IUser): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n  const allRoles: IRole[] = useSelector((state: RootState) => state.roles.rolesData)\r\n  const [chekedItems, setChekedItems] = useState<Set<string>>(new Set<string>(props.roles))\r\n\r\n  const checkboxHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!chekedItems.has(event.target.name)) {\r\n      setChekedItems(new Set<string>(chekedItems.add(event.target.name)))\r\n    } else {\r\n      chekedItems.delete(event.target.name)\r\n      setChekedItems(new Set<string>(chekedItems))\r\n    }\r\n  }\r\n\r\n  const changeUserRoles = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    event.preventDefault()\r\n    dispatch(editUserRolesThunk({ userId: props.id, roles: Array.from(chekedItems) }))\r\n  }\r\n\r\n  return <>\r\n    {allRoles.map((role) =>\r\n      <div className=\"form-check m-3\" key={role.id}>\r\n        <label>{role.name}</label>\r\n        <input\r\n          className=\"m-3\"\r\n          type=\"checkbox\"\r\n          name={role.name}\r\n          checked={chekedItems.has(role.name)}\r\n          onChange={e => checkboxHandler(e)}\r\n        />\r\n      </div>\r\n    )}\r\n\r\n    <span className=\"material-icons\" onClick={e => changeUserRoles(e)}>check</span>\r\n  </>\r\n}","import React, { useState } from \"react\"\r\nimport { Pagination, PaginationType } from \"../general/pagination\"\r\nimport { deleteUserThunk, getUsersThunk, showAlertUsers } from \"../../store/users/actions\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { RolesControl } from \"./rolesControl\"\r\nimport { IUser, IUserResponse } from \"../../store/users/types\"\r\nimport { DeleteIcon } from \"../general/deleteIcon/deleteIcon\"\r\n\r\nexport const UserList: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const pages: IUserResponse = useSelector((state: RootState) => state.user.usersData)\r\n  const users: IUser[] = pages.data\r\n\r\n  const pagProps: PaginationType = {\r\n    handler: getUsersThunk,\r\n    totalPages: pages.totalPages,\r\n    currentPage: pages.currentPage,\r\n    hasNext: pages.hasNext,\r\n    hasPrevious: pages.hasPrevious\r\n  }\r\n\r\n  const deleteUser = (userId: string) => {\r\n    let result = window.confirm(\"Підтвердіть видалення\")\r\n    if (result) {\r\n      dispatch(deleteUserThunk(userId))\r\n    } else {\r\n      dispatch(showAlertUsers(\"Видалення Відмінено!\"))\r\n    }\r\n  }\r\n\r\n\r\n  const rolePanel = (user: IUser) => {\r\n    return <>\r\n      <div className=\"dropdown\">\r\n        <li className=\"nav-item active-item\">\r\n          <div className=\"link\">\r\n            <span className=\"material-icons\">settings</span>\r\n          </div>\r\n        </li>\r\n\r\n        <div className=\"dropdown-content\">\r\n          <RolesControl {...user} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  return <>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Імя</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Роль</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {users.map((user) =>\r\n          <tr key={user.id}>\r\n            <td>{user.userName}</td>\r\n            <td>{user.email}</td>\r\n            <td>{rolePanel(user)}</td>\r\n            <td><DeleteIcon onClickHandler={() => deleteUser(user.id)}/></td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Pagination {...pagProps} />\r\n  </>\r\n}","import Axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IRole, RolesActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderRoles = (data: boolean) => {\r\n  return {\r\n    type: RolesActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRoles = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: RolesActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: RolesActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\n\r\nconst fetchRoles = (data: IRole[]) => {\r\n  return {\r\n    type: RolesActionsTypesEnum.fetchRoles,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const createRoleThunk = (roleName: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.post(api.createRole, roleName)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRoles(false))\r\n  }\r\n}\r\n\r\nexport const getRolesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.get(api.getRoles)\r\n      .then(res => {\r\n        dispatch(fetchRoles(res.data))\r\n        dispatch(showLoaderRoles(false))\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n        dispatch(showLoaderRoles(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteRoleThunk = (roleId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.post(api.deleteRole, roleId)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRoles(false))\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { Alert } from \"../general/alert/alert\"\r\nimport { UserList } from \"./userList\"\r\nimport { getUsersThunk } from \"../../store/users/actions\"\r\nimport { getRolesThunk } from \"../../store/roles/actions\"\r\n\r\nexport const Users: React.FC = () => {\r\n  const showLoader = useSelector((state: RootState) => state.user.showLoader)\r\n  const alert = useSelector((state: RootState) => state.user.alert)\r\n  const users = useSelector((state: RootState) => state.user.usersData.data)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersThunk({}))\r\n    dispatch(getRolesThunk())\r\n  }, [dispatch])\r\n  \r\n  return <>\r\n    <Alert text={alert.text} display={alert.showAlert}/>\r\n\r\n    {\r\n      showLoader ? <Spinner /> :\r\n          !users.length ? <h3 style={{textAlign: \"center\"}}>Немає зареєстрованих користувачів</h3> :\r\n            <UserList />\r\n    }\r\n  </>\r\n}","import React from \"react\"\r\nimport \"./preloader.css\"\r\n\r\nexport const Preloader = (): JSX.Element => {\r\n\r\n  var body = document.querySelector('body')\r\n  window.onload = () => {\r\n    body?.classList.add(\"loaded_hiding\")\r\n    setTimeout(() => {\r\n      body?.classList.add(\"loaded\")\r\n      body?.classList.remove(\"loaded_hiding\")\r\n    }, 1000)\r\n  }\r\n\r\n  return <>\r\n    <div className=\"preloader\">\r\n      <div className=\"preloader-row\">\r\n        <div className=\"preloader-item\"></div>\r\n        <div className=\"preloader-item\"></div>\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React from \"react\"\r\nimport { Route } from \"react-router\"\r\n\r\nimport { Navbar } from \"./components/navigation/navbar\"\r\n\r\nimport { Home } from \"./pages/home\"\r\nimport { Gallery } from \"./pages/gallery\"\r\nimport { MakeOrder } from \"./pages/makeOrder\"\r\nimport { Auth } from \"./pages/auth\"\r\nimport { Settings } from \"./pages/settings\"\r\n\r\nimport { Orders } from \"./components/orders/orders\"\r\nimport { Users } from \"./components/users/users\"\r\n\r\n\r\nimport \"./custom.css\"\r\nimport \"./css/form.css\"\r\nimport \"./css/button.css\"\r\nimport { Preloader } from \"./components/general/preloader/preloader\"\r\n\r\nexport const App: React.FC = () => {\r\n  return <>\r\n    <Preloader />\r\n    \r\n    <div className=\"container-fluid h-100\">\r\n      <Navbar />\r\n\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/MakeOrder\" component={MakeOrder} />\r\n      <Route exact path=\"/Gallery\" component={Gallery} />\r\n      <Route exact path=\"/Auth\" component={Auth} />\r\n      <Route exact path=\"/AdminPanel/Orders\" component={Orders} />\r\n      <Route exact path=\"/AdminPanel/Users\" component={Users} />\r\n      <Route exact path=\"/AdminPanel/Settings\" component={Settings} />\r\n    </div>\r\n  </>\r\n}\r\n\r\n\r\n\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IAlert {\r\n  showAlert: boolean,\r\n  text: string\r\n}\r\n\r\nexport interface IState {\r\n  showLoader: boolean,\r\n  alert: IAlert,\r\n}\r\n\r\nexport interface IAction {\r\n  type: string\r\n  payload?: any\r\n}\r\n\r\nexport const baseInitialState: IState = {\r\n  showLoader: false,\r\n  alert: {\r\n    showAlert: false,\r\n    text: \"\"\r\n  }\r\n}\r\n\r\nexport type PageListQueryType = {\r\n  pageNumber?: number,\r\n  pageSize?: number\r\n }","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IOrdersState, OrdersActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IOrdersState = {\r\n  ordersData: {\r\n    currentPage: 0,\r\n    elementsCount: 0,\r\n    pageSize: 0,\r\n    totalPages: 0,\r\n    hasNext: false,\r\n    hasPrevious: false,\r\n    data: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const ordersReducer = (state: IOrdersState = initialState, action: IAction): IOrdersState => {\r\n  switch (action.type) {\r\n    case OrdersActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case OrdersActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case OrdersActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case OrdersActionsTypesEnum.fetchOrders:\r\n      return {\r\n        ...state,\r\n        ordersData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IRegisterState, RegisterActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IRegisterState = {\r\n  ...baseInitialState\r\n}\r\n\r\nexport const registrationReducer = (state: IRegisterState = initialState, action: IAction): IRegisterState => {\r\n  switch (action.type) {\r\n    case RegisterActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case RegisterActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case RegisterActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IUserState, UserActionsTypesEnum} from \"./types\";\r\n\r\nconst initialState: IUserState = {\r\n  usersData: {\r\n    currentPage: 0,\r\n    elementsCount: 0,\r\n    pageSize: 0,\r\n    totalPages: 0,\r\n    hasNext: false,\r\n    hasPrevious: false,\r\n    data: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const userReducer = (state: IUserState = initialState, action: IAction): IUserState => {\r\n  switch (action.type) {\r\n    case UserActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case UserActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case UserActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case UserActionsTypesEnum.fetchUsers:\r\n      return {\r\n        ...state,\r\n        usersData: action.payload\r\n      }\r\n      \r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IRolesState, RolesActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IRolesState = {\r\n  rolesData: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const rolesReducer = (state: IRolesState = initialState, action: IAction): IRolesState => {\r\n  switch (action.type) {\r\n    case RolesActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case RolesActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case RolesActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case RolesActionsTypesEnum.fetchRoles:\r\n      return {\r\n        ...state,\r\n        rolesData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { CanvasActionsTypesEnum, ICanvasState } from \"./types\";\r\n\r\nconst initialState: ICanvasState = {\r\n  canvasData: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const canvasReducer = (state: ICanvasState = initialState, action: IAction): ICanvasState => {\r\n  switch (action.type) {\r\n    case CanvasActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case CanvasActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case CanvasActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case CanvasActionsTypesEnum.fetchCanvas:\r\n      return {\r\n        ...state,\r\n        canvasData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { EmailSettingsActionsTypesEnum, IEmailSettingsState } from \"./types\";\r\n\r\nconst initialState: IEmailSettingsState = {\r\n  emailSettingsData: {\r\n    serviceIsOn: false,\r\n    from: \" \",\r\n    smtpServer: \" \",\r\n    port: 0,\r\n    userName: \" \",\r\n    password: \" \"\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const emailSettingsReducer = (state: IEmailSettingsState = initialState, action: IAction): IEmailSettingsState => {\r\n  switch (action.type) {\r\n    case EmailSettingsActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case EmailSettingsActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case EmailSettingsActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case EmailSettingsActionsTypesEnum.fetchEmailSettings:\r\n      return {\r\n        ...state,\r\n        emailSettingsData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { GalleryActionsTypesEnum, IGalleryState } from \"./types\";\r\n\r\nconst initialState: IGalleryState = {\r\n  images: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const galleryReducer = (state: IGalleryState = initialState, action: IAction): IGalleryState => {\r\n  switch (action.type) {\r\n    case GalleryActionsTypesEnum.showLoader:\r\n      return { ...state, showLoader: action.payload }\r\n\r\n    case GalleryActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }\r\n\r\n    case GalleryActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case GalleryActionsTypesEnum.fetchImages:\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IInstaState, InstaActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IInstaState = {\r\n  reviews: [],\r\n  visualizations: [],\r\n  stories: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const instagramReducer = (state: IInstaState = initialState, action: IAction): IInstaState => {\r\n  switch (action.type) {\r\n    case InstaActionsTypesEnum.showLoader:\r\n      return { ...state, showLoader: action.payload }\r\n\r\n    case InstaActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }\r\n\r\n    case InstaActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n    \r\n    case InstaActionsTypesEnum.fetchStories:\r\n      return {\r\n        ...state, \r\n        stories: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IInstaSettingsState, InstaSettingsActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IInstaSettingsState = {\r\n  instaSettingsData: {\r\n    username: \"\",\r\n    password: \"\",\r\n    msgReceiverList: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const instaSettingsReducer = (state: IInstaSettingsState = initialState, action: IAction): IInstaSettingsState => {\r\n  switch (action.type) {\r\n    case InstaSettingsActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case InstaSettingsActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case InstaSettingsActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case InstaSettingsActionsTypesEnum.fetchInstaSettings:\r\n      return {\r\n        ...state,\r\n        instaSettingsData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IAuthState, AuthActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IAuthState = {\r\n  ...baseInitialState,\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n}\r\n\r\n\r\nexport const authReducer = (state: IAuthState = initialState, action: IAction): IAuthState => {\r\n  switch (action.type) {\r\n    case AuthActionsTypesEnum.showLoader:\r\n      return { ...state, showLoader: action.payload }\r\n\r\n    case AuthActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }\r\n\r\n    case AuthActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case AuthActionsTypesEnum.login:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true\r\n      }\r\n\r\n    case AuthActionsTypesEnum.logout:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        isAdmin: false\r\n      }\r\n\r\n    case AuthActionsTypesEnum.isAdmin:\r\n      return {\r\n        ...state,\r\n        isAdmin: action.payload\r\n      }\r\n\r\n    case AuthActionsTypesEnum.isAuthenticated:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from \"redux\"\r\nimport { ordersReducer } from \"./order/reducers\"\r\nimport { registrationReducer } from \"./registration/reducers\"\r\nimport { userReducer } from \"./users/reducers\"\r\nimport { rolesReducer } from \"./roles/reducers\"\r\nimport { canvasReducer } from \"./canvas/reducers\"\r\nimport { emailSettingsReducer } from \"./emailSettings/reducers\"\r\nimport { galleryReducer } from \"./gallery/reducers\"\r\nimport { instagramReducer } from \"./instagram/reducers\"\r\nimport { instaSettingsReducer } from \"./instaSettings/reducers\"\r\nimport { authReducer } from \"./auth/reducers\"\r\n\r\nexport const rootReducer = combineReducers({\r\n  reg: registrationReducer,\r\n  auth: authReducer,\r\n  order: ordersReducer,\r\n  user: userReducer,\r\n  roles: rolesReducer,\r\n  canvas: canvasReducer,\r\n  gallery: galleryReducer,\r\n  instagram: instagramReducer,\r\n  emailSettings: emailSettingsReducer,\r\n  instaSettings: instaSettingsReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { App } from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { rootReducer } from './store';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl!}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  rootElement);\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}