{"version":3,"sources":["store/api.ts","store/auth/types.ts","store/auth/actions.ts","store/instagram/types.ts","components/navigation/adminNav.tsx","components/navigation/navbar.tsx","store/instagram/actions.ts","store/gallery/types.ts","components/general/modalWindow/modalWindow.tsx","components/general/spinner.tsx","components/home/reviews.tsx","components/home/video.tsx","components/home/text.tsx","pages/home.tsx","store/gallery/actions.ts","store/canvas/types.ts","components/gallery/images.tsx","pages/gallery.tsx","helpers/useInput.ts","store/canvas/actions.ts","store/order/types.ts","store/order/actions.ts","store/registration/types.ts","components/general/submitButton/submitButton.tsx","components/orders/orderValidations.ts","components/orders/makeOrderForm.tsx","pages/makeOrder.tsx","components/signIn/authValidations.ts","components/signIn/loginForm.tsx","store/registration/actions.ts","store/emailSettings/types.ts","components/signIn/registrationForm.tsx","pages/auth.tsx","store/instaSettings/types.ts","store/emailSettings/actions.ts","components/settings/emailSettings.tsx","store/users/types.ts","store/instaSettings/actions.ts","components/settings/instaValidations.ts","components/settings/instaSettings.tsx","pages/settings.tsx","components/general/alert/alert.tsx","components/general/pagination.tsx","components/general/deleteIcon/deleteIcon.tsx","components/orders/ordersList.tsx","components/orders/orders.tsx","store/users/actions.ts","store/roles/types.ts","components/users/rolesControl.tsx","components/users/userList.tsx","store/roles/actions.ts","components/users/users.tsx","App.tsx","registerServiceWorker.js","store/base/types.ts","store/order/reducers.ts","store/registration/reducers.ts","store/users/reducers.ts","store/roles/reducers.ts","store/canvas/reducers.ts","store/emailSettings/reducers.ts","store/gallery/reducers.ts","store/instagram/reducers.ts","store/instaSettings/reducers.ts","store/auth/reducers.ts","store/index.ts","index.tsx"],"names":["api","AuthActionsTypesEnum","InstaActionsTypesEnum","showLoaderAuth","data","type","showLoader","payload","loginThunk","dispatch","Axios","post","login","headers","withCredentials","then","res","localStorage","setItem","isAdminThunk","catch","err","showAlert","setTimeout","hideAlert","showAlertAuth","getItem","get","isAdmin","isAuthenticatedThunk","isAuthenticated","logoutThunk","logout","removeItem","AdminNav","className","to","exact","Navbar","useDispatch","useSelector","state","auth","useEffect","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","adminPanelLink","onClick","GalleryActionsTypesEnum","showLoaderInsta","showAlertInsta","fetchInstaStories","ModalWindow","props","e","setIsOpen","html","Spinner","style","marginTop","width","height","role","Reviews","useState","isOpen","stories","instagram","instaData","instaStories","formData","FormData","set","getInstaStories","error","console","log","map","story","src","image","alt","video","Video","controls","Text","Home","CanvasActionsTypesEnum","showLoaderGallery","showAlertGallery","getImagesThunk","galleryGetImages","fetchImages","Images","images","gallery","submitHandler","event","target","preventDefault","galleryAddImage","statusText","onSubmit","accept","name","item","imageId","delete","galleryDeleteImage","params","Gallery","useInput","initValue","validations","value","setValue","wasFocused","setFocused","setError","setStyle","disabledButton","length","validator","borderColor","borderWidth","borderStyle","onChange","onBlur","OrdersActionsTypesEnum","makeOrderEnum","showLoaderCanvas","showAlertCanvas","getCanvasThunk","getCanvas","fetchCanvas","RegisterActionsTypesEnum","showLoaderOrders","showAlertOrders","getOrdersThunk","getOrders","pageNumber","pageSize","fetchOrders","SubmitButton","disabled","text","nameValidators","phoneValidators","addressValidators","canvasIdValidators","MakeOrderForm","canvas","canvasData","phone","address","canvasId","getUserData","makeOrder","customerName","phoneNumber","selected","MakeOrder","emailValidators","passwordValidators","LoginForm","email","password","placeholder","onFocus","EmailSettingsEnum","EmailSettingsActionsTypesEnum","showLoaderRegister","registerThunk","registration","showAlertRegister","RegistrationForm","confirmPassword","Auth","InstaSettingsEnum","InstaSettingsActionsTypesEnum","getEmailConfigThunk","getEmailConfig","fetchEmailSettings","EmailSettings","emailSettings","alert","emailSettingsData","serviceIsOn","from","smtpServer","port","userName","setEmailConfig","setEmailConfigThunk","checked","UserEnum","UserActionsTypesEnum","getInstaConfigThunk","getInstaConfig","fetchInstaSettings","setInstaConfigThunk","setInstaConfig","updateInsatStories","usernameValidators","InstaSettings","instaSettings","instaSettingsData","username","msgReceivers","msgReceiverList","Settings","Alert","display","Pagination","paginationHandler","handler","currentTarget","currentPage","Number","hasPrevious","content","i","totalPages","push","numberOfPage","hasNext","DeleteIcon","onClickHandler","OrdersList","pages","order","ordersData","orders","pagProps","deleteOrder","orderId","result","window","confirm","deleteOrderThunk","scope","Orders","RolesActionsTypesEnum","showLoaderUsers","showAlertUsers","getUsersThunk","config","getUsers","fetchUsers","RolesControl","allRoles","roles","rolesData","Set","chekedItems","setChekedItems","changeUserRoles","userId","Array","editUserRoles","has","add","UserList","user","usersData","users","deleteUser","deleteUserThunk","rolePanel","showLoaderRoles","showAlertRoles","getRolesThunk","getRoles","fetchRoles","Users","App","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","baseInitialState","initialState","elementsCount","rootReducer","combineReducers","reg","action","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c458bf76.chunk.js","sourcesContent":["\r\nexport enum api {\r\n  getUsers = \"https://photo-on-canvas.azurewebsites.net/api/Account/GetUsers\",\r\n  deleteUser = \"https://photo-on-canvas.azurewebsites.net/api/Account/DeleteUser\",\r\n  registration = \"https://photo-on-canvas.azurewebsites.net/api/Account/Register\",\r\n  confirmEmail = \"https://photo-on-canvas.azurewebsites.net/api/Account/ConfirmEmail\",\r\n  login = \"https://photo-on-canvas.azurewebsites.net/api/Account/Login\",\r\n  logout = \"https://photo-on-canvas.azurewebsites.net/api/Account/Logout\",\r\n  getUserData = \"https://photo-on-canvas.azurewebsites.net/api/Account/GetUserData\",\r\n  isAdmin = \"https://photo-on-canvas.azurewebsites.net/api/Account/IsAdmin\",\r\n  isAuthenticated = \"https://photo-on-canvas.azurewebsites.net/api/Account/isAuthenticated\",\r\n\r\n  galleryAddImage = \"https://photo-on-canvas.azurewebsites.net/api/Gallery/AddImage\",\r\n  galleryGetImages = \"https://photo-on-canvas.azurewebsites.net/api/Gallery/GetImages\",\r\n  galleryDeleteImage = \"https://photo-on-canvas.azurewebsites.net/api/Gallery/DeleteImage\",\r\n\r\n  getCanvas = \"https://photo-on-canvas.azurewebsites.net/api/Canvas/GetCanvas\",\r\n  createCanvas = \"https://photo-on-canvas.azurewebsites.net/api/Canvas/CreateCanvas\",\r\n  deleteCanvas = \"https://photo-on-canvas.azurewebsites.net/api/Canvas/DeleteCanvas\",\r\n\r\n  getOrders = \"https://photo-on-canvas.azurewebsites.net/api/Order/GetOrders\",\r\n  makeOrder = \"https://photo-on-canvas.azurewebsites.net/api/Order/MakeOrder\",\r\n  deleteOrder = \"https://photo-on-canvas.azurewebsites.net/api/Order/DeleteOrder\",\r\n  \r\n  createRole = \"https://photo-on-canvas.azurewebsites.net/api/Roles/CreateRole\",\r\n  deleteRole = \"https://photo-on-canvas.azurewebsites.net/api/Roles/DeleteRole\",\r\n  getRoles = \"https://photo-on-canvas.azurewebsites.net/api/Roles/GetRoles\",\r\n  getUserRoles = \"https://photo-on-canvas.azurewebsites.net/api/Roles/GetUserRoles\",\r\n  editUserRoles = \"https://photo-on-canvas.azurewebsites.net/api/Roles/EditUserRoles\",\r\n\r\n  getInstaStories = \"https://photo-on-canvas.azurewebsites.net/api/Instagram/GetStories\",\r\n  updateInsatStories = \"https://photo-on-canvas.azurewebsites.net/api/Instagram/UpdateDbInstaDataAsync\",\r\n\r\n  getEmailConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/GetEmailConfiguration\",\r\n  setEmailConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/SetEmailConfiguration\",\r\n\r\n  getInstaConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/GetInstagramConfiguration\",\r\n  setInstaConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/SetInstagramConfiguration\",\r\n}\r\n\r\n// https://photo-on-canvas.azurewebsites.net","import { IState } from \"../base/types\";\r\n\r\nexport enum AuthActionsTypesEnum {\r\n  showLoader = \"AUTH_SHOW_LOADER\",\r\n  showAlert = \"AUTH_SHOW_ALERT\",\r\n  hideAlert = \"AUTH_HIDE_ALERT\",\r\n  login = \"LOGIN\",\r\n  isAdmin = \"IS_ADMIN\",\r\n  isAuthenticated = \"IS_AUTHENTICATED\",\r\n  logout = \"LOGOUT\"\r\n}\r\n\r\nexport interface ILogin {\r\n  email: string,\r\n  password: string\r\n}\r\n\r\nexport interface ILoginResponse {\r\n  signInResult: {\r\n    succeeded: boolean,\r\n    isLockedOut: boolean,\r\n    isNotAllowed: boolean,\r\n    requiresTwoFactor: boolean\r\n  },\r\n  jwt: string,\r\n}\r\n\r\nexport interface IAuthState extends IState{\r\n  isAuthenticated: boolean,\r\n  isAdmin: boolean,\r\n}\r\n","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { ILogin, AuthActionsTypesEnum, ILoginResponse} from \"./types\";\r\n\r\nconst showLoaderAuth = (data: boolean) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertAuth = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: AuthActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: AuthActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchLoginData = () => {\r\n  return {\r\n    type: AuthActionsTypesEnum.login,\r\n  }\r\n}\r\n\r\nconst isAdmin = (data: boolean) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.isAdmin,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst isAuthenticated = (data: boolean) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.isAuthenticated,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst logout = () => {\r\n  return {\r\n    type: AuthActionsTypesEnum.logout\r\n  }\r\n}\r\n\r\nexport const loginThunk = (data: ILogin) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderAuth(true))\r\n    \r\n    let headers: AxiosRequestConfig = { headers: { \r\n      withCredentials: true, \r\n      \"Content-Type\": \"application/json-patch+json\",\r\n      \"accept\": \"text/plain\" \r\n    }}\r\n\r\n    Axios.post(api.login, data, headers)\r\n      .then(res => {\r\n        localStorage.setItem(\"poc-token\",res.data)\r\n        dispatch(fetchLoginData())\r\n        dispatch(isAdminThunk())\r\n        dispatch(showLoaderAuth(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertAuth(\"Помилка сервера!\"))\r\n        dispatch(showLoaderAuth(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const getUserDataThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }}\r\n\r\n    Axios.get(api.getUserData, headers)\r\n      .then(res => {\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const isAdminThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }}\r\n\r\n    Axios.get(api.isAdmin, headers)\r\n      .then(res => {\r\n        dispatch(isAdmin(res.data))\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const isAuthenticatedThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }}\r\n\r\n    Axios.get(api.isAuthenticated, headers)\r\n      .then(res => {\r\n        dispatch(isAuthenticated(res.data))\r\n      })\r\n      .catch(err => {\r\n      })\r\n  }\r\n}\r\n\r\nexport const logoutThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderAuth(true))\r\n    dispatch(logout())\r\n    localStorage.removeItem(\"poc-token\")\r\n    dispatch(showLoaderAuth(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum InstaActionsTypesEnum {\r\n  showLoader = \"INSTAGRAM_SHOW_LOADER\",\r\n  showAlert = \"INSTAGRAM_SHOW_ALERT\",\r\n  hideAlert = \"INSTAGRAM_HIDE_ALERT\",\r\n  fetchInstaStories = \"FETCH_INSTAGRAM_STORIES\",\r\n}\r\n\r\nexport interface IInstaResponse {\r\n  instaStories: IInstaStory[]\r\n}\r\n\r\nexport interface IInstaStory {\r\n  image: string,\r\n  video: string\r\n}\r\n\r\nexport interface IInstaState extends IState{\r\n  instaData: IInstaResponse\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./adminNav.css\"\r\n\r\nexport const AdminNav: React.FC = () => {\r\n  return <>\r\n    <ul className=\"admin-ul\">\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Orders\" exact>\r\n          <span className=\"material-icons\">view_list</span>\r\n          Список замовлень\r\n        </NavLink>\r\n      </li>\r\n\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Users/\" exact>\r\n          <span className=\"material-icons\">people_alt</span>\r\n          Управління користувачами\r\n        </NavLink>\r\n      </li>\r\n\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Settings/\" exact>\r\n          <span className=\"material-icons\">settings</span>\r\n          Налаштування\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </>\r\n}","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { isAdminThunk, isAuthenticatedThunk, logoutThunk } from \"../../store/auth/actions\";\r\nimport { AdminNav } from \"./adminNav\"\r\n\r\nimport \"./navbar.css\"\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated)\r\n  const isAdmin = useSelector((state: RootState) => state.auth.isAdmin)\r\n\r\n  useEffect(() => {\r\n    dispatch(isAdminThunk())\r\n    dispatch(isAuthenticatedThunk())\r\n  }, [dispatch])\r\n\r\n  const adminPanelLink = () => {\r\n    if (isAdmin) {\r\n      return <>\r\n        <div className=\"dropdown\">\r\n          <li className=\"nav-item active-item\">\r\n            <div className=\"nav-link link\">\r\n              <span className=\"material-icons\">admin_panel_settings</span>\r\n              Панель Адміністратора\r\n            </div>\r\n          </li>\r\n\r\n          <div className=\"dropdown-content\">\r\n            <AdminNav />\r\n          </div>\r\n        </div>\r\n      </>\r\n    }\r\n  }\r\n\r\n  const loginPanelLink = () => {\r\n    if (isAuthenticated) {\r\n      return <>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\" exact onClick={() => dispatch(logoutThunk())}>\r\n              <span className=\"material-icons\">logout</span>\r\n              Вийти\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    } else {\r\n      return <>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Auth\" exact>\r\n              <span className=\"material-icons\">login</span>\r\n              Увійти\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <nav className=\"nav navbar-expand-lg\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-icon\">Menu</span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\" exact>\r\n              <span className=\"material-icons\">home</span>\r\n              Головна\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MakeOrder\" exact>\r\n              <span className=\"material-icons\">add_shopping_cart</span>\r\n              Замовити картину\r\n            </NavLink>\r\n          </li>\r\n\r\n          {/* <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Gallery\" exact>\r\n              <span className=\"material-icons\">photo_library</span>\r\n              Галерея\r\n            </NavLink>\r\n          </li> */}\r\n\r\n          {adminPanelLink()}\r\n        </ul>\r\n\r\n        {loginPanelLink()}\r\n      </div>\r\n    </nav>\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IInstaStory, InstaActionsTypesEnum } from \"./types\"\r\n\r\nconst showLoaderInsta = (data: boolean) => {\r\n  return {\r\n    type: InstaActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertInsta = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: InstaActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: InstaActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchInstaStories = (data: IInstaStory[]) => {\r\n  return {\r\n    type: InstaActionsTypesEnum.fetchInstaStories,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getInstaStoriesThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderInsta(true))\r\n\r\n    Axios.post(api.getInstaStories, data)\r\n      .then(res => {\r\n        dispatch(fetchInstaStories(res.data))\r\n        dispatch(showLoaderInsta(false))\r\n\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderInsta(false))\r\n        dispatch(showAlertInsta(\"Помилка сервера!\"))\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateStoriesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderInsta(true))\r\n\r\n    Axios.get(api.updateInsatStories)\r\n      .then(res => {\r\n        dispatch(fetchInstaStories(res.data))\r\n        dispatch(showLoaderInsta(false))\r\n\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderInsta(false))\r\n        dispatch(showAlertInsta(\"Помилка сервера!\"))\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum GalleryActionsTypesEnum {\r\n  showLoader = \"GALLERY_SHOW_LOADER\",\r\n  showAlert = \"GALLERY_SHOW_ALERT\",\r\n  hideAlert = \"GALLERY_HIDE_ALERT\",\r\n  fetchImages = \"GALLERY_FETCH_IMAGES\",\r\n}\r\n\r\nexport interface IImages {\r\n  id: string,\r\n  imageName: string,\r\n  contentType: string,\r\n  image: string\r\n}\r\n\r\nexport interface IGalleryState extends IState{\r\n  images: IImages[]\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./modalWindow.css\"\r\n\r\nexport const ModalWindow = (props: {html: JSX.Element, setIsOpen: any}): JSX.Element => {\r\n  return <>\r\n      <div className=\"custom-modal\">\r\n        <div className=\"custom-modal-body\">\r\n          <span className=\"material-icons close-icon\" onClick={e => props.setIsOpen(false)}>close</span>\r\n          {props.html}\r\n        </div>\r\n      </div>\r\n  </>\r\n}","import React from \"react\"\r\n\r\nexport const Spinner: React.FC = () => {\r\n\r\n  return <>\r\n    <div \r\n      className=\"d-flex justify-content-center\"\r\n      style={{marginTop: \"10%\"}}\r\n    >\r\n      <div \r\n        className=\"spinner-border text-primary\" \r\n        style={{width: \"3rem\", height: \"3rem\"}} \r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { getInstaStoriesThunk } from \"../../store/instagram/actions\"\r\nimport { ModalWindow } from \"../general/modalWindow/modalWindow\"\r\nimport { Spinner } from \"../general/spinner\"\r\n\r\nimport \"./reviews.css\"\r\n\r\nexport const Reviews: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const stories = useSelector((state: RootState) => state.instagram.instaData.instaStories)\r\n  const showLoader = useSelector((state: RootState) => state.instagram.showLoader)\r\n\r\n  useEffect(() => {\r\n    let formData = new FormData()\r\n    formData.set(\"name\", \"відгуки\")\r\n\r\n    dispatch(getInstaStoriesThunk(formData))\r\n  }, [dispatch])\r\n\r\n  const storiesList = () => {\r\n    return <>\r\n      {stories.map((story) =>\r\n        <>\r\n          <img className=\"review-img\" onClick={e => setIsOpen(true)} src={\"data:image/png;base64,\" +  story.image} alt=\"...\" />\r\n          {isOpen &&\r\n            <ModalWindow html={\r\n              story.video !== null ?\r\n                <video src={\"data:video/mp4;base64,\" + story.video} width=\"260\" /> :\r\n                <img src={\"data:image/jpeg;base64,\" + story.image} width=\"260\" alt=\"...\" />\r\n            } setIsOpen={setIsOpen} />\r\n          }\r\n        </>\r\n      )}\r\n    </>\r\n  }\r\n\r\n  return <>\r\n    {\r\n      showLoader\r\n        ?\r\n        <Spinner />\r\n        :\r\n        storiesList()\r\n    }\r\n  </>\r\n}","import React from \"react\"\r\n\r\nimport \"./video.css\"\r\n\r\nexport const Video: React.FC = () => {\r\n  var videoURL = \"\"\r\n\r\n  return <>\r\n    <video className=\"video video-item\" src={videoURL} controls={true} />\r\n  </>\r\n}","import React from \"react\"\r\n\r\nimport \"./text.css\"\r\n\r\nexport const Text: React.FC = () => {\r\n  return <>\r\n    <div className=\"text\">\r\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae incidunt iusto optio dolores obcaecati, earum provident harum, esse magni at, modi error natus labore reiciendis dolore deleniti tenetur dolorum pariatur!</p>\r\n    </div>\r\n  </>\r\n}","import React from \"react\"\r\nimport { Reviews } from \"../components/home/reviews\"\r\nimport { Video } from \"../components/home/video\"\r\nimport { Text } from \"../components/home/text\"\r\nimport { Preloader } from \"../components/general/preloader/preloader\"\r\n\r\nimport \"./home.css\"\r\nimport { RootState } from \"../store\"\r\nimport { useSelector } from \"react-redux\"\r\n\r\nexport const Home: React.FC = () => {\r\n  const showLoader = useSelector((state: RootState) => state.instagram.showLoader)\r\n\r\n\r\n  return <>\r\n    <div className=\"row block text-block\">\r\n      <Text />\r\n    </div>\r\n\r\n    <div className=\"row block\">\r\n      <Video />\r\n    </div>\r\n\r\n    <div className=\"row block\">\r\n      <Reviews />\r\n    </div>\r\n  </>\r\n\r\n\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { GalleryActionsTypesEnum, IImages } from \"./types\";\r\n\r\nconst showLoaderGallery = (data: boolean) => {\r\n  return {\r\n    type: GalleryActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertGallery = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: GalleryActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: GalleryActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchImages = (data: IImages) => {\r\n  return {\r\n    type: GalleryActionsTypesEnum.fetchImages,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getImagesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n\r\n    Axios.get(api.galleryGetImages)\r\n      .then(res => {\r\n        dispatch(fetchImages(res.data))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\nexport const addImageThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n    \r\n    let headers: AxiosRequestConfig = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    Axios.post(api.galleryAddImage, data, headers)\r\n      .then(res => {\r\n        dispatch(showAlertGallery(res.statusText))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\nexport const deleteImageThunk = (imageId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n\r\n    Axios.delete(api.galleryDeleteImage, { params: { imageId } })\r\n      .then(res => {\r\n        dispatch(showAlertGallery(res.statusText))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum CanvasActionsTypesEnum {\r\n  showLoader = \"CANVAS_SHOW_LOADER\",\r\n  showAlert = \"CANVAS_SHOW_ALERT\",\r\n  hideAlert = \"CANVAS_HIDE_ALERT\",\r\n  fetchCanvas = \"FETCH_CANVAS\",\r\n}\r\n\r\nexport interface ICanvas {\r\n  id: string,\r\n  name: string,\r\n  price: string,\r\n  size: string,\r\n}\r\n\r\nexport interface ICreateCanvas {\r\n  price: string,\r\n  size: string,\r\n}\r\n\r\nexport interface ICanvasState extends IState{\r\n  canvasData: ICanvas[]\r\n}","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getImagesThunk, addImageThunk, deleteImageThunk } from \"../../store/gallery/actions\"\r\nimport { RootState } from \"../../store/\"\r\n\r\nimport \"./images.css\"\r\n\r\nexport const Images = (): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n  const images = useSelector((state: RootState) => state.gallery.images)\r\n\r\n  useEffect(() => {\r\n    dispatch(getImagesThunk())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(addImageThunk(formData))\r\n  }\r\n\r\n  const addImageButton = () => {\r\n    if (true) {\r\n      return <>\r\n        <form onSubmit={submitHandler}>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            accept=\"image/*\"\r\n            name=\"Image\"\r\n          />\r\n\r\n          <button className=\"add-button\">\r\n            <span className=\"material-icons add-icon\">add</span>\r\n          </button>\r\n        </form>\r\n      </>\r\n    }\r\n  }\r\n\r\n  return <>\r\n    {addImageButton()}\r\n\r\n    {images.map((item) =>\r\n      <div key={item.id}>\r\n        <img className=\"list-img\" src={\"data:image/png;base64,\" + item.image} alt=\"...\" />\r\n        {true && \r\n          <button onClick={e => dispatch(deleteImageThunk(item.id))}>Delete</button>\r\n        }\r\n      </div>\r\n    )}\r\n  </>\r\n}","import React from \"react\";\r\nimport { Images } from \"../components/gallery/images\"\r\n\r\nexport const Gallery: React.FC = () => {\r\n  return <>\r\n    <Images />\r\n  </>\r\n}","import React, { useEffect, useState } from \"react\"\r\n\r\nexport type ValidType = {\r\n  (value: any): string\r\n}\r\n\r\nexport const useInput = (initValue: any, validations?: ValidType[] ) => {\r\n  const [value, setValue] = useState(initValue)\r\n  const [wasFocused, setFocused] = useState(false)\r\n  const [error, setError] = useState(\"\")\r\n  const [style, setStyle] = useState({})\r\n  const disabledButton = error.length !== 0 || !wasFocused ? true : false\r\n  \r\n  const set = (data: any) => {\r\n    setValue(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (wasFocused) {\r\n      validations?.map(validator => {\r\n        setError(validator(value))\r\n      })\r\n    }\r\n  }, [value, wasFocused])\r\n\r\n  useEffect(() => {\r\n    if (error.length !== 0) {\r\n      setStyle({\r\n        borderColor: \"red\",\r\n        borderWidth: \"2px\",\r\n        borderStyle: \"solid\"\r\n      })\r\n    } else if (error.length == 0 && wasFocused){\r\n      setStyle({\r\n        borderColor: \"#0dde0d\",\r\n        borderWidth: \"2px\",\r\n        borderStyle: \"solid\"\r\n      })\r\n    }\r\n  }, [error, value])\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setValue(event.target.value)\r\n    setFocused(true) \r\n  }\r\n\r\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFocused(true) \r\n  }\r\n\r\n  return {\r\n    value,\r\n    set,\r\n    error,\r\n    onChange,\r\n    onBlur,\r\n    style,\r\n    disabledButton\r\n  }\r\n}","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { CanvasActionsTypesEnum, ICanvas, ICreateCanvas } from \"./types\"\r\n\r\nconst showLoaderCanvas = (data: boolean) => {\r\n  return {\r\n    type: CanvasActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertCanvas = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: CanvasActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: CanvasActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchCanvas = (data: ICanvas[]) => {\r\n  return {\r\n    type: CanvasActionsTypesEnum.fetchCanvas,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getCanvasThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.get(api.getCanvas)\r\n      .then(res => {\r\n        dispatch(fetchCanvas(res.data))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\nexport const makeCanvasThunk = (data: ICreateCanvas) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.post(api.createCanvas, data)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\nexport const deleteCanvasThunk = (canvasId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.post(api.deleteCanvas, canvasId)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\nimport { ICanvas } from \"../canvas/types\";\r\n\r\nexport enum OrdersActionsTypesEnum {\r\n  showLoader = \"ORDER_SHOW_LOADER\",\r\n  showAlert = \"ORDER_SHOW_ALERT\",\r\n  hideAlert = \"ORDER_HIDE_ALERT\",\r\n  fetchOrders = \"FETCH_ORDERS\",\r\n}\r\n\r\nexport interface IOrderResponse {\r\n  elementsCount: number,\r\n  pageSize: number,\r\n  currentPage: number,\r\n  totalPages: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean,\r\n  data: IOrder[]\r\n}\r\n\r\nexport interface IOrder {\r\n  id: string,\r\n  customerName: string,\r\n  phoneNumber: string,\r\n  address: string,\r\n  canvas: ICanvas,\r\n  image: string,\r\n}\r\n\r\nexport interface IMakeOrder {\r\n  customerName: string,\r\n  phoneNumber: string,\r\n  address: string,\r\n  canvasId: string,\r\n  image: File,\r\n}\r\n\r\nexport enum makeOrderEnum {\r\n  customerName = \"customerName\",\r\n  phoneNumber = \"phoneNumber\",\r\n  address = \"address\",\r\n  canvasId = \"canvasId\",\r\n  image = \"image\",\r\n} \r\n\r\nexport interface IOrdersState extends IState{\r\n  ordersData: IOrderResponse\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { PageListQueryType } from \"../base/types\";\r\nimport { IOrderResponse, OrdersActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderOrders = (data: boolean) => {\r\n  return {\r\n    type: OrdersActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const showAlertOrders = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: OrdersActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: OrdersActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchOrders = (data: IOrderResponse) => {\r\n  return {\r\n    type: OrdersActionsTypesEnum.fetchOrders,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getOrdersThunk = (data: PageListQueryType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    Axios.get(api.getOrders, { params: { pageNumber: data.pageNumber, pageSize: data.pageSize } })\r\n      .then(res => {\r\n        dispatch(fetchOrders(res.data))\r\n        dispatch(showLoaderOrders(false))\r\n\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const makeOrderThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    let headers: AxiosRequestConfig = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    Axios.post(api.makeOrder, data, headers)\r\n      .then(res => {\r\n        dispatch(showLoaderOrders(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n        console.log(\"make order fail\", err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteOrderThunk = (orderId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    Axios.delete(api.deleteOrder, { params: { orderId: orderId } })\r\n      .then(res => {\r\n        dispatch(showLoaderOrders(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum RegisterActionsTypesEnum {\r\n  showLoader = \"REGISTER_SHOW_LOADER\",\r\n  showAlert = \"REGISTER_SHOW_ALERT\",\r\n  hideAlert = \"REGISTER_HIDE_ALERT\",\r\n  registrate = \"REGISTRATE\",\r\n}\r\n\r\nexport interface IRegister {\r\n  email: string,\r\n  password: string,\r\n  confirmPassword: string\r\n}\r\n\r\nexport interface IRegisterState extends IState {\r\n\r\n}\r\n","import React from \"react\"\r\nimport \"./submitButton.css\"\r\n\r\nexport const SubmitButton = (props: {text: string, disabled?: boolean}): JSX.Element => {\r\n\r\n  return <>\r\n    <button \r\n      type=\"submit\" \r\n      className=\"btn\"\r\n      disabled={props.disabled}\r\n    >{props.text}</button>\r\n  </>\r\n}","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const nameValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const phoneValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const addressValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const canvasIdValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { RootState } from \"../../store\"\r\nimport { getUserDataThunk } from \"../../store/auth/actions\"\r\nimport { getCanvasThunk } from \"../../store/canvas/actions\"\r\nimport { makeOrderThunk } from \"../../store/order/actions\"\r\nimport { makeOrderEnum } from \"../../store/order/types\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\nimport { nameValidators, phoneValidators, addressValidators, canvasIdValidators } from \"./orderValidations\"\r\n\r\nexport const MakeOrderForm: React.FC = () => {\r\n  const canvas = useSelector((state: RootState) => state.canvas.canvasData)\r\n  const dispatch = useDispatch()\r\n\r\n  const name = useInput(\"\", nameValidators)\r\n  const phone = useInput(\"\", phoneValidators)\r\n  const address = useInput(\"\", addressValidators)\r\n  const canvasId = useInput(\"\", canvasIdValidators)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCanvasThunk())\r\n    dispatch(getUserDataThunk())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n    formData.set(\"canvasId\", canvasId.value)\r\n\r\n    event.preventDefault()\r\n    dispatch(makeOrderThunk(formData))\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-group\" style={name.style}>\r\n        <label>Прізвище Імя</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.customerName}\r\n          value={name.value}\r\n          onChange={e => name.onChange(e)}\r\n          onBlur={e => name.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {name.error.length !== 0 &&\r\n        <span className=\"error-span\">{name.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group\" style={phone.style}>\r\n        <label>Номер телефону</label>\r\n        <input\r\n          type=\"tel\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.phoneNumber}\r\n          value={phone.value}\r\n          onChange={e => phone.onChange(e)}\r\n          onBlur={e => phone.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {phone.error.length !== 0 &&\r\n        <span className=\"error-span\">{phone.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group\" style={address.style}>\r\n        <label>Адрес доставки</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.address}\r\n          value={address.value}\r\n          onChange={e => address.onChange(e)}\r\n          onBlur={e => address.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {address.error.length !== 0 &&\r\n        <span className=\"error-span\">{address.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group\">\r\n        <label>Завантажити зображення</label>\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.image}\r\n          accept=\"image/*\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\" style={canvasId.style}>\r\n        <label>Тип полотна</label>\r\n        <select className=\"form-control\"\r\n          name={makeOrderEnum.canvasId}\r\n          onChange={e => canvasId.onChange(e)}\r\n          onBlur={e => canvasId.onBlur(e)}\r\n        >\r\n          <option disabled selected>Виберіть тип полотна</option>\r\n          {\r\n            canvas.map((item) =>\r\n              <option key={item.id} value={item.id}>{item.name}</option>\r\n            )\r\n          }\r\n        </select>\r\n      </div>\r\n\r\n      {canvasId.error.length !== 0 &&\r\n        <span className=\"error-span\">{canvasId.error}</span>\r\n      }\r\n\r\n      <SubmitButton text={\"Замовити\"}/>\r\n    </form>\r\n  </>\r\n}","import React from \"react\";\r\n\r\nimport { MakeOrderForm } from \"../components/orders/makeOrderForm\";\r\n\r\nexport const MakeOrder: React.FC = () => {\r\n  return <>\r\n    <MakeOrderForm />\r\n  </>\r\n}","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const emailValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const passwordValidators: ValidType[] = [\r\n  (value: any) => value.length < 6 ? \"Потрібно ввести не менше шести символів\" : \"\"\r\n  \r\n]","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { loginThunk } from \"../../store/auth/actions\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\n\r\nimport \"./index.css\"\r\nimport { emailValidators, passwordValidators } from \"./authValidations\"\r\nimport { Redirect } from \"react-router\"\r\nimport { RootState } from \"../../store\"\r\n\r\nexport const LoginForm: React.FC = () => {\r\n  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated)\r\n  const dispatch = useDispatch()\r\n  const email = useInput(\"\", emailValidators)\r\n  const password = useInput(\"\", passwordValidators)\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    dispatch(loginThunk({ email: email.value, password: password.value }))\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <label className=\"auth-label\">LOG IN</label>\r\n\r\n      <div className=\"form-group form-input-group\" style={email.style}>\r\n        <span className=\"material-icons auth-icon\">alternate_email</span>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть свій Email\"\r\n          value={email.value}\r\n          onChange={e => email.onChange(e)}\r\n          onFocus={e => email.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {email.error.length !== 0 && \r\n        <span className=\"error-span\">{email.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={password.style}>\r\n        <span className=\"material-icons auth-icon\">enhanced_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть пароль\"\r\n          value={password.value}\r\n          onChange={e => password.onChange(e)}\r\n          onFocus={e => password.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{password.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-check\">\r\n        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n        <label className=\"form-check-label\">Запамятати</label>\r\n      </div>\r\n\r\n      <>\r\n        <SubmitButton \r\n          text=\"Увійти\" \r\n          disabled={\r\n            email.disabledButton ||\r\n            password.disabledButton \r\n          }\r\n        />\r\n      </>\r\n\r\n    </form>\r\n  </>\r\n}","import Axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IRegister, RegisterActionsTypesEnum} from \"./types\";\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: RegisterActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: RegisterActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: RegisterActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nexport const registerThunk = (data: IRegister) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.registration, data)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRegister(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum EmailSettingsEnum {\r\n  serviceIsOn = \"serviceIsOn\",\r\n  from = \"from\",\r\n  smtpServer = \"smtpServer\",\r\n  port = \"port\",\r\n  userName = \"userName\",\r\n  password = \"password\"\r\n}\r\n\r\nexport enum EmailSettingsActionsTypesEnum {\r\n  showLoader = \"EMAIL_SETTINGS_SHOW_LOADER\",\r\n  showAlert = \"EMAIL_SETTINGS_SHOW_ALERT\",\r\n  hideAlert = \"EMAIL_SETTINGS_HIDE_ALERT\",\r\n  fetchEmailSettings = \"FETCH_EMAIL_SETTINGS\"\r\n}\r\n\r\nexport interface IEmailSettings {\r\n  serviceIsOn: boolean,\r\n  from: string,\r\n  smtpServer: string,\r\n  port: number,\r\n  userName: string,\r\n  password: string\r\n}\r\n\r\nexport interface IEmailSettingsState extends IState{\r\n  emailSettingsData: IEmailSettings\r\n}\r\n\r\nexport const emailSettingsTypeName: string = \"EmailSettings\"","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInput } from \"../../helpers/useInput\";\r\nimport { registerThunk } from \"../../store/registration/actions\";\r\nimport { IRegister } from \"../../store/registration/types\";\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\";\r\nimport { emailValidators, passwordValidators } from \"./authValidations\";\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const email = useInput(\"\", emailValidators)\r\n  const password = useInput(\"\", passwordValidators)\r\n  const confirmPassword = useInput(\"\", passwordValidators)\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    let data: IRegister = {\r\n      email: email.value,\r\n      password: password.value,\r\n      confirmPassword: confirmPassword.value\r\n    }\r\n    dispatch(registerThunk(data))\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <label className=\"auth-label\">SIGN UP</label>\r\n\r\n      <div className=\"form-group form-input-group\" style={email.style}>\r\n        <span className=\"material-icons auth-icon\">alternate_email</span>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть свій Email\"\r\n          value={email.value}\r\n          onChange={e => email.onChange(e)}\r\n          onFocus={e => email.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {email.error.length !== 0 &&\r\n        <span className=\"error-span\">{email.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={password.style}>\r\n        <span className=\"material-icons auth-icon\">enhanced_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть пароль\"\r\n          value={password.value}\r\n          onChange={e => password.onChange(e)}\r\n          onFocus={e => password.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{password.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={confirmPassword.style}>\r\n        <span className=\"material-icons auth-icon\">no_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Підтвердіть пароль\"\r\n          value={confirmPassword.value}\r\n          onChange={e => confirmPassword.onChange(e)}\r\n          onFocus={e => confirmPassword.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{confirmPassword.error}</span>\r\n      }\r\n\r\n      <SubmitButton \r\n        text=\"Зареєструватись\"\r\n        disabled={\r\n          email.disabledButton ||\r\n          password.disabledButton ||\r\n          confirmPassword.disabledButton\r\n        }\r\n      />\r\n    </form>\r\n  </>\r\n}","import React from \"react\";\r\n\r\nimport { LoginForm } from \"../components/signIn/loginForm\";\r\nimport { RegistrationForm } from \"../components/signIn/registrationForm\";\r\n\r\nexport const Auth: React.FC = () => {\r\n  return <>\r\n    <div className=\"row\">\r\n      <div className=\"col\"><LoginForm /></div>\r\n\r\n      <div className=\"col\"><RegistrationForm /></div>\r\n    </div>\r\n  </>\r\n}","import { IState } from \"../base/types\";\r\n\r\nexport enum InstaSettingsEnum {\r\n  username = \"username\",\r\n  password = \"password\",\r\n  msgReceiverList = \"msgReceiverList\",\r\n}\r\n\r\nexport enum InstaSettingsActionsTypesEnum {\r\n  showLoader = \"INSTAGRAM_SETTINGS_SHOW_LOADER\",\r\n  showAlert = \"INSTAGRAM_SETTINGS_SHOW_ALERT\",\r\n  hideAlert = \"INSTAGRAM_SETTINGS_HIDE_ALERT\",\r\n  fetchInstaSettings = \"FETCH_INSTAGRAM_SETTINGS\"\r\n}\r\n\r\nexport interface IInstaSettings {\r\n  username: string,\r\n  password: string,\r\n  msgReceiverList: string[],\r\n}\r\n\r\nexport interface IInstaSettingsState extends IState{\r\n  instaSettingsData: IInstaSettings\r\n}\r\n\r\nexport const instaSettingsTypeName: string = \"InstagramSettings\"","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { EmailSettingsActionsTypesEnum, IEmailSettings } from \"./types\"\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: EmailSettingsActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: EmailSettingsActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: EmailSettingsActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchEmailSettings = (data: IEmailSettings) => {\r\n  return {\r\n    type: EmailSettingsActionsTypesEnum.fetchEmailSettings,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getEmailConfigThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.get(api.getEmailConfig)\r\n      .then(res => {\r\n        dispatch(fetchEmailSettings(res.data))\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\nexport const setEmailConfigThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.setEmailConfig, data)\r\n      .then(res => {\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { RootState } from \"../../store\"\r\nimport { getEmailConfigThunk, setEmailConfigThunk } from \"../../store/emailSettings/actions\"\r\nimport { EmailSettingsEnum, IEmailSettings, IEmailSettingsState } from \"../../store/emailSettings/types\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\n\r\nexport const EmailSettings: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const alert = useSelector((state: RootState) => state.emailSettings.alert)\r\n  const showLoader = useSelector((state: RootState) => state.emailSettings.showLoader)\r\n  const data: IEmailSettings = useSelector((state: RootState) => state.emailSettings.emailSettingsData)\r\n\r\n  const serviceIsOn = useInput(data.serviceIsOn)\r\n  const from = useInput(data.from)\r\n  const smtpServer = useInput(data.smtpServer)\r\n  const port = useInput(data.port)\r\n  const userName = useInput(data.userName)\r\n  const password = useInput(data.password)\r\n  \r\n  const changeEmailSettings = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(setEmailConfigThunk(formData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getEmailConfigThunk())\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    {\r\n      showLoader\r\n        ?\r\n        <Spinner />\r\n        :\r\n        <form className=\"\" onSubmit={changeEmailSettings}>\r\n          <h4 className=\"setting-head\">Email Settings:</h4>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {serviceIsOn.error.length !== 0 &&\r\n              <span className=\"error-span\">{serviceIsOn.error}</span>\r\n            }\r\n            <label>Увімкнути email підтвердження реєстрації</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name={EmailSettingsEnum.serviceIsOn}\r\n              className=\"form-control m-3\"\r\n              checked={serviceIsOn.value}\r\n              onChange={e => serviceIsOn.onChange(e)}\r\n              onBlur={e => serviceIsOn.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {from.error.length !== 0 &&\r\n              <span className=\"error-span\">{from.error}</span>\r\n            }\r\n            <label>Від кого:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.from}\r\n              className=\"form-control\"\r\n              placeholder=\"Від кого\"\r\n              value={from.value}\r\n              onChange={e => from.onChange(e)}\r\n              onBlur={e => from.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {smtpServer.error.length !== 0 &&\r\n              <span className=\"error-span\">{smtpServer.error}</span>\r\n            }\r\n            <label>Smtp server:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.smtpServer}\r\n              className=\"form-control\"\r\n              placeholder=\"SMTP Server\"\r\n              value={smtpServer.value}\r\n              onChange={e => smtpServer.onChange(e)}\r\n              onBlur={e => smtpServer.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {port.error.length !== 0 &&\r\n              <span className=\"error-span\">{port.error}</span>\r\n            }\r\n            <label>Порт:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.port}\r\n              className=\"form-control\"\r\n              placeholder=\"Порт\"\r\n              value={port.value}\r\n              onChange={e => port.onChange(e)}\r\n              onBlur={e => port.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {userName.error.length !== 0 &&\r\n              <span className=\"error-span\">{userName.error}</span>\r\n            }\r\n            <label>Email адрес:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.userName}\r\n              className=\"form-control\"\r\n              placeholder=\"Email\"\r\n              value={userName.value}\r\n              onChange={e => userName.onChange(e)}\r\n              onBlur={e => userName.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {password.error.length !== 0 &&\r\n              <span className=\"error-span\">{password.error}</span>\r\n            }\r\n            <label>Пароль:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.password}\r\n              className=\"form-control\"\r\n              placeholder=\"Пароль\"\r\n              value={password.value}\r\n              onChange={e => password.onChange(e)}\r\n              onBlur={e => password.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <SubmitButton text=\"Зберегти\" />\r\n        </form>\r\n    }\r\n  </>\r\n}","import { IState } from \"../base/types\";\r\n\r\nexport enum UserEnum {\r\n  id = \"id\",\r\n  name = \"name\",\r\n  email = \"email\",\r\n  role = \"role\"\r\n}\r\nexport enum UserActionsTypesEnum {\r\n  showLoader = \"USER_SHOW_LOADER\",\r\n  showAlert = \"USER_SHOW_ALERT\",\r\n  hideAlert = \"USER_HIDE_ALERT\",\r\n  fetchUsers = \"FETCH_USERS\",\r\n}\r\n\r\nexport interface IUser {\r\n  id: string,\r\n  userName: string,\r\n  email: string,\r\n  roles: string[],\r\n}\r\n\r\nexport interface IUserResponse {\r\n  elementsCount: number,\r\n  pageSize: number,\r\n  currentPage: number,\r\n  totalPages: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean,\r\n  data: IUser[]\r\n}\r\n\r\nexport interface IUserState extends IState {\r\n  usersData: IUserResponse\r\n}","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { updateStoriesThunk } from \"../instagram/actions\"\r\nimport { IInstaSettings, InstaSettingsActionsTypesEnum } from \"./types\"\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: InstaSettingsActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: InstaSettingsActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: InstaSettingsActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchInstaSettings = (data: IInstaSettings) => {\r\n  return {\r\n    type: InstaSettingsActionsTypesEnum.fetchInstaSettings,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getInstaConfigThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.get(api.getInstaConfig)\r\n      .then(res => {\r\n        dispatch(fetchInstaSettings(res.data))\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\nexport const setInstaConfigThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.setInstaConfig, data)\r\n      .then(res => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(updateStoriesThunk())\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const usernameValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const passwordValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const receiversValidators: ValidType[] = [\r\n  \r\n  \r\n]","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { getInstaConfigThunk, setInstaConfigThunk } from \"../../store/instaSettings/actions\"\r\nimport { IInstaSettings, InstaSettingsEnum } from \"../../store/instaSettings/types\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { passwordValidators, receiversValidators, usernameValidators } from \"./instaValidations\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\n\r\nimport \"./index.css\"\r\n\r\nexport const InstaSettings: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const alert = useSelector((state: RootState) => state.instaSettings.alert)\r\n  const showLoader = useSelector((state: RootState) => state.instaSettings.showLoader)\r\n  const data: IInstaSettings = useSelector((state: RootState) => state.instaSettings.instaSettingsData)\r\n\r\n  const username = useInput(data.username, usernameValidators)\r\n  const password = useInput(data.password, passwordValidators)\r\n  const msgReceivers = useInput(data.msgReceiverList)\r\n\r\n  const changeSettings = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(setInstaConfigThunk(formData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getInstaConfigThunk())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    username.set(data.username)\r\n    password.set(data.password)\r\n    msgReceivers.set(data.msgReceiverList)\r\n  }, [data])\r\n\r\n  return <>\r\n    {\r\n      showLoader\r\n        ?\r\n        <Spinner />\r\n        :\r\n        <form className=\"\" onSubmit={changeSettings}>\r\n          <h4 className=\"setting-head\">Instagram Settings:</h4>\r\n\r\n          <div className=\"form-group setting-group\" style={username.style}>\r\n            {username.error.length !== 0 &&\r\n              <span className=\"error-span\">{username.error}</span>\r\n            }\r\n            <label>Інстаграм логін</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.username}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм логін \"\r\n              value={username.value}\r\n              onChange={e => username.onChange(e)}\r\n              onBlur={e => username.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className=\"form-group setting-group\" style={password.style}>\r\n            {password.error.length !== 0 &&\r\n              <span className=\"error-span\">{password.error}</span>\r\n            }\r\n            <label>Інстаграм пароль</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.password}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм пароль\"\r\n              value={password.value}\r\n              onChange={e => password.onChange(e)}\r\n              onBlur={e => password.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className=\"form-group setting-group\" style={msgReceivers.style}>\r\n            {msgReceivers.error.length !== 0 &&\r\n              <span className=\"error-span\">{msgReceivers.error}</span>\r\n            }\r\n            <label>Список отримувачів повідомлень про покупку</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.msgReceiverList}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм імя отримувачів повідомлень\"\r\n              value={msgReceivers.value}\r\n              onChange={e => msgReceivers.onChange(e)}\r\n              onBlur={e => msgReceivers.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <SubmitButton text=\"Зберегти\" />\r\n\r\n        </form>\r\n    }\r\n  </>\r\n}","import React from \"react\";\r\nimport { EmailSettings } from \"../components/settings/emailSettings\"\r\nimport { InstaSettings } from \"../components/settings/instaSettings\";\r\n\r\nexport const Settings: React.FC = () => {\r\n  return <>\r\n    <div className=\"row\">\r\n      <div className=\"col-auto\">\r\n        <EmailSettings />\r\n      </div>\r\n\r\n      <div className=\"col-auto\">\r\n        <InstaSettings />\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React, { useState } from \"react\"\r\n\r\nimport \"./alert.css\"\r\n\r\nexport const Alert = (props: { text: string, display: boolean }): JSX.Element => {\r\n\r\n  return <>\r\n    {props.display &&\r\n      <div\r\n        className=\"alert red-alert\"\r\n        role=\"alert\"\r\n      >\r\n        <h4>{props.text}</h4>\r\n      </div>\r\n    }\r\n  </>\r\n}","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { PageListQueryType } from \"../../store/base/types\"\r\n\r\nexport type PaginationType = {\r\n  handler: (data: PageListQueryType) => void,\r\n  totalPages: number,\r\n  currentPage: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean\r\n}\r\n\r\nexport const Pagination = (props: PaginationType): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n\r\n  const paginationHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    handler: (data: PageListQueryType) => void) => {\r\n\r\n    switch (event.currentTarget.value) {\r\n      case \"Previous\":\r\n        dispatch(handler({ pageNumber: props.currentPage - 1 }))\r\n      break;\r\n\r\n      case \"Next\":\r\n        dispatch(handler({ pageNumber: props.currentPage + 1 }))\r\n      break;\r\n\r\n      default:\r\n        dispatch(handler({ pageNumber: Number(event.currentTarget.value)}))\r\n      break;\r\n    }\r\n  }\r\n\r\n  function numberOfPage(props: PaginationType) {\r\n    var content: JSX.Element[] = [];\r\n\r\n    for (let i = 1; i <= props.totalPages; i++) {\r\n      content.push(\r\n        <li key={i} className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            value={i}\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            disabled={props.currentPage === i}\r\n          >{i}</button>\r\n        </li>\r\n      )\r\n    }\r\n    return content;\r\n  }\r\n\r\n  return <>\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            value=\"Previous\"\r\n            disabled={!props.hasPrevious}\r\n          >Previous</button>\r\n        </li>\r\n\r\n        {numberOfPage(props)}\r\n\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            value=\"Next\"\r\n            disabled={!props.hasNext}\r\n          >Next</button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </>\r\n}","import React from \"react\"\r\nimport \"./deleteIcon.css\"\r\n\r\nexport const DeleteIcon = (props: { onClickHandler: any }): JSX.Element => {\r\n\r\n  return <>\r\n    <div className=\"link\">\r\n      <span className=\"material-icons delete-icon\" onClick={props.onClickHandler}>delete_forever</span>\r\n    </div>\r\n  </>\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Pagination, PaginationType } from \"../general/pagination\"\r\nimport { RootState } from \"../../store\"\r\nimport { deleteOrderThunk, getOrdersThunk, showAlertOrders } from \"../../store/order/actions\"\r\nimport { IOrder, IOrderResponse } from \"../../store/order/types\"\r\nimport { DeleteIcon } from \"../general/deleteIcon/deleteIcon\"\r\n\r\nexport const OrdersList: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const pages: IOrderResponse = useSelector((state: RootState) => state.order.ordersData)\r\n  const orders: IOrder[] = pages.data\r\n\r\n  const pagProps: PaginationType = {\r\n    handler: getOrdersThunk,\r\n    totalPages: pages.totalPages,\r\n    currentPage: pages.currentPage,\r\n    hasNext: pages.hasNext,\r\n    hasPrevious: pages.hasPrevious\r\n  }\r\n\r\n  const deleteOrder = (orderId: string) => {\r\n    let result = window.confirm(\"Підтвердіть видалення\")\r\n    if (result) {\r\n      dispatch(deleteOrderThunk(orderId))\r\n    } else {\r\n      dispatch(showAlertOrders(\"Видалення Відмінено!\"))\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Імя</th>\r\n          <th scope=\"col\">Номер телефону</th>\r\n          <th scope=\"col\">Адрес</th>\r\n          <th scope=\"col\">Тип картини</th>\r\n          <th scope=\"col\">Зображення</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {orders.map((order) =>\r\n          <tr key={order.id}>\r\n            <td>{order.customerName}</td>\r\n            <td>{order.phoneNumber}</td>\r\n            <td>{order.address}</td>\r\n            <td>{order.canvas.name}</td>\r\n            <td><img className=\"list-img\" src={\"data:image/png;base64,\" + order.image} alt=\"...\" /></td>\r\n            <td><DeleteIcon onClickHandler={() => deleteOrder(order.id)}/></td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Pagination {...pagProps} />\r\n  </>\r\n}","import React, { useEffect } from \"react\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { Alert } from \"../general/alert/alert\"\r\nimport { RootState } from \"../../store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { OrdersList } from \"./ordersList\"\r\nimport { getOrdersThunk } from \"../../store/order/actions\"\r\nimport { IOrder } from \"../../store/order/types\"\r\n\r\nexport const Orders: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const showLoader = useSelector((state: RootState) => state.order.showLoader)\r\n  const alert = useSelector((state: RootState) => state.order.alert)\r\n  const orders: IOrder[] = useSelector((state: RootState) => state.order.ordersData.data)\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrdersThunk({}))\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    <Alert text={alert.text} display={alert.showAlert} />\r\n\r\n    {\r\n      showLoader ? <Spinner /> :\r\n        !orders.length ? <h3>Замовлень немає</h3> :\r\n          <OrdersList />\r\n    }\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { PageListQueryType } from \"../base/types\";\r\nimport { IUserResponse, UserActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderUsers = (data: boolean) => {\r\n  return {\r\n    type: UserActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const showAlertUsers = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: UserActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: UserActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\n\r\nconst fetchUsers = (data: IUserResponse) => {\r\n  return {\r\n    type: UserActionsTypesEnum.fetchUsers,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getUsersThunk = (data: PageListQueryType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    let config: AxiosRequestConfig = { headers: { \r\n      withCredentials: true,\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}`\r\n    }, params: { \r\n      pageNumber: data.pageNumber, \r\n      pageSize: data.pageSize \r\n    }}\r\n\r\n    Axios.get(api.getUsers, config)\r\n      .then(res => {\r\n        console.log(res)\r\n        dispatch(fetchUsers(res.data))\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteUserThunk = (userId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    let headers: AxiosRequestConfig = { headers: { \r\n      'Content-Type': 'application/json-patch+json',\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"poc-token\")}` \r\n    } }\r\n    Axios.post(api.deleteUser, userId, headers)\r\n      .then(res => {\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderUsers(false))\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\ntype editRolesRequestType = {\r\n  userId: string,\r\n  roles: string[]\r\n}\r\n\r\nexport const editUserRolesThunk = (data: editRolesRequestType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    Axios.post(api.editUserRoles, data)\r\n      .then(res => {\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderUsers(false))\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum RolesActionsTypesEnum {\r\n  showLoader = \"ROLES_SHOW_LOADER\",\r\n  showAlert = \"ROLES_SHOW_ALERT\",\r\n  hideAlert = \"ROLES_HIDE_ALERT\",\r\n  fetchRoles = \"FETCH_ROLES\",\r\n}\r\n\r\nexport interface IRole {\r\n  id: string,\r\n  name: string\r\n}\r\n\r\nexport interface IRolesState extends IState {\r\n  rolesData: IRole[]\r\n}","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { IRole } from \"../../store/roles/types\"\r\nimport { editUserRolesThunk } from \"../../store/users/actions\"\r\nimport { IUser } from \"../../store/users/types\"\r\n\r\nexport const RolesControl = (props: IUser): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n  const allRoles: IRole[] = useSelector((state: RootState) => state.roles.rolesData)\r\n  const [chekedItems, setChekedItems] = useState<Set<string>>(new Set<string>(props.roles))\r\n\r\n  const checkboxHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!chekedItems.has(event.target.name)) {\r\n      setChekedItems(new Set<string>(chekedItems.add(event.target.name)))\r\n    } else {\r\n      chekedItems.delete(event.target.name)\r\n      setChekedItems(new Set<string>(chekedItems))\r\n    }\r\n  }\r\n\r\n  const changeUserRoles = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    event.preventDefault()\r\n    dispatch(editUserRolesThunk({ userId: props.id, roles: Array.from(chekedItems) }))\r\n  }\r\n\r\n  return <>\r\n    {allRoles.map((role) =>\r\n      <div className=\"form-check m-3\" key={role.id}>\r\n        <label>{role.name}</label>\r\n        <input\r\n          className=\"m-3\"\r\n          type=\"checkbox\"\r\n          name={role.name}\r\n          checked={chekedItems.has(role.name)}\r\n          onChange={e => checkboxHandler(e)}\r\n        />\r\n      </div>\r\n    )}\r\n\r\n    <span className=\"material-icons\" onClick={e => changeUserRoles(e)}>check</span>\r\n  </>\r\n}","import React, { useState } from \"react\"\r\nimport { Pagination, PaginationType } from \"../general/pagination\"\r\nimport { deleteUserThunk, getUsersThunk, showAlertUsers } from \"../../store/users/actions\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { RolesControl } from \"./rolesControl\"\r\nimport { IUser, IUserResponse } from \"../../store/users/types\"\r\nimport { DeleteIcon } from \"../general/deleteIcon/deleteIcon\"\r\n\r\nexport const UserList: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const pages: IUserResponse = useSelector((state: RootState) => state.user.usersData)\r\n  const users: IUser[] = pages.data\r\n\r\n  const pagProps: PaginationType = {\r\n    handler: getUsersThunk,\r\n    totalPages: pages.totalPages,\r\n    currentPage: pages.currentPage,\r\n    hasNext: pages.hasNext,\r\n    hasPrevious: pages.hasPrevious\r\n  }\r\n\r\n  const deleteUser = (userId: string) => {\r\n    let result = window.confirm(\"Підтвердіть видалення\")\r\n    if (result) {\r\n      dispatch(deleteUserThunk(userId))\r\n    } else {\r\n      dispatch(showAlertUsers(\"Видалення Відмінено!\"))\r\n    }\r\n  }\r\n\r\n\r\n  const rolePanel = (user: IUser) => {\r\n    return <>\r\n      <div className=\"dropdown\">\r\n        <li className=\"nav-item active-item\">\r\n          <div className=\"link\">\r\n            <span className=\"material-icons\">settings</span>\r\n          </div>\r\n        </li>\r\n\r\n        <div className=\"dropdown-content\">\r\n          <RolesControl {...user} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  return <>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Імя</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Роль</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {users.map((user) =>\r\n          <tr key={user.id}>\r\n            <td>{user.userName}</td>\r\n            <td>{user.email}</td>\r\n            <td>{rolePanel(user)}</td>\r\n            <td><DeleteIcon onClickHandler={() => deleteUser(user.id)}/></td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Pagination {...pagProps} />\r\n  </>\r\n}","import Axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IRole, RolesActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderRoles = (data: boolean) => {\r\n  return {\r\n    type: RolesActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRoles = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: RolesActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: RolesActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\n\r\nconst fetchRoles = (data: IRole[]) => {\r\n  return {\r\n    type: RolesActionsTypesEnum.fetchRoles,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const createRoleThunk = (roleName: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.post(api.createRole, roleName)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRoles(false))\r\n  }\r\n}\r\n\r\nexport const getRolesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.get(api.getRoles)\r\n      .then(res => {\r\n        dispatch(fetchRoles(res.data))\r\n        dispatch(showLoaderRoles(false))\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n        dispatch(showLoaderRoles(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteRoleThunk = (roleId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.post(api.deleteRole, roleId)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRoles(false))\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { Alert } from \"../general/alert/alert\"\r\nimport { UserList } from \"./userList\"\r\nimport { getUsersThunk } from \"../../store/users/actions\"\r\nimport { getRolesThunk } from \"../../store/roles/actions\"\r\n\r\nexport const Users: React.FC = () => {\r\n  const showLoader = useSelector((state: RootState) => state.user.showLoader)\r\n  const alert = useSelector((state: RootState) => state.user.alert)\r\n  const users = useSelector((state: RootState) => state.user.usersData.data)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersThunk({}))\r\n    dispatch(getRolesThunk())\r\n  }, [dispatch])\r\n  \r\n  return <>\r\n    <Alert text={alert.text} display={alert.showAlert}/>\r\n\r\n    {\r\n      showLoader ? <Spinner /> :\r\n          !users.length ? <h3>Немає зареєстрованих користувачів</h3> :\r\n            <UserList />\r\n    }\r\n  </>\r\n}","import React from \"react\"\r\nimport { Route } from \"react-router\"\r\n\r\nimport { Navbar } from \"./components/navigation/navbar\"\r\n\r\nimport { Home } from \"./pages/home\"\r\nimport { Gallery } from \"./pages/gallery\"\r\nimport { MakeOrder } from \"./pages/makeOrder\"\r\nimport { Auth } from \"./pages/auth\"\r\nimport { Settings } from \"./pages/settings\"\r\n\r\nimport { Orders } from \"./components/orders/orders\"\r\nimport { Users } from \"./components/users/users\"\r\n\r\n\r\nimport \"./custom.css\"\r\nimport \"./css/form.css\"\r\nimport \"./css/button.css\"\r\n\r\nexport const App: React.FC = () => {\r\n  return <>\r\n    <div className=\"container-fluid h-100\">\r\n      <Navbar />\r\n\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/MakeOrder\" component={MakeOrder} />\r\n      <Route exact path=\"/Gallery\" component={Gallery} />\r\n      <Route exact path=\"/Auth\" component={Auth} />\r\n      <Route exact path=\"/AdminPanel/Orders\" component={Orders} />\r\n      <Route exact path=\"/AdminPanel/Users\" component={Users} />\r\n      <Route exact path=\"/AdminPanel/Settings\" component={Settings} />\r\n    </div>\r\n  </>\r\n}\r\n\r\n\r\n\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IAlert {\r\n  showAlert: boolean,\r\n  text: string\r\n}\r\n\r\nexport interface IState {\r\n  showLoader: boolean,\r\n  alert: IAlert,\r\n}\r\n\r\nexport interface IAction {\r\n  type: string\r\n  payload?: any\r\n}\r\n\r\nexport const baseInitialState: IState = {\r\n  showLoader: false,\r\n  alert: {\r\n    showAlert: false,\r\n    text: \"\"\r\n  }\r\n}\r\n\r\nexport type PageListQueryType = {\r\n  pageNumber?: number,\r\n  pageSize?: number\r\n }","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IOrdersState, OrdersActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IOrdersState = {\r\n  ordersData: {\r\n    currentPage: 0,\r\n    elementsCount: 0,\r\n    pageSize: 0,\r\n    totalPages: 0,\r\n    hasNext: false,\r\n    hasPrevious: false,\r\n    data: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const ordersReducer = (state: IOrdersState = initialState, action: IAction): IOrdersState => {\r\n  switch (action.type) {\r\n    case OrdersActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case OrdersActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case OrdersActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case OrdersActionsTypesEnum.fetchOrders:\r\n      return {\r\n        ...state,\r\n        ordersData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IRegisterState, RegisterActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IRegisterState = {\r\n  ...baseInitialState\r\n}\r\n\r\nexport const registrationReducer = (state: IRegisterState = initialState, action: IAction): IRegisterState => {\r\n  switch (action.type) {\r\n    case RegisterActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case RegisterActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case RegisterActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IUserState, UserActionsTypesEnum} from \"./types\";\r\n\r\nconst initialState: IUserState = {\r\n  usersData: {\r\n    currentPage: 0,\r\n    elementsCount: 0,\r\n    pageSize: 0,\r\n    totalPages: 0,\r\n    hasNext: false,\r\n    hasPrevious: false,\r\n    data: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const userReducer = (state: IUserState = initialState, action: IAction): IUserState => {\r\n  switch (action.type) {\r\n    case UserActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case UserActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case UserActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case UserActionsTypesEnum.fetchUsers:\r\n      return {\r\n        ...state,\r\n        usersData: action.payload\r\n      }\r\n      \r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IRolesState, RolesActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IRolesState = {\r\n  rolesData: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const rolesReducer = (state: IRolesState = initialState, action: IAction): IRolesState => {\r\n  switch (action.type) {\r\n    case RolesActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case RolesActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case RolesActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case RolesActionsTypesEnum.fetchRoles:\r\n      return {\r\n        ...state,\r\n        rolesData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { CanvasActionsTypesEnum, ICanvasState } from \"./types\";\r\n\r\nconst initialState: ICanvasState = {\r\n  canvasData: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const canvasReducer = (state: ICanvasState = initialState, action: IAction): ICanvasState => {\r\n  switch (action.type) {\r\n    case CanvasActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case CanvasActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case CanvasActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case CanvasActionsTypesEnum.fetchCanvas:\r\n      return {\r\n        ...state,\r\n        canvasData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { EmailSettingsActionsTypesEnum, IEmailSettingsState } from \"./types\";\r\n\r\nconst initialState: IEmailSettingsState = {\r\n  emailSettingsData: {\r\n    serviceIsOn: false,\r\n    from: \" \",\r\n    smtpServer: \" \",\r\n    port: 0,\r\n    userName: \" \",\r\n    password: \" \"\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const emailSettingsReducer = (state: IEmailSettingsState = initialState, action: IAction): IEmailSettingsState => {\r\n  switch (action.type) {\r\n    case EmailSettingsActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case EmailSettingsActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case EmailSettingsActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case EmailSettingsActionsTypesEnum.fetchEmailSettings:\r\n      return {\r\n        ...state,\r\n        emailSettingsData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { GalleryActionsTypesEnum, IGalleryState } from \"./types\";\r\n\r\nconst initialState: IGalleryState = {\r\n  images: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const galleryReducer = (state: IGalleryState = initialState, action: IAction): IGalleryState => {\r\n  switch (action.type) {\r\n    case GalleryActionsTypesEnum.showLoader:\r\n      return { ...state, showLoader: action.payload }\r\n\r\n    case GalleryActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }\r\n\r\n    case GalleryActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case GalleryActionsTypesEnum.fetchImages:\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IInstaState, InstaActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IInstaState = {\r\n  instaData: {\r\n    instaStories: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const instagramReducer = (state: IInstaState = initialState, action: IAction): IInstaState => {\r\n  switch (action.type) {\r\n    case InstaActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case InstaActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case InstaActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case InstaActionsTypesEnum.fetchInstaStories:\r\n      return {\r\n        ...state,\r\n        instaData: {\r\n          instaStories: action.payload\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IInstaSettingsState, InstaSettingsActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IInstaSettingsState = {\r\n  instaSettingsData: {\r\n    username: \"\",\r\n    password: \"\",\r\n    msgReceiverList: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const instaSettingsReducer = (state: IInstaSettingsState = initialState, action: IAction): IInstaSettingsState => {\r\n  switch (action.type) {\r\n    case InstaSettingsActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case InstaSettingsActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case InstaSettingsActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case InstaSettingsActionsTypesEnum.fetchInstaSettings:\r\n      return {\r\n        ...state,\r\n        instaSettingsData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IAuthState, AuthActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IAuthState = {\r\n  ...baseInitialState,\r\n  isAuthenticated: false,\r\n  isAdmin: false,\r\n}\r\n\r\n\r\nexport const authReducer = (state: IAuthState = initialState, action: IAction): IAuthState => {\r\n  switch (action.type) {\r\n    case AuthActionsTypesEnum.showLoader:\r\n      return { ...state, showLoader: action.payload }\r\n\r\n    case AuthActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }\r\n\r\n    case AuthActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case AuthActionsTypesEnum.login:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true\r\n      }\r\n\r\n    case AuthActionsTypesEnum.logout:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        isAdmin: false\r\n      }\r\n\r\n    case AuthActionsTypesEnum.isAdmin:\r\n      return {\r\n        ...state,\r\n        isAdmin: action.payload\r\n      }\r\n\r\n    case AuthActionsTypesEnum.isAuthenticated:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from \"redux\"\r\nimport { ordersReducer } from \"./order/reducers\"\r\nimport { registrationReducer } from \"./registration/reducers\"\r\nimport { userReducer } from \"./users/reducers\"\r\nimport { rolesReducer } from \"./roles/reducers\"\r\nimport { canvasReducer } from \"./canvas/reducers\"\r\nimport { emailSettingsReducer } from \"./emailSettings/reducers\"\r\nimport { galleryReducer } from \"./gallery/reducers\"\r\nimport { instagramReducer } from \"./instagram/reducers\"\r\nimport { instaSettingsReducer } from \"./instaSettings/reducers\"\r\nimport { authReducer } from \"./auth/reducers\"\r\n\r\nexport const rootReducer = combineReducers({\r\n  reg: registrationReducer,\r\n  auth: authReducer,\r\n  order: ordersReducer,\r\n  user: userReducer,\r\n  roles: rolesReducer,\r\n  canvas: canvasReducer,\r\n  gallery: galleryReducer,\r\n  instagram: instagramReducer,\r\n  emailSettings: emailSettingsReducer,\r\n  instaSettings: instaSettingsReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { App } from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { rootReducer } from './store';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl!}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  rootElement);\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}