{"version":3,"sources":["store/api.ts","store/instagram/types.ts","components/navigation/adminNav.tsx","components/navigation/navbar.tsx","store/instagram/actions.ts","store/gallery/types.ts","components/general/modalWindow/modalWindow.tsx","components/home/reviews.tsx","components/home/video.tsx","components/home/text.tsx","pages/home.tsx","store/gallery/actions.ts","store/canvas/types.ts","components/gallery/images.tsx","pages/gallery.tsx","helpers/useInput.ts","store/canvas/actions.ts","store/order/types.ts","store/order/actions.ts","store/auth/types.ts","components/general/submitButton/submitButton.tsx","components/orders/orderValidations.ts","components/orders/makeOrderForm.tsx","pages/makeOrder.tsx","store/auth/actions.ts","store/registration/types.ts","components/signIn/authValidations.ts","components/signIn/loginForm.tsx","store/registration/actions.ts","store/emailSettings/types.ts","components/signIn/registrationForm.tsx","pages/auth.tsx","store/instaSettings/types.ts","store/emailSettings/actions.ts","components/general/spinner.tsx","components/settings/emailSettings.tsx","store/users/types.ts","store/instaSettings/actions.ts","components/settings/instaValidations.ts","components/settings/instaSettings.tsx","pages/settings.tsx","components/general/alert/alert.tsx","components/general/pagination.tsx","components/general/deleteIcon/deleteIcon.tsx","components/orders/ordersList.tsx","components/orders/orders.tsx","store/users/actions.ts","store/roles/types.ts","components/users/rolesControl.tsx","components/users/userList.tsx","store/roles/actions.ts","components/users/users.tsx","App.tsx","registerServiceWorker.js","store/base/types.ts","store/order/reducers.ts","store/registration/reducers.ts","store/users/reducers.ts","store/roles/reducers.ts","store/canvas/reducers.ts","store/emailSettings/reducers.ts","store/gallery/reducers.ts","store/instagram/reducers.ts","store/instaSettings/reducers.ts","store/auth/reducers.ts","store/index.ts","index.tsx"],"names":["api","InstaActionsTypesEnum","AdminNav","className","to","exact","Navbar","isAuthenticated","useSelector","state","auth","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","adminPanelLink","GalleryActionsTypesEnum","showLoaderInsta","data","showLoader","payload","getInstaStoriesThunk","storiesName","dispatch","Axios","get","getInstaStories","params","storyName","then","res","fetchInstaStories","catch","error","showAlert","setTimeout","hideAlert","console","log","ModalWindow","props","onClick","e","setIsOpen","html","Reviews","useDispatch","useState","isOpen","stories","instagram","instaData","instaStories","useEffect","map","story","src","imgURL","alt","videoURL","width","Video","controls","Text","Home","CanvasActionsTypesEnum","showLoaderGallery","showAlertGallery","getImagesThunk","galleryGetImages","fetchImages","err","Images","images","gallery","submitHandler","event","formData","FormData","target","preventDefault","post","galleryAddImage","headers","statusText","onSubmit","accept","name","item","image","imageId","delete","galleryDeleteImage","Gallery","useInput","initValue","validations","value","setValue","wasFocused","setFocused","setError","style","setStyle","validator","length","borderColor","borderWidth","borderStyle","set","onChange","onBlur","OrdersActionsTypesEnum","makeOrderEnum","showLoaderCanvas","showAlertCanvas","getCanvasThunk","getCanvas","fetchCanvas","AuthActionsTypesEnum","showLoaderOrders","showAlertOrders","getOrdersThunk","getOrders","pageNumber","pageSize","fetchOrders","SubmitButton","text","nameValidators","phoneValidators","addressValidators","canvasIdValidators","MakeOrderForm","canvas","canvasData","phone","address","canvasId","makeOrder","customerName","phoneNumber","disabled","selected","MakeOrder","RegisterActionsTypesEnum","showLoaderAuth","loginThunk","login","withCredentials","localStorage","setItem","jwt","fetchLoginData","user","showAlertAuth","emailValidators","passwordValidators","LoginForm","email","password","placeholder","EmailSettingsEnum","EmailSettingsActionsTypesEnum","showLoaderRegister","registerThunk","registration","showAlertRegister","RegistrationForm","confirmPassword","Auth","InstaSettingsEnum","InstaSettingsActionsTypesEnum","getEmailConfigThunk","getEmailConfig","fetchEmailSettings","Spinner","marginTop","height","role","EmailSettings","emailSettings","alert","emailSettingsData","serviceIsOn","from","smtpServer","port","userName","setEmailConfig","setEmailConfigThunk","checked","UserEnum","UserActionsTypesEnum","getInstaConfigThunk","getInstaConfig","fetchInstaSettings","usernameValidators","InstaSettings","instaSettings","instaSettingsData","username","msgReceivers","msgReceiverList","setInstaConfig","setInstaConfigThunk","Settings","Alert","display","Pagination","paginationHandler","handler","currentTarget","currentPage","Number","hasPrevious","content","i","totalPages","push","numberOfPage","hasNext","DeleteIcon","onClickHandler","OrdersList","pages","order","ordersData","orders","pagProps","deleteOrder","orderId","result","window","confirm","deleteOrderThunk","scope","Orders","RolesActionsTypesEnum","showLoaderUsers","showAlertUsers","getUsersThunk","config","getItem","getUsers","fetchUsers","RolesControl","allRoles","roles","rolesData","Set","chekedItems","setChekedItems","changeUserRoles","userId","Array","editUserRoles","has","add","UserList","usersData","users","deleteUser","deleteUserThunk","rolePanel","showLoaderRoles","showAlertRoles","getRolesThunk","getRoles","fetchRoles","Users","App","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","onupdatefound","installingWorker","installing","onstatechange","controller","baseInitialState","initialState","elementsCount","rootReducer","combineReducers","reg","action","logout","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","basename","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.326413c0.chunk.js","sourcesContent":["\r\nexport enum api {\r\n  getUsers = \"https://photo-on-canvas.azurewebsites.net/api/Account/GetUsers\",\r\n  deleteUser = \"https://photo-on-canvas.azurewebsites.net/api/Account/DeleteUser\",\r\n  registration = \"https://photo-on-canvas.azurewebsites.net/api/Account/Register\",\r\n  confirmEmail = \"https://photo-on-canvas.azurewebsites.net/api/Account/ConfirmEmail\",\r\n  login = \"https://photo-on-canvas.azurewebsites.net/api/Account/Login\",\r\n  logout = \"https://photo-on-canvas.azurewebsites.net/api/Account/Logout\",\r\n\r\n  galleryAddImage = \"https://photo-on-canvas.azurewebsites.net/api/Gallery/AddImage\",\r\n  galleryGetImages = \"https://photo-on-canvas.azurewebsites.net/api/Gallery/GetImages\",\r\n  galleryDeleteImage = \"https://photo-on-canvas.azurewebsites.net/api/Gallery/DeleteImage\",\r\n\r\n  getCanvas = \"https://photo-on-canvas.azurewebsites.net/api/Canvas/GetCanvas\",\r\n  createCanvas = \"https://photo-on-canvas.azurewebsites.net/api/Canvas/CreateCanvas\",\r\n  deleteCanvas = \"https://photo-on-canvas.azurewebsites.net/api/Canvas/DeleteCanvas\",\r\n\r\n  getOrders = \"https://photo-on-canvas.azurewebsites.net/api/Order/GetOrders\",\r\n  makeOrder = \"https://photo-on-canvas.azurewebsites.net/api/Order/MakeOrder\",\r\n  deleteOrder = \"https://photo-on-canvas.azurewebsites.net/api/Order/DeleteOrder\",\r\n  \r\n  createRole = \"https://photo-on-canvas.azurewebsites.net/api/Roles/CreateRole\",\r\n  deleteRole = \"https://photo-on-canvas.azurewebsites.net/api/Roles/DeleteRole\",\r\n  getRoles = \"https://photo-on-canvas.azurewebsites.net/api/Roles/GetRoles\",\r\n  getUserRoles = \"https://photo-on-canvas.azurewebsites.net/api/Roles/GetUserRoles\",\r\n  editUserRoles = \"https://photo-on-canvas.azurewebsites.net/api/Roles/EditUserRoles\",\r\n\r\n  getInstaStories = \"https://photo-on-canvas.azurewebsites.net/api/Instagram/GetStories\",\r\n\r\n  getEmailConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/GetEmailConfiguration\",\r\n  setEmailConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/SetEmailConfiguration\",\r\n\r\n  getInstaConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/GetInstagramConfiguration\",\r\n  setInstaConfig = \"https://photo-on-canvas.azurewebsites.net/api/Configuration/SetInstagramConfiguration\",\r\n}\r\n\r\n// https://photo-on-canvas.azurewebsites.net","import { IState } from \"../base/types\";\r\n\r\nexport enum InstaActionsTypesEnum {\r\n  showLoader = \"INSTAGRAM_SHOW_LOADER\",\r\n  showAlert = \"INSTAGRAM_SHOW_ALERT\",\r\n  hideAlert = \"INSTAGRAM_HIDE_ALERT\",\r\n  fetchInstaStories = \"FETCH_INSTAGRAM_STORIES\",\r\n}\r\n\r\nexport interface IInstaResponse {\r\n  instaStories: IInstaStory[]\r\n}\r\n\r\nexport interface IInstaStory {\r\n  imgURL: string,\r\n  videoURL: string\r\n}\r\n\r\nexport interface IInstaState extends IState{\r\n  instaData: IInstaResponse\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"./adminNav.css\"\r\n\r\nexport const AdminNav: React.FC = () => {\r\n  return <>\r\n    <ul className=\"admin-ul\">\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Orders\" exact>\r\n          <span className=\"material-icons\">view_list</span>\r\n          Список замовлень\r\n        </NavLink>\r\n      </li>\r\n\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Users/\" exact>\r\n          <span className=\"material-icons\">people_alt</span>\r\n          Управління користувачами\r\n        </NavLink>\r\n      </li>\r\n\r\n      <li className=\"admin-li\">\r\n        <NavLink className=\"nav-link\" to=\"/AdminPanel/Settings/\" exact>\r\n          <span className=\"material-icons\">settings</span>\r\n          Налаштування\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  </>\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RootState } from \"../../store\";\r\nimport { AdminNav } from \"./adminNav\"\r\n\r\nimport \"./navbar.css\"\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated)\r\n\r\n  const adminPanelLink = () => {\r\n    if (isAuthenticated) {\r\n      return <>\r\n        <div className=\"dropdown\">\r\n          <li className=\"nav-item active-item\">\r\n            <div className=\"nav-link link\">\r\n              <span className=\"material-icons\">admin_panel_settings</span>\r\n              Панель Адміністратора\r\n            </div>\r\n          </li>\r\n\r\n          <div className=\"dropdown-content\">\r\n            <AdminNav />\r\n          </div>\r\n        </div>\r\n      </>\r\n    }\r\n  }\r\n\r\n  const loginPanelLink = () => {\r\n    if (isAuthenticated) {\r\n      return <>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Auth\" exact>\r\n              <span className=\"material-icons\">logout</span>\r\n              Вийти\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    } else {\r\n      return <>\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Auth\" exact>\r\n              <span className=\"material-icons\">login</span>\r\n              Увійти\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <nav className=\"nav navbar-expand-lg\">\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-icon\">Menu</span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/\" exact>\r\n              <span className=\"material-icons\">home</span>\r\n              Головна\r\n            </NavLink>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/MakeOrder\" exact>\r\n              <span className=\"material-icons\">add_shopping_cart</span>\r\n              Замовити картину\r\n            </NavLink>\r\n          </li>\r\n\r\n          {/* <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/Gallery\" exact>\r\n              <span className=\"material-icons\">photo_library</span>\r\n              Галерея\r\n            </NavLink>\r\n          </li> */}\r\n\r\n          {adminPanelLink()}\r\n        </ul>\r\n\r\n        {loginPanelLink()}\r\n      </div>\r\n    </nav>\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IInstaStory, InstaActionsTypesEnum } from \"./types\"\r\n\r\nconst showLoaderInsta = (data: boolean) => {\r\n  return {\r\n    type: InstaActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertInsta = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: InstaActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: InstaActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchInstaStories = (data: IInstaStory[]) => {\r\n  return {\r\n    type: InstaActionsTypesEnum.fetchInstaStories,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getInstaStoriesThunk = (storiesName: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderInsta(true))\r\n\r\n    Axios.get(api.getInstaStories, { params: { storyName: storiesName } })\r\n      .then(res => {\r\n        dispatch(fetchInstaStories(res.data))\r\n        dispatch(showLoaderInsta(false))\r\n\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderInsta(false))\r\n        dispatch(showAlertInsta(\"Помилка сервера!\"))\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum GalleryActionsTypesEnum {\r\n  showLoader = \"GALLERY_SHOW_LOADER\",\r\n  showAlert = \"GALLERY_SHOW_ALERT\",\r\n  hideAlert = \"GALLERY_HIDE_ALERT\",\r\n  fetchImages = \"GALLERY_FETCH_IMAGES\",\r\n}\r\n\r\nexport interface IImages {\r\n  id: string,\r\n  imageName: string,\r\n  contentType: string,\r\n  image: string\r\n}\r\n\r\nexport interface IGalleryState extends IState{\r\n  images: IImages[]\r\n}\r\n","import React from \"react\"\r\n\r\nimport \"./modalWindow.css\"\r\n\r\nexport const ModalWindow = (props: {html: JSX.Element, setIsOpen: any}): JSX.Element => {\r\n  return <>\r\n      <div className=\"custom-modal\">\r\n        <div className=\"custom-modal-body\">\r\n          <span className=\"material-icons close-icon\" onClick={e => props.setIsOpen(false)}>close</span>\r\n          {props.html}\r\n        </div>\r\n      </div>\r\n  </>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { getInstaStoriesThunk } from \"../../store/instagram/actions\"\r\nimport { ModalWindow } from \"../general/modalWindow/modalWindow\"\r\n\r\nimport \"./reviews.css\"\r\n\r\nexport const Reviews: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const stories = useSelector((state: RootState) => state.instagram.instaData.instaStories)\r\n\r\n  useEffect(() => {\r\n    dispatch(getInstaStoriesThunk(\"відгуки\"))\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    {stories.map((story) =>\r\n      <>\r\n        <img className=\"review-img\" onClick={e => setIsOpen(true)} src={story.imgURL} alt=\"...\" />\r\n        {isOpen &&\r\n          <ModalWindow html={\r\n            story.videoURL !== null ?\r\n              <video src={story.videoURL} width=\"260\" /> :\r\n              <img src={story.imgURL} width=\"260\" alt=\"...\" />\r\n          } setIsOpen={setIsOpen} />\r\n        }\r\n      </>\r\n    )}\r\n  </>\r\n}","import React from \"react\"\r\n\r\nimport \"./video.css\"\r\n\r\nexport const Video: React.FC = () => {\r\n  var videoURL = \"https://instagram.flwo1-1.fna.fbcdn.net/v/t50.2886-16/109714132_300142651099067_3625260709784846051_n.mp4?efg=eyJ2ZW5jb2RlX3RhZyI6InZ0c192b2RfdXJsZ2VuLjcyMC5mZWVkLmRlZmF1bHQiLCJxZV9ncm91cHMiOiJbXCJpZ193ZWJfZGVsaXZlcnlfdnRzX290ZlwiXSJ9&_nc_ht=instagram.flwo1-1.fna.fbcdn.net&_nc_cat=111&_nc_ohc=m_DswIXCxGIAX-j1wrn&vs=18063665236242828_3547551887&_nc_vs=HBksFQAYJEdOUWFpZ2E3eHhsb19oQUJBT1BfNTNob2cwOHlia1lMQUFBRhUAAsgBABUAGCRHTTZ5NkFZMVVIdHdaQTBCQURDazVMRlhNb0FzYmtZTEFBQUYVAgLIAQAoABgAGwGIB3VzZV9vaWwBMBUAACaYjZWz2LOWQBUCKAJDMywXQDWqfvnbItEYEmRhc2hfYmFzZWxpbmVfMV92MREAdeoHAA%3D%3D&_nc_rid=965324303f&oe=5FC312D3&oh=865fb7cc1a41a5a77b0a61117d768ec2\"\r\n\r\n  return <>\r\n    <video className=\"video video-item\" src={videoURL} controls={true} />\r\n  </>\r\n}","import React from \"react\"\r\n\r\nimport \"./text.css\"\r\n\r\nexport const Text: React.FC = () => {\r\n  return <>\r\n    <div className=\"text\">\r\n      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Vitae incidunt iusto optio dolores obcaecati, earum provident harum, esse magni at, modi error natus labore reiciendis dolore deleniti tenetur dolorum pariatur!</p>\r\n    </div>\r\n  </>\r\n}","import React from \"react\"\r\nimport { Reviews } from \"../components/home/reviews\"\r\nimport { Video } from \"../components/home/video\"\r\nimport { Text } from \"../components/home/text\"\r\n\r\nimport \"./home.css\"\r\n\r\nexport const Home: React.FC = () => {\r\n  \r\n\r\n  return <>\r\n    <div className=\"row block text-block\">\r\n      <Text />\r\n    </div>\r\n\r\n    <div className=\"row block\">\r\n      <Video />\r\n    </div> \r\n\r\n    <div className=\"row block\">\r\n      <Reviews />\r\n    </div>\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { GalleryActionsTypesEnum, IImages } from \"./types\";\r\n\r\nconst showLoaderGallery = (data: boolean) => {\r\n  return {\r\n    type: GalleryActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertGallery = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: GalleryActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: GalleryActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchImages = (data: IImages) => {\r\n  return {\r\n    type: GalleryActionsTypesEnum.fetchImages,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getImagesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n\r\n    Axios.get(api.galleryGetImages)\r\n      .then(res => {\r\n        dispatch(fetchImages(res.data))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\nexport const addImageThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n    \r\n    let headers: AxiosRequestConfig = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    Axios.post(api.galleryAddImage, data, headers)\r\n      .then(res => {\r\n        dispatch(showAlertGallery(res.statusText))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\nexport const deleteImageThunk = (imageId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderGallery(true))\r\n\r\n    Axios.delete(api.galleryDeleteImage, { params: { imageId } })\r\n      .then(res => {\r\n        dispatch(showAlertGallery(res.statusText))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertGallery(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderGallery(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum CanvasActionsTypesEnum {\r\n  showLoader = \"CANVAS_SHOW_LOADER\",\r\n  showAlert = \"CANVAS_SHOW_ALERT\",\r\n  hideAlert = \"CANVAS_HIDE_ALERT\",\r\n  fetchCanvas = \"FETCH_CANVAS\",\r\n}\r\n\r\nexport interface ICanvas {\r\n  id: string,\r\n  name: string,\r\n  price: string,\r\n  size: string,\r\n}\r\n\r\nexport interface ICreateCanvas {\r\n  price: string,\r\n  size: string,\r\n}\r\n\r\nexport interface ICanvasState extends IState{\r\n  canvasData: ICanvas[]\r\n}","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getImagesThunk, addImageThunk, deleteImageThunk } from \"../../store/gallery/actions\"\r\nimport { RootState } from \"../../store/\"\r\n\r\nimport \"./images.css\"\r\n\r\nexport const Images = (): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n  const images = useSelector((state: RootState) => state.gallery.images)\r\n\r\n  useEffect(() => {\r\n    dispatch(getImagesThunk())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(addImageThunk(formData))\r\n  }\r\n\r\n  const addImageButton = () => {\r\n    if (true) {\r\n      return <>\r\n        <form onSubmit={submitHandler}>\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control\"\r\n            accept=\"image/*\"\r\n            name=\"Image\"\r\n          />\r\n\r\n          <button className=\"add-button\">\r\n            <span className=\"material-icons add-icon\">add</span>\r\n          </button>\r\n        </form>\r\n      </>\r\n    }\r\n  }\r\n\r\n  return <>\r\n    {addImageButton()}\r\n\r\n    {images.map((item) =>\r\n      <div key={item.id}>\r\n        <img className=\"list-img\" src={\"data:image/png;base64,\" + item.image} alt=\"...\" />\r\n        {true && \r\n          <button onClick={e => dispatch(deleteImageThunk(item.id))}>Delete</button>\r\n        }\r\n      </div>\r\n    )}\r\n  </>\r\n}","import React from \"react\";\r\nimport { Images } from \"../components/gallery/images\"\r\n\r\nexport const Gallery: React.FC = () => {\r\n  return <>\r\n    <Images />\r\n  </>\r\n}","import React, { useEffect, useState } from \"react\"\r\n\r\nexport type ValidType = {\r\n  (value: any): string\r\n}\r\n\r\nexport const useInput = (initValue: any, validations?: ValidType[] ) => {\r\n  const [value, setValue] = useState(initValue)\r\n  const [wasFocused, setFocused] = useState(false)\r\n  const [error, setError] = useState(\"\")\r\n  const [style, setStyle] = useState({})\r\n  \r\n  const set = (data: any) => {\r\n    setValue(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (wasFocused) {\r\n      validations?.map(validator => {\r\n        setError(validator(value))\r\n      })\r\n    }\r\n  }, [value, wasFocused])\r\n\r\n  useEffect(() => {\r\n    if (error.length !== 0) {\r\n      setStyle({\r\n        borderColor: \"red\",\r\n        borderWidth: \"2px\",\r\n        borderStyle: \"solid\"\r\n      })\r\n    } else if (error.length == 0 && wasFocused){\r\n      setStyle({\r\n        borderColor: \"#0dde0d\",\r\n        borderWidth: \"2px\",\r\n        borderStyle: \"solid\"\r\n      })\r\n    }\r\n  }, [error, value])\r\n\r\n  const onChange = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setValue(event.target.value)\r\n    setFocused(true) \r\n  }\r\n\r\n  const onBlur = (event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFocused(true) \r\n  }\r\n\r\n  return {\r\n    value,\r\n    set,\r\n    error,\r\n    onChange,\r\n    onBlur,\r\n    style\r\n  }\r\n}","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { CanvasActionsTypesEnum, ICanvas, ICreateCanvas } from \"./types\"\r\n\r\nconst showLoaderCanvas = (data: boolean) => {\r\n  return {\r\n    type: CanvasActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertCanvas = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: CanvasActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: CanvasActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchCanvas = (data: ICanvas[]) => {\r\n  return {\r\n    type: CanvasActionsTypesEnum.fetchCanvas,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getCanvasThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.get(api.getCanvas)\r\n      .then(res => {\r\n        dispatch(fetchCanvas(res.data))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\nexport const makeCanvasThunk = (data: ICreateCanvas) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.post(api.createCanvas, data)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\nexport const deleteCanvasThunk = (canvasId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderCanvas(true))\r\n\r\n    Axios.post(api.deleteCanvas, canvasId)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertCanvas(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderCanvas(false))\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\nimport { ICanvas } from \"../canvas/types\";\r\n\r\nexport enum OrdersActionsTypesEnum {\r\n  showLoader = \"ORDER_SHOW_LOADER\",\r\n  showAlert = \"ORDER_SHOW_ALERT\",\r\n  hideAlert = \"ORDER_HIDE_ALERT\",\r\n  fetchOrders = \"FETCH_ORDERS\",\r\n}\r\n\r\nexport interface IOrderResponse {\r\n  elementsCount: number,\r\n  pageSize: number,\r\n  currentPage: number,\r\n  totalPages: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean,\r\n  data: IOrder[]\r\n}\r\n\r\nexport interface IOrder {\r\n  id: string,\r\n  customerName: string,\r\n  phoneNumber: string,\r\n  address: string,\r\n  canvas: ICanvas,\r\n  image: string,\r\n}\r\n\r\nexport interface IMakeOrder {\r\n  customerName: string,\r\n  phoneNumber: string,\r\n  address: string,\r\n  canvasId: string,\r\n  image: File,\r\n}\r\n\r\nexport enum makeOrderEnum {\r\n  customerName = \"customerName\",\r\n  phoneNumber = \"phoneNumber\",\r\n  address = \"address\",\r\n  canvasId = \"canvasId\",\r\n  image = \"image\",\r\n} \r\n\r\nexport interface IOrdersState extends IState{\r\n  ordersData: IOrderResponse\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { PageListQueryType } from \"../base/types\";\r\nimport { IOrderResponse, OrdersActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderOrders = (data: boolean) => {\r\n  return {\r\n    type: OrdersActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const showAlertOrders = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: OrdersActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: OrdersActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchOrders = (data: IOrderResponse) => {\r\n  return {\r\n    type: OrdersActionsTypesEnum.fetchOrders,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getOrdersThunk = (data: PageListQueryType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    Axios.get(api.getOrders, { params: { pageNumber: data.pageNumber, pageSize: data.pageSize } })\r\n      .then(res => {\r\n        dispatch(fetchOrders(res.data))\r\n        dispatch(showLoaderOrders(false))\r\n\r\n      })\r\n      .catch(error => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n        console.log(error)\r\n      })\r\n  }\r\n}\r\n\r\nexport const makeOrderThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    let headers: AxiosRequestConfig = { headers: { 'Content-Type': 'multipart/form-data' } }\r\n    Axios.post(api.makeOrder, data, headers)\r\n      .then(res => {\r\n        dispatch(showLoaderOrders(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n        console.log(\"make order fail\", err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteOrderThunk = (orderId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderOrders(true))\r\n\r\n    Axios.delete(api.deleteOrder, { params: { orderId: orderId } })\r\n      .then(res => {\r\n        dispatch(showLoaderOrders(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderOrders(false))\r\n        dispatch(showAlertOrders(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum AuthActionsTypesEnum {\r\n  showLoader = \"AUTH_SHOW_LOADER\",\r\n  showAlert = \"AUTH_SHOW_ALERT\",\r\n  hideAlert = \"AUTH_HIDE_ALERT\",\r\n  fetchLoginData = \"FETCH_LOGIN_DATA\",\r\n  logout = \"LOGOUT\"\r\n}\r\n\r\nexport interface ILogin {\r\n  email: string,\r\n  password: string\r\n}\r\n\r\nexport interface ILoginResponse {\r\n  signInResult: {\r\n    succeeded: boolean,\r\n    isLockedOut: boolean,\r\n    isNotAllowed: boolean,\r\n    requiresTwoFactor: boolean\r\n  },\r\n  jwt: string,\r\n  user: {\r\n    id: string,\r\n    email: string,\r\n    userName: string,\r\n    roles: [\r\n      string\r\n    ]\r\n  }\r\n}\r\n\r\nexport interface IAuthState extends IState{\r\n  isAuthenticated: boolean,\r\n  user: {\r\n    id: string,\r\n    email: string,\r\n    userName: string,\r\n    roles: [\r\n      string\r\n    ]\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport \"./submitButton.css\"\r\n\r\nexport const SubmitButton = (props: {text: string}): JSX.Element => {\r\n\r\n  return <>\r\n    <button type=\"submit\" className=\"btn\">{props.text}</button>\r\n  </>\r\n}","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const nameValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const phoneValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const addressValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const canvasIdValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { RootState } from \"../../store\"\r\nimport { getCanvasThunk } from \"../../store/canvas/actions\"\r\nimport { makeOrderThunk } from \"../../store/order/actions\"\r\nimport { makeOrderEnum } from \"../../store/order/types\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\nimport { nameValidators, phoneValidators, addressValidators, canvasIdValidators } from \"./orderValidations\"\r\n\r\nexport const MakeOrderForm: React.FC = () => {\r\n  const canvas = useSelector((state: RootState) => state.canvas.canvasData)\r\n  const dispatch = useDispatch()\r\n\r\n  const name = useInput(\"\", nameValidators)\r\n  const phone = useInput(\"\", phoneValidators)\r\n  const address = useInput(\"\", addressValidators)\r\n  const canvasId = useInput(\"\", canvasIdValidators)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCanvasThunk())\r\n  }, [dispatch])\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n    formData.set(\"canvasId\", canvasId.value)\r\n\r\n    event.preventDefault()\r\n    dispatch(makeOrderThunk(formData))\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-group\" style={name.style}>\r\n        <label>Прізвище Імя</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.customerName}\r\n          value={name.value}\r\n          onChange={e => name.onChange(e)}\r\n          onBlur={e => name.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {name.error.length !== 0 &&\r\n        <span className=\"error-span\">{name.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group\" style={phone.style}>\r\n        <label>Номер телефону</label>\r\n        <input\r\n          type=\"tel\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.phoneNumber}\r\n          value={phone.value}\r\n          onChange={e => phone.onChange(e)}\r\n          onBlur={e => phone.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {phone.error.length !== 0 &&\r\n        <span className=\"error-span\">{phone.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group\" style={address.style}>\r\n        <label>Адрес доставки</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.address}\r\n          value={address.value}\r\n          onChange={e => address.onChange(e)}\r\n          onBlur={e => address.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {address.error.length !== 0 &&\r\n        <span className=\"error-span\">{address.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group\">\r\n        <label>Завантажити зображення</label>\r\n        <input\r\n          type=\"file\"\r\n          className=\"form-control\"\r\n          name={makeOrderEnum.image}\r\n          accept=\"image/*\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-group\" style={canvasId.style}>\r\n        <label>Тип полотна</label>\r\n        <select className=\"form-control\"\r\n          name={makeOrderEnum.canvasId}\r\n          onChange={e => canvasId.onChange(e)}\r\n          onBlur={e => canvasId.onBlur(e)}\r\n        >\r\n          <option disabled selected>Виберіть тип полотна</option>\r\n          {\r\n            canvas.map((item) =>\r\n              <option key={item.id} value={item.id}>{item.name}</option>\r\n            )\r\n          }\r\n        </select>\r\n      </div>\r\n\r\n      {canvasId.error.length !== 0 &&\r\n        <span className=\"error-span\">{canvasId.error}</span>\r\n      }\r\n\r\n      <SubmitButton text={\"Замовити\"}/>\r\n    </form>\r\n  </>\r\n}","import React from \"react\";\r\n\r\nimport { MakeOrderForm } from \"../components/orders/makeOrderForm\";\r\n\r\nexport const MakeOrder: React.FC = () => {\r\n  return <>\r\n    <MakeOrderForm />\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { ILogin, AuthActionsTypesEnum, ILoginResponse} from \"./types\";\r\n\r\nconst showLoaderAuth = (data: boolean) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertAuth = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: AuthActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: AuthActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchLoginData = (data: ILoginResponse) => {\r\n  return {\r\n    type: AuthActionsTypesEnum.fetchLoginData,\r\n    payload: data.user\r\n  }\r\n}\r\n\r\nconst logout = () => {\r\n  return {\r\n    type: AuthActionsTypesEnum.logout\r\n  }\r\n}\r\n\r\nexport const loginThunk = (data: ILogin) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderAuth(true))\r\n    \r\n    let headers: AxiosRequestConfig = { headers: { \r\n      withCredentials: true, \r\n      \"Content-Type\": \"application/json-patch+json\",\r\n      \"accept\": \"text/plain\" \r\n    }}\r\n\r\n    Axios.post(api.login, data, headers)\r\n      .then(res => {\r\n        let data: ILoginResponse = res.data\r\n        localStorage.setItem(\"token\", data.jwt)\r\n        dispatch(fetchLoginData(data))\r\n        dispatch(showLoaderAuth(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertAuth(\"Помилка сервера!\"))\r\n        dispatch(showLoaderAuth(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const logoutThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderAuth(true))\r\n    dispatch(logout)\r\n    localStorage.removeItem(\"token\")\r\n    dispatch(showLoaderAuth(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum RegisterActionsTypesEnum {\r\n  showLoader = \"REGISTER_SHOW_LOADER\",\r\n  showAlert = \"REGISTER_SHOW_ALERT\",\r\n  hideAlert = \"REGISTER_HIDE_ALERT\",\r\n  registrate = \"REGISTRATE\",\r\n}\r\n\r\nexport interface IRegister {\r\n  email: string,\r\n  password: string,\r\n  confirmPassword: string\r\n}\r\n\r\nexport interface IRegisterState extends IState {\r\n\r\n}\r\n","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const emailValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const passwordValidators: ValidType[] = [\r\n  (value: any) => value.length < 6 ? \"Потрібно ввести не менше шести символів\" : \"\"\r\n  \r\n]","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { loginThunk } from \"../../store/auth/actions\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\n\r\nimport \"./index.css\"\r\nimport { emailValidators, passwordValidators } from \"./authValidations\"\r\nimport { Redirect } from \"react-router\"\r\nimport { RootState } from \"../../store\"\r\n\r\nexport const LoginForm: React.FC = () => {\r\n  const isAuthenticated = useSelector((state: RootState) => state.auth.isAuthenticated)\r\n  const dispatch = useDispatch()\r\n  const email = useInput(\"\", emailValidators)\r\n  const password = useInput(\"\", passwordValidators)\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    dispatch(loginThunk({ email: email.value, password: password.value }))\r\n  }\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <label className=\"auth-label\">LOG IN</label>\r\n\r\n      <div className=\"form-group form-input-group\" style={email.style}>\r\n        <span className=\"material-icons auth-icon\">alternate_email</span>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть свій Email\"\r\n          value={email.value}\r\n          onChange={e => email.onChange(e)}\r\n          onBlur={e => email.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {email.error.length !== 0 &&\r\n        <span className=\"error-span\">{email.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={password.style}>\r\n        <span className=\"material-icons auth-icon\">enhanced_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть пароль\"\r\n          value={password.value}\r\n          onChange={e => password.onChange(e)}\r\n          onBlur={e => password.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{password.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-check\">\r\n        <input type=\"checkbox\" className=\"form-check-input\" id=\"exampleCheck1\" />\r\n        <label className=\"form-check-label\">Запамятати</label>\r\n      </div>\r\n\r\n      <>\r\n        <SubmitButton text=\"Увійти\" />\r\n      </>\r\n\r\n    </form>\r\n  </>\r\n}","import Axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IRegister, RegisterActionsTypesEnum} from \"./types\";\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: RegisterActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: RegisterActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: RegisterActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nexport const registerThunk = (data: IRegister) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.registration, data)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRegister(false))\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum EmailSettingsEnum {\r\n  serviceIsOn = \"serviceIsOn\",\r\n  from = \"from\",\r\n  smtpServer = \"smtpServer\",\r\n  port = \"port\",\r\n  userName = \"userName\",\r\n  password = \"password\"\r\n}\r\n\r\nexport enum EmailSettingsActionsTypesEnum {\r\n  showLoader = \"EMAIL_SETTINGS_SHOW_LOADER\",\r\n  showAlert = \"EMAIL_SETTINGS_SHOW_ALERT\",\r\n  hideAlert = \"EMAIL_SETTINGS_HIDE_ALERT\",\r\n  fetchEmailSettings = \"FETCH_EMAIL_SETTINGS\"\r\n}\r\n\r\nexport interface IEmailSettings {\r\n  serviceIsOn: boolean,\r\n  from: string,\r\n  smtpServer: string,\r\n  port: number,\r\n  userName: string,\r\n  password: string\r\n}\r\n\r\nexport interface IEmailSettingsState extends IState{\r\n  emailSettingsData: IEmailSettings\r\n}\r\n\r\nexport const emailSettingsTypeName: string = \"EmailSettings\"","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useInput } from \"../../helpers/useInput\";\r\nimport { registerThunk } from \"../../store/registration/actions\";\r\nimport { IRegister } from \"../../store/registration/types\";\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\";\r\nimport { emailValidators, passwordValidators } from \"./authValidations\";\r\n\r\nexport const RegistrationForm: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const email = useInput(\"\", emailValidators)\r\n  const password = useInput(\"\", passwordValidators)\r\n  const confirmPassword = useInput(\"\", passwordValidators)\r\n\r\n  const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    event.preventDefault()\r\n    let data: IRegister = {\r\n      email: email.value,\r\n      password: password.value,\r\n      confirmPassword: confirmPassword.value\r\n    }\r\n    dispatch(registerThunk(data))\r\n  }\r\n\r\n  return <>\r\n    <form onSubmit={submitHandler}>\r\n      <label className=\"auth-label\">SIGN UP</label>\r\n\r\n      <div className=\"form-group form-input-group\" style={email.style}>\r\n        <span className=\"material-icons auth-icon\">alternate_email</span>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть свій Email\"\r\n          value={email.value}\r\n          onChange={e => email.onChange(e)}\r\n          onBlur={e => email.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {email.error.length !== 0 &&\r\n        <span className=\"error-span\">{email.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={password.style}>\r\n        <span className=\"material-icons auth-icon\">enhanced_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Введіть пароль\"\r\n          value={password.value}\r\n          onChange={e => password.onChange(e)}\r\n          onBlur={e => password.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{password.error}</span>\r\n      }\r\n\r\n      <div className=\"form-group form-input-group\" style={confirmPassword.style}>\r\n        <span className=\"material-icons auth-icon\">no_encryption</span>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control auth-input\"\r\n          placeholder=\"Підтвердіть пароль\"\r\n          value={confirmPassword.value}\r\n          onChange={e => confirmPassword.onChange(e)}\r\n          onBlur={e => confirmPassword.onBlur(e)}\r\n        />\r\n      </div>\r\n\r\n      {password.error.length !== 0 &&\r\n        <span className=\"error-span\">{confirmPassword.error}</span>\r\n      }\r\n\r\n      <SubmitButton text=\"Зареєструватись\"/>\r\n    </form>\r\n  </>\r\n}","import React from \"react\";\r\n\r\nimport { LoginForm } from \"../components/signIn/loginForm\";\r\nimport { RegistrationForm } from \"../components/signIn/registrationForm\";\r\n\r\nexport const Auth: React.FC = () => {\r\n  return <>\r\n    <div className=\"row\">\r\n      <div className=\"col\"><LoginForm /></div>\r\n\r\n      <div className=\"col\"><RegistrationForm /></div>\r\n    </div>\r\n  </>\r\n}","import { IState } from \"../base/types\";\r\n\r\nexport enum InstaSettingsEnum {\r\n  username = \"username\",\r\n  password = \"password\",\r\n  msgReceiverList = \"msgReceiverList\",\r\n}\r\n\r\nexport enum InstaSettingsActionsTypesEnum {\r\n  showLoader = \"INSTAGRAM_SETTINGS_SHOW_LOADER\",\r\n  showAlert = \"INSTAGRAM_SETTINGS_SHOW_ALERT\",\r\n  hideAlert = \"INSTAGRAM_SETTINGS_HIDE_ALERT\",\r\n  fetchInstaSettings = \"FETCH_INSTAGRAM_SETTINGS\"\r\n}\r\n\r\nexport interface IInstaSettings {\r\n  username: string,\r\n  password: string,\r\n  msgReceiverList: string[],\r\n}\r\n\r\nexport interface IInstaSettingsState extends IState{\r\n  instaSettingsData: IInstaSettings\r\n}\r\n\r\nexport const instaSettingsTypeName: string = \"InstagramSettings\"","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { EmailSettingsActionsTypesEnum, IEmailSettings } from \"./types\"\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: EmailSettingsActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: EmailSettingsActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: EmailSettingsActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchEmailSettings = (data: IEmailSettings) => {\r\n  return {\r\n    type: EmailSettingsActionsTypesEnum.fetchEmailSettings,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getEmailConfigThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.get(api.getEmailConfig)\r\n      .then(res => {\r\n        dispatch(fetchEmailSettings(res.data))\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\nexport const setEmailConfigThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.setEmailConfig, data)\r\n      .then(res => {\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import React from \"react\"\r\n\r\nexport const Spinner: React.FC = () => {\r\n\r\n  return <>\r\n    <div \r\n      className=\"d-flex justify-content-center\"\r\n      style={{marginTop: \"10%\"}}\r\n    >\r\n      <div \r\n        className=\"spinner-border text-primary\" \r\n        style={{width: \"3rem\", height: \"3rem\"}} \r\n        role=\"status\"\r\n      >\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { RootState } from \"../../store\"\r\nimport { getEmailConfigThunk, setEmailConfigThunk } from \"../../store/emailSettings/actions\"\r\nimport { EmailSettingsEnum, IEmailSettings, IEmailSettingsState } from \"../../store/emailSettings/types\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\n\r\nexport const EmailSettings: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const alert = useSelector((state: RootState) => state.emailSettings.alert)\r\n  const showLoader = useSelector((state: RootState) => state.emailSettings.showLoader)\r\n  const data: IEmailSettings = useSelector((state: RootState) => state.emailSettings.emailSettingsData)\r\n\r\n  const serviceIsOn = useInput(data.serviceIsOn)\r\n  const from = useInput(data.from)\r\n  const smtpServer = useInput(data.smtpServer)\r\n  const port = useInput(data.port)\r\n  const userName = useInput(data.userName)\r\n  const password = useInput(data.password)\r\n  \r\n  const changeEmailSettings = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(setEmailConfigThunk(formData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getEmailConfigThunk())\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    {\r\n      showLoader\r\n        ?\r\n        <Spinner />\r\n        :\r\n        <form className=\"\" onSubmit={changeEmailSettings}>\r\n          <h4 className=\"setting-head\">Email Settings:</h4>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {serviceIsOn.error.length !== 0 &&\r\n              <span className=\"error-span\">{serviceIsOn.error}</span>\r\n            }\r\n            <label>Увімкнути email підтвердження реєстрації</label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name={EmailSettingsEnum.serviceIsOn}\r\n              className=\"form-control m-3\"\r\n              checked={serviceIsOn.value}\r\n              onChange={e => serviceIsOn.onChange(e)}\r\n              onBlur={e => serviceIsOn.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {from.error.length !== 0 &&\r\n              <span className=\"error-span\">{from.error}</span>\r\n            }\r\n            <label>Від кого:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.from}\r\n              className=\"form-control\"\r\n              placeholder=\"Від кого\"\r\n              value={from.value}\r\n              onChange={e => from.onChange(e)}\r\n              onBlur={e => from.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {smtpServer.error.length !== 0 &&\r\n              <span className=\"error-span\">{smtpServer.error}</span>\r\n            }\r\n            <label>Smtp server:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.smtpServer}\r\n              className=\"form-control\"\r\n              placeholder=\"SMTP Server\"\r\n              value={smtpServer.value}\r\n              onChange={e => smtpServer.onChange(e)}\r\n              onBlur={e => smtpServer.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {port.error.length !== 0 &&\r\n              <span className=\"error-span\">{port.error}</span>\r\n            }\r\n            <label>Порт:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.port}\r\n              className=\"form-control\"\r\n              placeholder=\"Порт\"\r\n              value={port.value}\r\n              onChange={e => port.onChange(e)}\r\n              onBlur={e => port.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {userName.error.length !== 0 &&\r\n              <span className=\"error-span\">{userName.error}</span>\r\n            }\r\n            <label>Email адрес:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.userName}\r\n              className=\"form-control\"\r\n              placeholder=\"Email\"\r\n              value={userName.value}\r\n              onChange={e => userName.onChange(e)}\r\n              onBlur={e => userName.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group setting-group\">\r\n            {password.error.length !== 0 &&\r\n              <span className=\"error-span\">{password.error}</span>\r\n            }\r\n            <label>Пароль:</label>\r\n            <input\r\n              type=\"text\"\r\n              name={EmailSettingsEnum.password}\r\n              className=\"form-control\"\r\n              placeholder=\"Пароль\"\r\n              value={password.value}\r\n              onChange={e => password.onChange(e)}\r\n              onBlur={e => password.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <SubmitButton text=\"Зберегти\" />\r\n        </form>\r\n    }\r\n  </>\r\n}","import { IState } from \"../base/types\";\r\n\r\nexport enum UserEnum {\r\n  id = \"id\",\r\n  name = \"name\",\r\n  email = \"email\",\r\n  role = \"role\"\r\n}\r\nexport enum UserActionsTypesEnum {\r\n  showLoader = \"USER_SHOW_LOADER\",\r\n  showAlert = \"USER_SHOW_ALERT\",\r\n  hideAlert = \"USER_HIDE_ALERT\",\r\n  fetchUsers = \"FETCH_USERS\",\r\n}\r\n\r\nexport interface IUser {\r\n  id: string,\r\n  userName: string,\r\n  email: string,\r\n  roles: string[],\r\n}\r\n\r\nexport interface IUserResponse {\r\n  elementsCount: number,\r\n  pageSize: number,\r\n  currentPage: number,\r\n  totalPages: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean,\r\n  data: IUser[]\r\n}\r\n\r\nexport interface IUserState extends IState {\r\n  usersData: IUserResponse\r\n}","import Axios from \"axios\"\r\nimport { Dispatch } from \"redux\"\r\nimport { api } from \"../api\"\r\nimport { IInstaSettings, InstaSettingsActionsTypesEnum } from \"./types\"\r\n\r\nconst showLoaderRegister = (data: boolean) => {\r\n  return {\r\n    type: InstaSettingsActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRegister = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: InstaSettingsActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: InstaSettingsActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\nconst fetchInstaSettings = (data: IInstaSettings) => {\r\n  return {\r\n    type: InstaSettingsActionsTypesEnum.fetchInstaSettings,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getInstaConfigThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.get(api.getInstaConfig)\r\n      .then(res => {\r\n        dispatch(fetchInstaSettings(res.data))\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\nexport const setInstaConfigThunk = (data: FormData) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRegister(true))\r\n\r\n    Axios.post(api.setInstaConfig, data)\r\n      .then(res => {\r\n        dispatch(showLoaderRegister(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderRegister(false))\r\n        dispatch(showAlertRegister(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import { ValidType } from \"../../helpers/useInput\"\r\n\r\nexport const usernameValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const passwordValidators: ValidType[] = [\r\n  (value: any) => !value.length ? \"Поле є обовязковим\" : \"\"\r\n  \r\n]\r\n\r\nexport const receiversValidators: ValidType[] = [\r\n  \r\n  \r\n]","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { getInstaConfigThunk, setInstaConfigThunk } from \"../../store/instaSettings/actions\"\r\nimport { IInstaSettings, InstaSettingsEnum } from \"../../store/instaSettings/types\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { useInput } from \"../../helpers/useInput\"\r\nimport { passwordValidators, receiversValidators, usernameValidators } from \"./instaValidations\"\r\nimport { SubmitButton } from \"../general/submitButton/submitButton\"\r\n\r\nimport \"./index.css\"\r\n\r\nexport const InstaSettings: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const alert = useSelector((state: RootState) => state.instaSettings.alert)\r\n  const showLoader = useSelector((state: RootState) => state.instaSettings.showLoader)\r\n  const data: IInstaSettings = useSelector((state: RootState) => state.instaSettings.instaSettingsData)\r\n\r\n  const username = useInput(data.username, usernameValidators)\r\n  const password = useInput(data.password, passwordValidators)\r\n  const msgReceivers = useInput(data.msgReceiverList)\r\n\r\n  const changeSettings = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n    let formData = new FormData(event.target)\r\n\r\n    event.preventDefault()\r\n    dispatch(setInstaConfigThunk(formData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getInstaConfigThunk())\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    username.set(data.username)\r\n    password.set(data.password)\r\n    msgReceivers.set(data.msgReceiverList)\r\n  }, [data])\r\n\r\n  return <>\r\n    {\r\n      showLoader\r\n        ?\r\n        <Spinner />\r\n        :\r\n        <form className=\"\" onSubmit={changeSettings}>\r\n          <h4 className=\"setting-head\">Instagram Settings:</h4>\r\n\r\n          <div className=\"form-group setting-group\" style={username.style}>\r\n            {username.error.length !== 0 &&\r\n              <span className=\"error-span\">{username.error}</span>\r\n            }\r\n            <label>Інстаграм логін</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.username}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм логін \"\r\n              value={username.value}\r\n              onChange={e => username.onChange(e)}\r\n              onBlur={e => username.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className=\"form-group setting-group\" style={password.style}>\r\n            {password.error.length !== 0 &&\r\n              <span className=\"error-span\">{password.error}</span>\r\n            }\r\n            <label>Інстаграм пароль</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.password}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм пароль\"\r\n              value={password.value}\r\n              onChange={e => password.onChange(e)}\r\n              onBlur={e => password.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className=\"form-group setting-group\" style={msgReceivers.style}>\r\n            {msgReceivers.error.length !== 0 &&\r\n              <span className=\"error-span\">{msgReceivers.error}</span>\r\n            }\r\n            <label>Список отримувачів повідомлень про покупку</label>\r\n            <input\r\n              type=\"text\"\r\n              name={InstaSettingsEnum.msgReceiverList}\r\n              className=\"form-control\"\r\n              placeholder=\"Введіть інстаграм імя отримувачів повідомлень\"\r\n              value={msgReceivers.value}\r\n              onChange={e => msgReceivers.onChange(e)}\r\n              onBlur={e => msgReceivers.onBlur(e)}\r\n            />\r\n          </div>\r\n\r\n          <SubmitButton text=\"Зберегти\" />\r\n\r\n        </form>\r\n    }\r\n  </>\r\n}","import React from \"react\";\r\nimport { EmailSettings } from \"../components/settings/emailSettings\"\r\nimport { InstaSettings } from \"../components/settings/instaSettings\";\r\n\r\nexport const Settings: React.FC = () => {\r\n  return <>\r\n    <div className=\"row\">\r\n      <div className=\"col-auto\">\r\n        <EmailSettings />\r\n      </div>\r\n\r\n      <div className=\"col-auto\">\r\n        <InstaSettings />\r\n      </div>\r\n    </div>\r\n  </>\r\n}","import React, { useState } from \"react\"\r\n\r\nimport \"./alert.css\"\r\n\r\nexport const Alert = (props: { text: string, display: boolean }): JSX.Element => {\r\n\r\n  return <>\r\n    {props.display &&\r\n      <div\r\n        className=\"alert red-alert\"\r\n        role=\"alert\"\r\n      >\r\n        <h4>{props.text}</h4>\r\n      </div>\r\n    }\r\n  </>\r\n}","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { PageListQueryType } from \"../../store/base/types\"\r\n\r\nexport type PaginationType = {\r\n  handler: (data: PageListQueryType) => void,\r\n  totalPages: number,\r\n  currentPage: number,\r\n  hasNext: boolean,\r\n  hasPrevious: boolean\r\n}\r\n\r\nexport const Pagination = (props: PaginationType): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n\r\n  const paginationHandler = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\r\n    handler: (data: PageListQueryType) => void) => {\r\n\r\n    switch (event.currentTarget.value) {\r\n      case \"Previous\":\r\n        dispatch(handler({ pageNumber: props.currentPage - 1 }))\r\n      break;\r\n\r\n      case \"Next\":\r\n        dispatch(handler({ pageNumber: props.currentPage + 1 }))\r\n      break;\r\n\r\n      default:\r\n        dispatch(handler({ pageNumber: Number(event.currentTarget.value)}))\r\n      break;\r\n    }\r\n  }\r\n\r\n  function numberOfPage(props: PaginationType) {\r\n    var content: JSX.Element[] = [];\r\n\r\n    for (let i = 1; i <= props.totalPages; i++) {\r\n      content.push(\r\n        <li key={i} className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            value={i}\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            disabled={props.currentPage === i}\r\n          >{i}</button>\r\n        </li>\r\n      )\r\n    }\r\n    return content;\r\n  }\r\n\r\n  return <>\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            value=\"Previous\"\r\n            disabled={!props.hasPrevious}\r\n          >Previous</button>\r\n        </li>\r\n\r\n        {numberOfPage(props)}\r\n\r\n        <li className=\"page-item\">\r\n          <button\r\n            className=\"btn btn-dark\"\r\n            onClick={e => paginationHandler(e, props.handler)}\r\n            value=\"Next\"\r\n            disabled={!props.hasNext}\r\n          >Next</button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  </>\r\n}","import React from \"react\"\r\nimport \"./deleteIcon.css\"\r\n\r\nexport const DeleteIcon = (props: { onClickHandler: any }): JSX.Element => {\r\n\r\n  return <>\r\n    <div className=\"link\">\r\n      <span className=\"material-icons delete-icon\" onClick={props.onClickHandler}>delete_forever</span>\r\n    </div>\r\n  </>\r\n}\r\n\r\n\r\n","import React from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Pagination, PaginationType } from \"../general/pagination\"\r\nimport { RootState } from \"../../store\"\r\nimport { deleteOrderThunk, getOrdersThunk, showAlertOrders } from \"../../store/order/actions\"\r\nimport { IOrder, IOrderResponse } from \"../../store/order/types\"\r\nimport { DeleteIcon } from \"../general/deleteIcon/deleteIcon\"\r\n\r\nexport const OrdersList: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const pages: IOrderResponse = useSelector((state: RootState) => state.order.ordersData)\r\n  const orders: IOrder[] = pages.data\r\n\r\n  const pagProps: PaginationType = {\r\n    handler: getOrdersThunk,\r\n    totalPages: pages.totalPages,\r\n    currentPage: pages.currentPage,\r\n    hasNext: pages.hasNext,\r\n    hasPrevious: pages.hasPrevious\r\n  }\r\n\r\n  const deleteOrder = (orderId: string) => {\r\n    let result = window.confirm(\"Підтвердіть видалення\")\r\n    if (result) {\r\n      dispatch(deleteOrderThunk(orderId))\r\n    } else {\r\n      dispatch(showAlertOrders(\"Видалення Відмінено!\"))\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Імя</th>\r\n          <th scope=\"col\">Номер телефону</th>\r\n          <th scope=\"col\">Адрес</th>\r\n          <th scope=\"col\">Тип картини</th>\r\n          <th scope=\"col\">Зображення</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {orders.map((order) =>\r\n          <tr key={order.id}>\r\n            <td>{order.customerName}</td>\r\n            <td>{order.phoneNumber}</td>\r\n            <td>{order.address}</td>\r\n            <td>{order.canvas.name}</td>\r\n            <td><img className=\"list-img\" src={\"data:image/png;base64,\" + order.image} alt=\"...\" /></td>\r\n            <td><DeleteIcon onClickHandler={() => deleteOrder(order.id)}/></td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Pagination {...pagProps} />\r\n  </>\r\n}","import React, { useEffect } from \"react\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { Alert } from \"../general/alert/alert\"\r\nimport { RootState } from \"../../store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { OrdersList } from \"./ordersList\"\r\nimport { getOrdersThunk } from \"../../store/order/actions\"\r\nimport { IOrder } from \"../../store/order/types\"\r\n\r\nexport const Orders: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const showLoader = useSelector((state: RootState) => state.order.showLoader)\r\n  const alert = useSelector((state: RootState) => state.order.alert)\r\n  const orders: IOrder[] = useSelector((state: RootState) => state.order.ordersData.data)\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrdersThunk({}))\r\n  }, [dispatch])\r\n\r\n  return <>\r\n    <Alert text={alert.text} display={alert.showAlert} />\r\n\r\n    {\r\n      showLoader ? <Spinner /> :\r\n        !orders.length ? <h3>Замовлень немає</h3> :\r\n          <OrdersList />\r\n    }\r\n  </>\r\n}","import Axios, { AxiosRequestConfig } from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { PageListQueryType } from \"../base/types\";\r\nimport { IUserResponse, UserActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderUsers = (data: boolean) => {\r\n  return {\r\n    type: UserActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const showAlertUsers = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: UserActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: UserActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\n\r\nconst fetchUsers = (data: IUserResponse) => {\r\n  return {\r\n    type: UserActionsTypesEnum.fetchUsers,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const getUsersThunk = (data: PageListQueryType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    let config: AxiosRequestConfig = { headers: { \r\n      withCredentials: true,\r\n      \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\r\n    }, params: { \r\n      pageNumber: data.pageNumber, \r\n      pageSize: data.pageSize \r\n    }}\r\n\r\n    Axios.get(api.getUsers, config)\r\n      .then(res => {\r\n        console.log(res)\r\n        dispatch(fetchUsers(res.data))\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteUserThunk = (userId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    let headers: AxiosRequestConfig = { headers: { 'Content-Type': 'application/json-patch+json' } }\r\n    Axios.post(api.deleteUser, userId, headers)\r\n      .then(res => {\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderUsers(false))\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\ntype editRolesRequestType = {\r\n  userId: string,\r\n  roles: string[]\r\n}\r\n\r\nexport const editUserRolesThunk = (data: editRolesRequestType) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderUsers(true))\r\n\r\n    Axios.post(api.editUserRoles, data)\r\n      .then(res => {\r\n        dispatch(showLoaderUsers(false))\r\n      })\r\n      .catch(err => {\r\n        dispatch(showLoaderUsers(false))\r\n        dispatch(showAlertUsers(\"Помилка сервера!\"))\r\n      })\r\n  }\r\n}\r\n\r\n\r\n","import { IState } from \"../base/types\";\r\n\r\nexport enum RolesActionsTypesEnum {\r\n  showLoader = \"ROLES_SHOW_LOADER\",\r\n  showAlert = \"ROLES_SHOW_ALERT\",\r\n  hideAlert = \"ROLES_HIDE_ALERT\",\r\n  fetchRoles = \"FETCH_ROLES\",\r\n}\r\n\r\nexport interface IRole {\r\n  id: string,\r\n  name: string\r\n}\r\n\r\nexport interface IRolesState extends IState {\r\n  rolesData: IRole[]\r\n}","import React, { useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { IRole } from \"../../store/roles/types\"\r\nimport { editUserRolesThunk } from \"../../store/users/actions\"\r\nimport { IUser } from \"../../store/users/types\"\r\n\r\nexport const RolesControl = (props: IUser): JSX.Element => {\r\n  const dispatch = useDispatch()\r\n  const allRoles: IRole[] = useSelector((state: RootState) => state.roles.rolesData)\r\n  const [chekedItems, setChekedItems] = useState<Set<string>>(new Set<string>(props.roles))\r\n\r\n  const checkboxHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!chekedItems.has(event.target.name)) {\r\n      setChekedItems(new Set<string>(chekedItems.add(event.target.name)))\r\n    } else {\r\n      chekedItems.delete(event.target.name)\r\n      setChekedItems(new Set<string>(chekedItems))\r\n    }\r\n  }\r\n\r\n  const changeUserRoles = (event: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n    event.preventDefault()\r\n    dispatch(editUserRolesThunk({ userId: props.id, roles: Array.from(chekedItems) }))\r\n  }\r\n\r\n  return <>\r\n    {allRoles.map((role) =>\r\n      <div className=\"form-check m-3\" key={role.id}>\r\n        <label>{role.name}</label>\r\n        <input\r\n          className=\"m-3\"\r\n          type=\"checkbox\"\r\n          name={role.name}\r\n          checked={chekedItems.has(role.name)}\r\n          onChange={e => checkboxHandler(e)}\r\n        />\r\n      </div>\r\n    )}\r\n\r\n    <span className=\"material-icons\" onClick={e => changeUserRoles(e)}>check</span>\r\n  </>\r\n}","import React, { useState } from \"react\"\r\nimport { Pagination, PaginationType } from \"../general/pagination\"\r\nimport { deleteUserThunk, getUsersThunk, showAlertUsers } from \"../../store/users/actions\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { RolesControl } from \"./rolesControl\"\r\nimport { IUser, IUserResponse } from \"../../store/users/types\"\r\nimport { DeleteIcon } from \"../general/deleteIcon/deleteIcon\"\r\n\r\nexport const UserList: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const pages: IUserResponse = useSelector((state: RootState) => state.user.usersData)\r\n  const users: IUser[] = pages.data\r\n\r\n  const pagProps: PaginationType = {\r\n    handler: getUsersThunk,\r\n    totalPages: pages.totalPages,\r\n    currentPage: pages.currentPage,\r\n    hasNext: pages.hasNext,\r\n    hasPrevious: pages.hasPrevious\r\n  }\r\n\r\n  const deleteUser = (userId: string) => {\r\n    let result = window.confirm(\"Підтвердіть видалення\")\r\n    if (result) {\r\n      dispatch(deleteUserThunk(userId))\r\n    } else {\r\n      dispatch(showAlertUsers(\"Видалення Відмінено!\"))\r\n    }\r\n  }\r\n\r\n\r\n  const rolePanel = (user: IUser) => {\r\n    return <>\r\n      <div className=\"dropdown\">\r\n        <li className=\"nav-item active-item\">\r\n          <div className=\"link\">\r\n            <span className=\"material-icons\">settings</span>\r\n          </div>\r\n        </li>\r\n\r\n        <div className=\"dropdown-content\">\r\n          <RolesControl {...user} />\r\n        </div>\r\n      </div>\r\n    </>\r\n  }\r\n\r\n  return <>\r\n    <table className=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Імя</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Роль</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {users.map((user) =>\r\n          <tr key={user.id}>\r\n            <td>{user.userName}</td>\r\n            <td>{user.email}</td>\r\n            <td>{rolePanel(user)}</td>\r\n            <td><DeleteIcon onClickHandler={() => deleteUser(user.id)}/></td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n\r\n    <Pagination {...pagProps} />\r\n  </>\r\n}","import Axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api\";\r\nimport { IRole, RolesActionsTypesEnum } from \"./types\";\r\n\r\nconst showLoaderRoles = (data: boolean) => {\r\n  return {\r\n    type: RolesActionsTypesEnum.showLoader,\r\n    payload: data\r\n  }\r\n}\r\n\r\nconst showAlertRoles = (data: string) => {\r\n  return (dispatch: Dispatch) => {\r\n    dispatch({\r\n      type: RolesActionsTypesEnum.showAlert,\r\n      payload: data\r\n    })\r\n\r\n    setTimeout(() => {\r\n      dispatch({ type: RolesActionsTypesEnum.hideAlert })\r\n    }, 5000)\r\n  }\r\n}\r\n\r\n\r\nconst fetchRoles = (data: IRole[]) => {\r\n  return {\r\n    type: RolesActionsTypesEnum.fetchRoles,\r\n    payload: data\r\n  }\r\n}\r\n\r\nexport const createRoleThunk = (roleName: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.post(api.createRole, roleName)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRoles(false))\r\n  }\r\n}\r\n\r\nexport const getRolesThunk = () => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.get(api.getRoles)\r\n      .then(res => {\r\n        dispatch(fetchRoles(res.data))\r\n        dispatch(showLoaderRoles(false))\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n        dispatch(showLoaderRoles(false))\r\n      })\r\n  }\r\n}\r\n\r\nexport const deleteRoleThunk = (roleId: string) => {\r\n  return (dispatch: Dispatch<any>) => {\r\n    dispatch(showLoaderRoles(true))\r\n\r\n    Axios.post(api.deleteRole, roleId)\r\n      .then()\r\n      .catch(err => {\r\n        dispatch(showAlertRoles(\"Помилка сервера!\"))\r\n      })\r\n\r\n    dispatch(showLoaderRoles(false))\r\n  }\r\n}\r\n\r\n\r\n","import React, { useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState } from \"../../store\"\r\nimport { Spinner } from \"../general/spinner\"\r\nimport { Alert } from \"../general/alert/alert\"\r\nimport { UserList } from \"./userList\"\r\nimport { getUsersThunk } from \"../../store/users/actions\"\r\nimport { getRolesThunk } from \"../../store/roles/actions\"\r\n\r\nexport const Users: React.FC = () => {\r\n  const showLoader = useSelector((state: RootState) => state.user.showLoader)\r\n  const alert = useSelector((state: RootState) => state.user.alert)\r\n  const users = useSelector((state: RootState) => state.user.usersData.data)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersThunk({}))\r\n    dispatch(getRolesThunk())\r\n  }, [dispatch])\r\n  \r\n  return <>\r\n    <Alert text={alert.text} display={alert.showAlert}/>\r\n\r\n    {\r\n      showLoader ? <Spinner /> :\r\n          !users.length ? <h3>Немає зареєстрованих користувачів</h3> :\r\n            <UserList />\r\n    }\r\n  </>\r\n}","import React from \"react\"\r\nimport { Route } from \"react-router\"\r\n\r\nimport { Navbar } from \"./components/navigation/navbar\"\r\n\r\nimport { Home } from \"./pages/home\"\r\nimport { Gallery } from \"./pages/gallery\"\r\nimport { MakeOrder } from \"./pages/makeOrder\"\r\nimport { Auth } from \"./pages/auth\"\r\nimport { Settings } from \"./pages/settings\"\r\n\r\nimport { Orders } from \"./components/orders/orders\"\r\nimport { Users } from \"./components/users/users\"\r\n\r\n\r\nimport \"./custom.css\"\r\nimport \"./css/form.css\"\r\nimport \"./css/button.css\"\r\n\r\nexport const App: React.FC = () => {\r\n  return <>\r\n    <div className=\"container-fluid h-100\">\r\n      <Navbar />\r\n\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/MakeOrder\" component={MakeOrder} />\r\n      <Route exact path=\"/Gallery\" component={Gallery} />\r\n      <Route exact path=\"/Auth\" component={Auth} />\r\n      <Route exact path=\"/AdminPanel/Orders\" component={Orders} />\r\n      <Route exact path=\"/AdminPanel/Users\" component={Users} />\r\n      <Route exact path=\"/AdminPanel/Settings\" component={Settings} />\r\n    </div>\r\n  </>\r\n}\r\n\r\n\r\n\r\n\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export interface IAlert {\r\n  showAlert: boolean,\r\n  text: string\r\n}\r\n\r\nexport interface IState {\r\n  showLoader: boolean,\r\n  alert: IAlert,\r\n}\r\n\r\nexport interface IAction {\r\n  type: string\r\n  payload?: any\r\n}\r\n\r\nexport const baseInitialState: IState = {\r\n  showLoader: false,\r\n  alert: {\r\n    showAlert: false,\r\n    text: \"\"\r\n  }\r\n}\r\n\r\nexport type PageListQueryType = {\r\n  pageNumber?: number,\r\n  pageSize?: number\r\n }","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IOrdersState, OrdersActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IOrdersState = {\r\n  ordersData: {\r\n    currentPage: 0,\r\n    elementsCount: 0,\r\n    pageSize: 0,\r\n    totalPages: 0,\r\n    hasNext: false,\r\n    hasPrevious: false,\r\n    data: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const ordersReducer = (state: IOrdersState = initialState, action: IAction): IOrdersState => {\r\n  switch (action.type) {\r\n    case OrdersActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case OrdersActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case OrdersActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case OrdersActionsTypesEnum.fetchOrders:\r\n      return {\r\n        ...state,\r\n        ordersData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IRegisterState, RegisterActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IRegisterState = {\r\n  ...baseInitialState\r\n}\r\n\r\nexport const registrationReducer = (state: IRegisterState = initialState, action: IAction): IRegisterState => {\r\n  switch (action.type) {\r\n    case RegisterActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case RegisterActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case RegisterActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IUserState, UserActionsTypesEnum} from \"./types\";\r\n\r\nconst initialState: IUserState = {\r\n  usersData: {\r\n    currentPage: 0,\r\n    elementsCount: 0,\r\n    pageSize: 0,\r\n    totalPages: 0,\r\n    hasNext: false,\r\n    hasPrevious: false,\r\n    data: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const userReducer = (state: IUserState = initialState, action: IAction): IUserState => {\r\n  switch (action.type) {\r\n    case UserActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case UserActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case UserActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case UserActionsTypesEnum.fetchUsers:\r\n      return {\r\n        ...state,\r\n        usersData: action.payload\r\n      }\r\n      \r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IRolesState, RolesActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IRolesState = {\r\n  rolesData: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const rolesReducer = (state: IRolesState = initialState, action: IAction): IRolesState => {\r\n  switch (action.type) {\r\n    case RolesActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case RolesActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case RolesActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case RolesActionsTypesEnum.fetchRoles:\r\n      return {\r\n        ...state,\r\n        rolesData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { CanvasActionsTypesEnum, ICanvasState } from \"./types\";\r\n\r\nconst initialState: ICanvasState = {\r\n  canvasData: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const canvasReducer = (state: ICanvasState = initialState, action: IAction): ICanvasState => {\r\n  switch (action.type) {\r\n    case CanvasActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case CanvasActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case CanvasActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case CanvasActionsTypesEnum.fetchCanvas:\r\n      return {\r\n        ...state,\r\n        canvasData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { EmailSettingsActionsTypesEnum, IEmailSettingsState } from \"./types\";\r\n\r\nconst initialState: IEmailSettingsState = {\r\n  emailSettingsData: {\r\n    serviceIsOn: false,\r\n    from: \" \",\r\n    smtpServer: \" \",\r\n    port: 0,\r\n    userName: \" \",\r\n    password: \" \"\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const emailSettingsReducer = (state: IEmailSettingsState = initialState, action: IAction): IEmailSettingsState => {\r\n  switch (action.type) {\r\n    case EmailSettingsActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case EmailSettingsActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case EmailSettingsActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case EmailSettingsActionsTypesEnum.fetchEmailSettings:\r\n      return {\r\n        ...state,\r\n        emailSettingsData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { GalleryActionsTypesEnum, IGalleryState } from \"./types\";\r\n\r\nconst initialState: IGalleryState = {\r\n  images: [],\r\n  ...baseInitialState\r\n}\r\n\r\nexport const galleryReducer = (state: IGalleryState = initialState, action: IAction): IGalleryState => {\r\n  switch (action.type) {\r\n    case GalleryActionsTypesEnum.showLoader:\r\n      return { ...state, showLoader: action.payload }\r\n\r\n    case GalleryActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }\r\n\r\n    case GalleryActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case GalleryActionsTypesEnum.fetchImages:\r\n      return {\r\n        ...state,\r\n        images: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IInstaState, InstaActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IInstaState = {\r\n  instaData: {\r\n    instaStories: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const instagramReducer = (state: IInstaState = initialState, action: IAction): IInstaState => {\r\n  switch (action.type) {\r\n    case InstaActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case InstaActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case InstaActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case InstaActionsTypesEnum.fetchInstaStories:\r\n      return {\r\n        ...state,\r\n        instaData: {\r\n          instaStories: action.payload\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IInstaSettingsState, InstaSettingsActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IInstaSettingsState = {\r\n  instaSettingsData: {\r\n    username: \"\",\r\n    password: \"\",\r\n    msgReceiverList: []\r\n  },\r\n  ...baseInitialState\r\n}\r\n\r\nexport const instaSettingsReducer = (state: IInstaSettingsState = initialState, action: IAction): IInstaSettingsState => {\r\n  switch (action.type) {\r\n    case InstaSettingsActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case InstaSettingsActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case InstaSettingsActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case InstaSettingsActionsTypesEnum.fetchInstaSettings:\r\n      return {\r\n        ...state,\r\n        instaSettingsData: action.payload\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { baseInitialState, IAction } from \"../base/types\";\r\nimport { IAuthState, AuthActionsTypesEnum } from \"./types\";\r\n\r\nconst initialState: IAuthState = {\r\n  ...baseInitialState,\r\n  isAuthenticated: false,\r\n  user: {\r\n    id: \"\",\r\n    email: \"\",\r\n    userName: \"\",\r\n    roles: [\"\"]\r\n  }\r\n}\r\n\r\n\r\nexport const authReducer = (state: IAuthState = initialState, action: IAction): IAuthState => {\r\n  switch (action.type) {\r\n    case AuthActionsTypesEnum.showLoader:\r\n      return {...state, showLoader: action.payload}\r\n    \r\n    case AuthActionsTypesEnum.showAlert:\r\n      return {\r\n        ...state, \r\n        alert: {\r\n          showAlert: true,\r\n          text: action.payload\r\n        }\r\n      }  \r\n    \r\n    case AuthActionsTypesEnum.hideAlert:\r\n      return {\r\n        ...state,\r\n        alert: {\r\n          showAlert: false,\r\n          text: \"\"\r\n        }\r\n      }\r\n\r\n    case AuthActionsTypesEnum.fetchLoginData:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true\r\n      }\r\n    \r\n    case AuthActionsTypesEnum.logout:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: {\r\n          id: \"\",\r\n          email: \"\",\r\n          userName: \"\",\r\n          roles: [\"\"]\r\n        }\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { combineReducers } from \"redux\"\r\nimport { ordersReducer } from \"./order/reducers\"\r\nimport { registrationReducer } from \"./registration/reducers\"\r\nimport { userReducer } from \"./users/reducers\"\r\nimport { rolesReducer } from \"./roles/reducers\"\r\nimport { canvasReducer } from \"./canvas/reducers\"\r\nimport { emailSettingsReducer } from \"./emailSettings/reducers\"\r\nimport { galleryReducer } from \"./gallery/reducers\"\r\nimport { instagramReducer } from \"./instagram/reducers\"\r\nimport { instaSettingsReducer } from \"./instaSettings/reducers\"\r\nimport { authReducer } from \"./auth/reducers\"\r\n\r\nexport const rootReducer = combineReducers({\r\n  reg: registrationReducer,\r\n  auth: authReducer,\r\n  order: ordersReducer,\r\n  user: userReducer,\r\n  roles: rolesReducer,\r\n  canvas: canvasReducer,\r\n  gallery: galleryReducer,\r\n  instagram: instagramReducer,\r\n  emailSettings: emailSettingsReducer,\r\n  instaSettings: instaSettingsReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport { App } from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { rootReducer } from './store';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl!}>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>,\r\n  rootElement);\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}